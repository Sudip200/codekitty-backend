# README.md

# IRCTC-UI-Redesign
IRCTC app ui redesign

Figma Link :: https://www.figma.com/file/UqeFUl9TCFurE1NfhvKgoR/IRCTC-Redesign---ux.alok-(Community)?type=design&node-id=1-2&mode=design&t=JYdYqC9QmFkyuQHZ-0


App Preview :: 


https://github.com/Kolwankar-Siddhiraj/IRCTC-UI-Redesign/assets/88200767/2779b77b-953a-4244-9b43-7f4842e9b937



# .gitignore

# Miscellaneous
*.class
*.log
*.pyc
*.swp
.DS_Store
.atom/
.buildlog/
.history
.svn/
migrate_working_dir/

# IntelliJ related
*.iml
*.ipr
*.iws
.idea/

# The .vscode folder contains launch configuration and tasks you configure in
# VS Code which you may wish to be included in version control, so this line
# is commented out by default.
#.vscode/

# Flutter/Dart/Pub related
**/doc/api/
**/ios/Flutter/.last_build_id
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.pub-cache/
.pub/
/build/

# Symbolication related
app.*.symbols

# Obfuscation related
app.*.map.json

# Android Studio will place build artifacts here
/android/app/debug
/android/app/profile
/android/app/release


# .metadata

# This file tracks properties of this Flutter project.
# Used by Flutter tool to assess capabilities and perform upgrades etc.
#
# This file should be version controlled and should not be manually edited.

version:
  revision: "db7ef5bf9f59442b0e200a90587e8fa5e0c6336a"
  channel: "stable"

project_type: app

# Tracks metadata for the flutter migrate command
migration:
  platforms:
    - platform: root
      create_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
      base_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
    - platform: android
      create_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
      base_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
    - platform: ios
      create_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
      base_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
    - platform: linux
      create_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
      base_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
    - platform: macos
      create_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
      base_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
    - platform: web
      create_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
      base_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
    - platform: windows
      create_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a
      base_revision: db7ef5bf9f59442b0e200a90587e8fa5e0c6336a

  # User provided section

  # List of Local paths (relative to this file) that should be
  # ignored by the migrate tool.
  #
  # Files that are not part of the templates will be ignored by default.
  unmanaged_files:
    - 'lib/main.dart'
    - 'ios/Runner.xcodeproj/project.pbxproj'


# analysis_options.yaml

# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at https://dart.dev/lints.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    # avoid_print: false  # Uncomment to disable the `avoid_print` rule
    # prefer_single_quotes: true  # Uncomment to enable the `prefer_single_quotes` rule

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options


# README.md

# irctc_ui

A new Flutter project.

## Getting Started

This project is a starting point for a Flutter application.

A few resources to get you started if this is your first Flutter project:

- [Lab: Write your first Flutter app](https://docs.flutter.dev/get-started/codelab)
- [Cookbook: Useful Flutter samples](https://docs.flutter.dev/cookbook)

For help getting started with Flutter development, view the
[online documentation](https://docs.flutter.dev/), which offers tutorials,
samples, guidance on mobile development, and a full API reference.


# pubspec.lock

# Generated by pub
# See https://dart.dev/tools/pub/glossary#lockfile
packages:
  async:
    dependency: transitive
    description:
      name: async
      sha256: "947bfcf187f74dbc5e146c9eb9c0f10c9f8b30743e341481c1e2ed3ecc18c20c"
      url: "https://pub.dev"
    source: hosted
    version: "2.11.0"
  boolean_selector:
    dependency: transitive
    description:
      name: boolean_selector
      sha256: "6cfb5af12253eaf2b368f07bacc5a80d1301a071c73360d746b7f2e32d762c66"
      url: "https://pub.dev"
    source: hosted
    version: "2.1.1"
  characters:
    dependency: transitive
    description:
      name: characters
      sha256: "04a925763edad70e8443c99234dc3328f442e811f1d8fd1a72f1c8ad0f69a605"
      url: "https://pub.dev"
    source: hosted
    version: "1.3.0"
  clock:
    dependency: transitive
    description:
      name: clock
      sha256: cb6d7f03e1de671e34607e909a7213e31d7752be4fb66a86d29fe1eb14bfb5cf
      url: "https://pub.dev"
    source: hosted
    version: "1.1.1"
  collection:
    dependency: transitive
    description:
      name: collection
      sha256: ee67cb0715911d28db6bf4af1026078bd6f0128b07a5f66fb2ed94ec6783c09a
      url: "https://pub.dev"
    source: hosted
    version: "1.18.0"
  cupertino_icons:
    dependency: "direct main"
    description:
      name: cupertino_icons
      sha256: d57953e10f9f8327ce64a508a355f0b1ec902193f66288e8cb5070e7c47eeb2d
      url: "https://pub.dev"
    source: hosted
    version: "1.0.6"
  dotted_line:
    dependency: "direct main"
    description:
      name: dotted_line
      sha256: c931ba331656154711d9420f369f80cf9e8869ca9933ae5fb35b7669bcbe7d2e
      url: "https://pub.dev"
    source: hosted
    version: "3.2.2"
  fading_edge_scrollview:
    dependency: transitive
    description:
      name: fading_edge_scrollview
      sha256: c25c2231652ce774cc31824d0112f11f653881f43d7f5302c05af11942052031
      url: "https://pub.dev"
    source: hosted
    version: "3.0.0"
  fake_async:
    dependency: transitive
    description:
      name: fake_async
      sha256: "511392330127add0b769b75a987850d136345d9227c6b94c96a04cf4a391bf78"
      url: "https://pub.dev"
    source: hosted
    version: "1.3.1"
  flutter:
    dependency: "direct main"
    description: flutter
    source: sdk
    version: "0.0.0"
  flutter_lints:
    dependency: "direct dev"
    description:
      name: flutter_lints
      sha256: a25a15ebbdfc33ab1cd26c63a6ee519df92338a9c10f122adda92938253bef04
      url: "https://pub.dev"
    source: hosted
    version: "2.0.3"
  flutter_test:
    dependency: "direct dev"
    description: flutter
    source: sdk
    version: "0.0.0"
  google_nav_bar:
    dependency: "direct main"
    description:
      name: google_nav_bar
      sha256: "1c8e3882fa66ee7b74c24320668276ca23affbd58f0b14a24c1e5590f4d07ab0"
      url: "https://pub.dev"
    source: hosted
    version: "5.0.6"
  lints:
    dependency: transitive
    description:
      name: lints
      sha256: "0a217c6c989d21039f1498c3ed9f3ed71b354e69873f13a8dfc3c9fe76f1b452"
      url: "https://pub.dev"
    source: hosted
    version: "2.1.1"
  marquee:
    dependency: "direct main"
    description:
      name: marquee
      sha256: "4b5243d2804373bdc25fc93d42c3b402d6ec1f4ee8d0bb72276edd04ae7addb8"
      url: "https://pub.dev"
    source: hosted
    version: "2.2.3"
  matcher:
    dependency: transitive
    description:
      name: matcher
      sha256: "1803e76e6653768d64ed8ff2e1e67bea3ad4b923eb5c56a295c3e634bad5960e"
      url: "https://pub.dev"
    source: hosted
    version: "0.12.16"
  material_color_utilities:
    dependency: transitive
    description:
      name: material_color_utilities
      sha256: "9528f2f296073ff54cb9fee677df673ace1218163c3bc7628093e7eed5203d41"
      url: "https://pub.dev"
    source: hosted
    version: "0.5.0"
  meta:
    dependency: transitive
    description:
      name: meta
      sha256: a6e590c838b18133bb482a2745ad77c5bb7715fb0451209e1a7567d416678b8e
      url: "https://pub.dev"
    source: hosted
    version: "1.10.0"
  path:
    dependency: transitive
    description:
      name: path
      sha256: "8829d8a55c13fc0e37127c29fedf290c102f4e40ae94ada574091fe0ff96c917"
      url: "https://pub.dev"
    source: hosted
    version: "1.8.3"
  pin_input_text_field:
    dependency: "direct main"
    description:
      name: pin_input_text_field
      sha256: "8d6fc670aa673a4df5976086f0e8039972a5b2bcb783c8db8dd3b9b4b072ca90"
      url: "https://pub.dev"
    source: hosted
    version: "4.5.1"
  sky_engine:
    dependency: transitive
    description: flutter
    source: sdk
    version: "0.0.99"
  source_span:
    dependency: transitive
    description:
      name: source_span
      sha256: "53e943d4206a5e30df338fd4c6e7a077e02254531b138a15aec3bd143c1a8b3c"
      url: "https://pub.dev"
    source: hosted
    version: "1.10.0"
  stack_trace:
    dependency: transitive
    description:
      name: stack_trace
      sha256: "73713990125a6d93122541237550ee3352a2d84baad52d375a4cad2eb9b7ce0b"
      url: "https://pub.dev"
    source: hosted
    version: "1.11.1"
  stream_channel:
    dependency: transitive
    description:
      name: stream_channel
      sha256: ba2aa5d8cc609d96bbb2899c28934f9e1af5cddbd60a827822ea467161eb54e7
      url: "https://pub.dev"
    source: hosted
    version: "2.1.2"
  string_scanner:
    dependency: transitive
    description:
      name: string_scanner
      sha256: "556692adab6cfa87322a115640c11f13cb77b3f076ddcc5d6ae3c20242bedcde"
      url: "https://pub.dev"
    source: hosted
    version: "1.2.0"
  term_glyph:
    dependency: transitive
    description:
      name: term_glyph
      sha256: a29248a84fbb7c79282b40b8c72a1209db169a2e0542bce341da992fe1bc7e84
      url: "https://pub.dev"
    source: hosted
    version: "1.2.1"
  test_api:
    dependency: transitive
    description:
      name: test_api
      sha256: "5c2f730018264d276c20e4f1503fd1308dfbbae39ec8ee63c5236311ac06954b"
      url: "https://pub.dev"
    source: hosted
    version: "0.6.1"
  vector_math:
    dependency: transitive
    description:
      name: vector_math
      sha256: "80b3257d1492ce4d091729e3a67a60407d227c27241d6927be0130c98e741803"
      url: "https://pub.dev"
    source: hosted
    version: "2.1.4"
  web:
    dependency: transitive
    description:
      name: web
      sha256: afe077240a270dcfd2aafe77602b4113645af95d0ad31128cc02bce5ac5d5152
      url: "https://pub.dev"
    source: hosted
    version: "0.3.0"
sdks:
  dart: ">=3.2.0 <4.0.0"
  flutter: ">=3.7.0"


# pubspec.yaml

name: irctc_ui
description: "A new Flutter project."
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.0 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter


  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  pin_input_text_field: ^4.5.1
  google_nav_bar: ^5.0.6
  marquee: ^2.2.3
  dotted_line: ^3.2.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - sf/img/


  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages


# gradle.properties

org.gradle.jvmargs=-Xmx4G
android.useAndroidX=true
android.enableJetifier=true


# .gitignore

gradle-wrapper.jar
/.gradle
/captures/
/gradlew
/gradlew.bat
/local.properties
GeneratedPluginRegistrant.java

# Remember to never publicly share your keystore.
# See https://flutter.dev/docs/deployment/android#reference-the-keystore-from-the-app
key.properties
**/*.keystore
**/*.jks


# build.gradle

buildscript {
    ext.kotlin_version = '1.7.10'
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = '../build'
subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"
}
subprojects {
    project.evaluationDependsOn(':app')
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}


# settings.gradle

pluginManagement {
    def flutterSdkPath = {
        def properties = new Properties()
        file("local.properties").withInputStream { properties.load(it) }
        def flutterSdkPath = properties.getProperty("flutter.sdk")
        assert flutterSdkPath != null, "flutter.sdk not set in local.properties"
        return flutterSdkPath
    }
    settings.ext.flutterSdkPath = flutterSdkPath()

    includeBuild("${settings.ext.flutterSdkPath}/packages/flutter_tools/gradle")

    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }

    plugins {
        id "dev.flutter.flutter-gradle-plugin" version "1.0.0" apply false
    }
}

plugins {
    id "dev.flutter.flutter-plugin-loader" version "1.0.0"
    id "com.android.application" version "7.3.0" apply false
}

include ":app"


# .gitignore

**/dgph
*.mode1v3
*.mode2v3
*.moved-aside
*.pbxuser
*.perspectivev3
**/*sync/
.sconsign.dblite
.tags*
**/.vagrant/
**/DerivedData/
Icon?
**/Pods/
**/.symlinks/
profile
xcuserdata
**/.generated/
Flutter/App.framework
Flutter/Flutter.framework
Flutter/Flutter.podspec
Flutter/Generated.xcconfig
Flutter/ephemeral/
Flutter/app.flx
Flutter/app.zip
Flutter/flutter_assets/
Flutter/flutter_export_environment.sh
ServiceDefinitions.json
Runner/GeneratedPluginRegistrant.*

# Exceptions to above rules.
!default.mode1v3
!default.mode2v3
!default.pbxuser
!default.perspectivev3


# .gitignore

flutter/ephemeral


# main.cc

#include "my_application.h"

int main(int argc, char** argv) {
  g_autoptr(MyApplication) app = my_application_new();
  return g_application_run(G_APPLICATION(app), argc, argv);
}


# CMakeLists.txt

# Project-level configuration.
cmake_minimum_required(VERSION 3.10)
project(runner LANGUAGES CXX)

# The name of the executable created for the application. Change this to change
# the on-disk name of your application.
set(BINARY_NAME "irctc_ui")
# The unique GTK application identifier for this application. See:
# https://wiki.gnome.org/HowDoI/ChooseApplicationID
set(APPLICATION_ID "com.example.irctc_ui")

# Explicitly opt in to modern CMake behaviors to avoid warnings with recent
# versions of CMake.
cmake_policy(SET CMP0063 NEW)

# Load bundled libraries from the lib/ directory relative to the binary.
set(CMAKE_INSTALL_RPATH "$ORIGIN/lib")

# Root filesystem for cross-building.
if(FLUTTER_TARGET_PLATFORM_SYSROOT)
  set(CMAKE_SYSROOT ${FLUTTER_TARGET_PLATFORM_SYSROOT})
  set(CMAKE_FIND_ROOT_PATH ${CMAKE_SYSROOT})
  set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
  set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
  set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
endif()

# Define build configuration options.
if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
  set(CMAKE_BUILD_TYPE "Debug" CACHE
    STRING "Flutter build mode" FORCE)
  set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
    "Debug" "Profile" "Release")
endif()

# Compilation settings that should be applied to most targets.
#
# Be cautious about adding new options here, as plugins use this function by
# default. In most cases, you should add new options to specific targets instead
# of modifying this function.
function(APPLY_STANDARD_SETTINGS TARGET)
  target_compile_features(${TARGET} PUBLIC cxx_std_14)
  target_compile_options(${TARGET} PRIVATE -Wall -Werror)
  target_compile_options(${TARGET} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:-O3>")
  target_compile_definitions(${TARGET} PRIVATE "$<$<NOT:$<CONFIG:Debug>>:NDEBUG>")
endfunction()

# Flutter library and tool build rules.
set(FLUTTER_MANAGED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/flutter")
add_subdirectory(${FLUTTER_MANAGED_DIR})

# System-level dependencies.
find_package(PkgConfig REQUIRED)
pkg_check_modules(GTK REQUIRED IMPORTED_TARGET gtk+-3.0)

add_definitions(-DAPPLICATION_ID="${APPLICATION_ID}")

# Define the application target. To change its name, change BINARY_NAME above,
# not the value here, or `flutter run` will no longer work.
#
# Any new source files that you add to the application should be added here.
add_executable(${BINARY_NAME}
  "main.cc"
  "my_application.cc"
  "${FLUTTER_MANAGED_DIR}/generated_plugin_registrant.cc"
)

# Apply the standard set of build settings. This can be removed for applications
# that need different build settings.
apply_standard_settings(${BINARY_NAME})

# Add dependency libraries. Add any application-specific dependencies here.
target_link_libraries(${BINARY_NAME} PRIVATE flutter)
target_link_libraries(${BINARY_NAME} PRIVATE PkgConfig::GTK)

# Run the Flutter tool portions of the build. This must not be removed.
add_dependencies(${BINARY_NAME} flutter_assemble)

# Only the install-generated bundle's copy of the executable will launch
# correctly, since the resources must in the right relative locations. To avoid
# people trying to run the unbundled copy, put it in a subdirectory instead of
# the default top-level location.
set_target_properties(${BINARY_NAME}
  PROPERTIES
  RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/intermediates_do_not_run"
)


# Generated plugin build rules, which manage building the plugins and adding
# them to the application.
include(flutter/generated_plugins.cmake)


# === Installation ===
# By default, "installing" just makes a relocatable bundle in the build
# directory.
set(BUILD_BUNDLE_DIR "${PROJECT_BINARY_DIR}/bundle")
if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  set(CMAKE_INSTALL_PREFIX "${BUILD_BUNDLE_DIR}" CACHE PATH "..." FORCE)
endif()

# Start with a clean build bundle directory every time.
install(CODE "
  file(REMOVE_RECURSE \"${BUILD_BUNDLE_DIR}/\")
  " COMPONENT Runtime)

set(INSTALL_BUNDLE_DATA_DIR "${CMAKE_INSTALL_PREFIX}/data")
set(INSTALL_BUNDLE_LIB_DIR "${CMAKE_INSTALL_PREFIX}/lib")

install(TARGETS ${BINARY_NAME} RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}"
  COMPONENT Runtime)

install(FILES "${FLUTTER_ICU_DATA_FILE}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
  COMPONENT Runtime)

install(FILES "${FLUTTER_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
  COMPONENT Runtime)

foreach(bundled_library ${PLUGIN_BUNDLED_LIBRARIES})
  install(FILES "${bundled_library}"
    DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
    COMPONENT Runtime)
endforeach(bundled_library)

# Copy the native assets provided by the build.dart from all packages.
set(NATIVE_ASSETS_DIR "${PROJECT_BUILD_DIR}native_assets/linux/")
install(DIRECTORY "${NATIVE_ASSETS_DIR}"
   DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
   COMPONENT Runtime)

# Fully re-copy the assets directory on each build to avoid having stale files
# from a previous install.
set(FLUTTER_ASSET_DIR_NAME "flutter_assets")
install(CODE "
  file(REMOVE_RECURSE \"${INSTALL_BUNDLE_DATA_DIR}/${FLUTTER_ASSET_DIR_NAME}\")
  " COMPONENT Runtime)
install(DIRECTORY "${PROJECT_BUILD_DIR}/${FLUTTER_ASSET_DIR_NAME}"
  DESTINATION "${INSTALL_BUNDLE_DATA_DIR}" COMPONENT Runtime)

# Install the AOT library on non-Debug builds only.
if(NOT CMAKE_BUILD_TYPE MATCHES "Debug")
  install(FILES "${AOT_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
    COMPONENT Runtime)
endif()


# my_application.cc

#include "my_application.h"

#include <flutter_linux/flutter_linux.h>
#ifdef GDK_WINDOWING_X11
#include <gdk/gdkx.h>
#endif

#include "flutter/generated_plugin_registrant.h"

struct _MyApplication {
  GtkApplication parent_instance;
  char** dart_entrypoint_arguments;
};

G_DEFINE_TYPE(MyApplication, my_application, GTK_TYPE_APPLICATION)

// Implements GApplication::activate.
static void my_application_activate(GApplication* application) {
  MyApplication* self = MY_APPLICATION(application);
  GtkWindow* window =
      GTK_WINDOW(gtk_application_window_new(GTK_APPLICATION(application)));

  // Use a header bar when running in GNOME as this is the common style used
  // by applications and is the setup most users will be using (e.g. Ubuntu
  // desktop).
  // If running on X and not using GNOME then just use a traditional title bar
  // in case the window manager does more exotic layout, e.g. tiling.
  // If running on Wayland assume the header bar will work (may need changing
  // if future cases occur).
  gboolean use_header_bar = TRUE;
#ifdef GDK_WINDOWING_X11
  GdkScreen* screen = gtk_window_get_screen(window);
  if (GDK_IS_X11_SCREEN(screen)) {
    const gchar* wm_name = gdk_x11_screen_get_window_manager_name(screen);
    if (g_strcmp0(wm_name, "GNOME Shell") != 0) {
      use_header_bar = FALSE;
    }
  }
#endif
  if (use_header_bar) {
    GtkHeaderBar* header_bar = GTK_HEADER_BAR(gtk_header_bar_new());
    gtk_widget_show(GTK_WIDGET(header_bar));
    gtk_header_bar_set_title(header_bar, "irctc_ui");
    gtk_header_bar_set_show_close_button(header_bar, TRUE);
    gtk_window_set_titlebar(window, GTK_WIDGET(header_bar));
  } else {
    gtk_window_set_title(window, "irctc_ui");
  }

  gtk_window_set_default_size(window, 1280, 720);
  gtk_widget_show(GTK_WIDGET(window));

  g_autoptr(FlDartProject) project = fl_dart_project_new();
  fl_dart_project_set_dart_entrypoint_arguments(project, self->dart_entrypoint_arguments);

  FlView* view = fl_view_new(project);
  gtk_widget_show(GTK_WIDGET(view));
  gtk_container_add(GTK_CONTAINER(window), GTK_WIDGET(view));

  fl_register_plugins(FL_PLUGIN_REGISTRY(view));

  gtk_widget_grab_focus(GTK_WIDGET(view));
}

// Implements GApplication::local_command_line.
static gboolean my_application_local_command_line(GApplication* application, gchar*** arguments, int* exit_status) {
  MyApplication* self = MY_APPLICATION(application);
  // Strip out the first argument as it is the binary name.
  self->dart_entrypoint_arguments = g_strdupv(*arguments + 1);

  g_autoptr(GError) error = nullptr;
  if (!g_application_register(application, nullptr, &error)) {
     g_warning("Failed to register: %s", error->message);
     *exit_status = 1;
     return TRUE;
  }

  g_application_activate(application);
  *exit_status = 0;

  return TRUE;
}

// Implements GObject::dispose.
static void my_application_dispose(GObject* object) {
  MyApplication* self = MY_APPLICATION(object);
  g_clear_pointer(&self->dart_entrypoint_arguments, g_strfreev);
  G_OBJECT_CLASS(my_application_parent_class)->dispose(object);
}

static void my_application_class_init(MyApplicationClass* klass) {
  G_APPLICATION_CLASS(klass)->activate = my_application_activate;
  G_APPLICATION_CLASS(klass)->local_command_line = my_application_local_command_line;
  G_OBJECT_CLASS(klass)->dispose = my_application_dispose;
}

static void my_application_init(MyApplication* self) {}

MyApplication* my_application_new() {
  return MY_APPLICATION(g_object_new(my_application_get_type(),
                                     "application-id", APPLICATION_ID,
                                     "flags", G_APPLICATION_NON_UNIQUE,
                                     nullptr));
}


# my_application.h

#ifndef FLUTTER_MY_APPLICATION_H_
#define FLUTTER_MY_APPLICATION_H_

#include <gtk/gtk.h>

G_DECLARE_FINAL_TYPE(MyApplication, my_application, MY, APPLICATION,
                     GtkApplication)

/**
 * my_application_new:
 *
 * Creates a new Flutter-based application.
 *
 * Returns: a new #MyApplication.
 */
MyApplication* my_application_new();

#endif  // FLUTTER_MY_APPLICATION_H_


# backup.txt

Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          // home
          InkWell(
            onTap: () => setState(() {
              currentTab = 1;
            }),
            splashColor: Colors.transparent,
            child: Container(
              padding: EdgeInsets.symmetric(vertical: setHeight(5), horizontal: setWidth(5)),
              height: setHeight(50),
              width: setWidth(120),
              decoration: BoxDecoration(
                  color: currentTab == 1
                      ? Color(0xFF2475EE)
                      : Colors.transparent,
                  borderRadius: BorderRadius.circular(50)),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Icon(Icons.home_outlined, size: setHeight(32), color: currentTab == 1 ? Colors.white : Color(0xFF9A9A9A)),
                  SizedBox(width: 5),
                  Text(
                    "Home",
                    style: TextStyle(
                        fontSize: setHeight(16),
                        fontWeight: FontWeight.w700,
                        color:
                            currentTab == 1 ? Colors.white : Color(0xFF656A76)),
                  )
                ],
              ),
            ),
          ),

          // public
          InkWell(
            onTap: () => setState(() {
              currentTab = 2;
            }),
            splashColor: Colors.transparent,
            child: Container(
              padding: EdgeInsets.symmetric(
                  vertical: setHeight(5), horizontal: setWidth(5)),
              height: setHeight(50),
              width: setWidth(120),
              decoration: BoxDecoration(
                  color: currentTab == 2
                      ? Color(0xFF3751A6)
                      : Colors.transparent,
                  borderRadius: BorderRadius.circular(50)),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Icon(Icons.public_rounded, size: setHeight(32), color: currentTab == 2 ? Colors.white : Color(0xFF656A76)),
                  SizedBox(width: 5),
                  Text(
                    currentTab == 2 ? "Public" : "",
                    style: TextStyle(
                        fontSize: setHeight(16),
                        fontWeight: FontWeight.w700,
                        color: Colors.white),
                  )
                ],
              ),
            ),
          ),
          
          // public
          InkWell(
            onTap: () => setState(() {
              currentTab = 2;
            }),
            splashColor: Colors.transparent,
            child: Container(
              padding: EdgeInsets.symmetric(
                  vertical: setHeight(5), horizontal: setWidth(5)),
              height: setHeight(50),
              width: setWidth(120),
              decoration: BoxDecoration(
                  color: currentTab == 2
                      ? Color(0xFF3751A6)
                      : Colors.transparent,
                  borderRadius: BorderRadius.circular(50)),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Icon(Icons.public_rounded, size: setHeight(32), color: currentTab == 2 ? Colors.white : Color(0xFF656A76)),
                  SizedBox(width: 5),
                  Text(
                    currentTab == 2 ? "Public" : "",
                    style: TextStyle(
                        fontSize: setHeight(16),
                        fontWeight: FontWeight.w700,
                        color: Colors.white),
                  )
                ],
              ),
            ),
          ),
          
          // public
          InkWell(
            onTap: () => setState(() {
              currentTab = 2;
            }),
            splashColor: Colors.transparent,
            child: Container(
              padding: EdgeInsets.symmetric(
                  vertical: setHeight(5), horizontal: setWidth(5)),
              height: setHeight(50),
              width: setWidth(120),
              decoration: BoxDecoration(
                  color: currentTab == 2
                      ? Color(0xFF3751A6)
                      : Colors.transparent,
                  borderRadius: BorderRadius.circular(50)),
              child: Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: [
                  Icon(Icons.public_rounded, size: setHeight(32), color: currentTab == 2 ? Colors.white : Color(0xFF656A76)),
                  SizedBox(width: 5),
                  Text(
                    currentTab == 2 ? "Public" : "",
                    style: TextStyle(
                        fontSize: setHeight(16),
                        fontWeight: FontWeight.w700,
                        color: Colors.white),
                  )
                ],
              ),
            ),
          ),
          ],
      ),
    




    SingleChildScrollView(
                  child: Column(
                    children: [
                      Container(
                        height: setHeight(100),
                        color: Colors.amber,
                      ),
                      Container(
                        height: setHeight(100),
                        color: Colors.pink,
                      ),
                      Container(
                        height: setHeight(100),
                        color: Colors.blue,
                      ),
                      Container(
                        height: setHeight(100),
                        color: Colors.red,
                      ),
                      Container(
                        height: setHeight(100),
                        color: Colors.green,
                      ),
                      Container(
                        height: setHeight(100),
                        color: Colors.orange,
                      ),
                      Container(
                        height: setHeight(100),
                        color: Colors.purple,
                      ),
                    ],
                  ),
                )

# get_started.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables

import 'package:flutter/material.dart';
import 'package:irctc_ui/authentication/verify_pin.dart';
import 'package:irctc_ui/utils.dart';

class GetStartedScreen extends StatefulWidget {
  const GetStartedScreen({super.key});

  @override
  State<GetStartedScreen> createState() => _GetStartedScreenState();
}

class _GetStartedScreenState extends State<GetStartedScreen> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Column(
        children: [
          Expanded(
            flex: 8,
            child: Stack(
              children: [
                Container(
                  foregroundDecoration: BoxDecoration(
                    gradient: LinearGradient(
                      colors: [
                        Colors.transparent,
                        Colors.transparent,
                        Colors.transparent,
                        Colors.black
                      ],
                      begin: Alignment.topCenter,
                      end: Alignment.bottomCenter,
                      stops: [0, 0.2, 0.8, 1],
                    ),
                  ),
                  child: Image.asset(
                    "sf/img/get_started_train.png",
                    width: double.maxFinite,
                    fit: BoxFit.cover,
                  ),
                ),

                // logo
                Align(
                    alignment: Alignment.topCenter,
                    child: Padding(
                      padding: EdgeInsets.only(top: AppBar().preferredSize.height + 5),
                      child: Image.asset("sf/img/irctc_w.png"),
                    )
                )
              ],
            ),
          ),
          Expanded(
            flex: 4,
            child: Container(
              padding: EdgeInsets.symmetric(
                  horizontal: setWidth(30), vertical: setHeight(16)),
              color: Color(0xFF000000),
              child: Column(
                children: [
                  Text(
                    "Next Generation eTicketing System",
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: setHeight(40),
                        fontWeight: FontWeight.w600,
                        color: Colors.white),
                  ),
                  SizedBox(height: setHeight(12)),
                  Text(
                    "Now with improved user experience",
                    textAlign: TextAlign.center,
                    style: TextStyle(
                        fontSize: setHeight(17),
                        fontWeight: FontWeight.w500,
                        color: Color(0xFFADADAD)),
                  ),
                  SizedBox(height: setHeight(15)),

                  // login button
                  InkWell(
                    onTap: () {
                        Navigator.pushReplacement(
                          context,
                          MaterialPageRoute(
                              builder: (context) => VerifyPinScreen()));
                    },
                    child: Container(
                      height: setHeight(57),
                      decoration: BoxDecoration(
                          color: Color(0xFF2475EE),
                          borderRadius: BorderRadius.circular(9)),
                      child: Center(
                        child: Text(
                          "Login with IRCTC account",
                          style: TextStyle(
                              color: Colors.white,
                              fontWeight: FontWeight.bold,
                              fontSize: setHeight(18)),
                        ),
                      ),
                    ),
                  ),

                  // bottom
                  SizedBox(height: setHeight(12)),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Text(
                        "Don't have an account yet?",
                        style: TextStyle(
                            fontSize: setHeight(16),
                            fontWeight: FontWeight.w500,
                            color: Color(0xFFADADAD)),
                      ),
                      SizedBox(width: setWidth(7)),
                      Text(
                        "Sign up",
                        style: TextStyle(
                            fontSize: setHeight(16),
                            fontWeight: FontWeight.w500,
                            color: Colors.white,
                            decoration: TextDecoration.underline,
                            decorationColor: Colors.white,
                            decorationThickness: 1),
                      ),
                    ],
                  )
                ],
              ),
            ),
          )
        ],
      ),
    );
  }
}


# main.dart

// ignore_for_file: prefer_const_constructors

import 'dart:async';

import 'package:flutter/material.dart';
import 'package:irctc_ui/get_started.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
        debugShowCheckedModeBanner: false,
        title: 'Flutter Demo',
        home: SplashScreen());
  }
}

class SplashScreen extends StatefulWidget {
  const SplashScreen({super.key});

  @override
  State<SplashScreen> createState() => _SplashScreenState();
}

class _SplashScreenState extends State<SplashScreen> {
  @override
  void initState() {
    super.initState();

    Timer(
        Duration(milliseconds: 1600),
        () => setState(() {
              Navigator.pushReplacement(context,
                  MaterialPageRoute(builder: (context) => GetStartedScreen()));
            }));
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      // body
      body: Container(
        color: Color(0xFF010101),
        child: Center(
          child: Image.asset("sf/img/irctc_logo.png"),
        ),
      ),
    );
  }
}


# utils.dart

// ignore_for_file: avoid_print, prefer_const_constructors, non_constant_identifier_names

import 'dart:ui';

import 'package:flutter/material.dart';

var screen = PlatformDispatcher.instance.views.first.physicalSize /
    PlatformDispatcher.instance.views.first.devicePixelRatio;

int currentTab = 1;

double setWidth(double w) {
  double width = ((screen.width).toInt() / 430) * w;
  dynamic tw = width.toInt();
  width = tw.toDouble();
  return width;
}

double setHeight(double h) {
  double appb = AppBar().preferredSize.height;
  dynamic pixel = ((screen.height).toInt() - appb) / 932;
  dynamic th = (pixel * h).toInt();
  double height = th.toDouble();
  return height;
}

void screenHeightWidth() {
  print("Screen height :: ${screen.height}");
  print("Screen width :: ${screen.width}");
}

void displaySnackBar(context, bool success, String text) {
  ScaffoldMessenger.of(context).showSnackBar(SnackBar(
    padding: EdgeInsets.symmetric(vertical: 5, horizontal: 16),
    backgroundColor: success ? Colors.green : Colors.red,
    content: Text(text,
        style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold)),
    action: SnackBarAction(
      textColor: Colors.white,
      label: 'Ok',
      onPressed: () {
        print("OK");
      },
    ),
  ));
}


# .gitignore

# Flutter-related
**/Flutter/ephemeral/
**/Pods/

# Xcode-related
**/dgph
**/xcuserdata/


# index.html

<!DOCTYPE html>
<html>
<head>
  <!--
    If you are serving your web app in a path other than the root, change the
    href value below to reflect the base path you are serving from.

    The path provided below has to start and end with a slash "/" in order for
    it to work correctly.

    For more details:
    * https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base

    This is a placeholder for base href that will be replaced by the value of
    the `--base-href` argument provided to `flutter build`.
  -->
  <base href="$FLUTTER_BASE_HREF">

  <meta charset="UTF-8">
  <meta content="IE=Edge" http-equiv="X-UA-Compatible">
  <meta name="description" content="A new Flutter project.">

  <!-- iOS meta tags & icons -->
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="black">
  <meta name="apple-mobile-web-app-title" content="irctc_ui">
  <link rel="apple-touch-icon" href="icons/Icon-192.png">

  <!-- Favicon -->
  <link rel="icon" type="image/png" href="favicon.png"/>

  <title>irctc_ui</title>
  <link rel="manifest" href="manifest.json">

  <script>
    // The value below is injected by flutter build, do not touch.
    const serviceWorkerVersion = null;
  </script>
  <!-- This script adds the flutter initialization JS code -->
  <script src="flutter.js" defer></script>
</head>
<body>
  <script>
    window.addEventListener('load', function(ev) {
      // Download main.dart.js
      _flutter.loader.loadEntrypoint({
        serviceWorker: {
          serviceWorkerVersion: serviceWorkerVersion,
        },
        onEntrypointLoaded: function(engineInitializer) {
          engineInitializer.initializeEngine().then(function(appRunner) {
            appRunner.runApp();
          });
        }
      });
    });
  </script>
</body>
</html>


# widget_test.dart

// This is a basic Flutter widget test.
//
// To perform an interaction with a widget in your test, use the WidgetTester
// utility in the flutter_test package. For example, you can send tap and scroll
// gestures. You can also use WidgetTester to find child widgets in the widget
// tree, read text, and verify that the values of widget properties are correct.

import 'package:flutter/material.dart';
import 'package:flutter_test/flutter_test.dart';

import 'package:irctc_ui/main.dart';

void main() {
  testWidgets('Counter increments smoke test', (WidgetTester tester) async {
    // Build our app and trigger a frame.
    await tester.pumpWidget(const MyApp());

    // Verify that our counter starts at 0.
    expect(find.text('0'), findsOneWidget);
    expect(find.text('1'), findsNothing);

    // Tap the '+' icon and trigger a frame.
    await tester.tap(find.byIcon(Icons.add));
    await tester.pump();

    // Verify that our counter has incremented.
    expect(find.text('0'), findsNothing);
    expect(find.text('1'), findsOneWidget);
  });
}


# manifest.json

{
    "name": "irctc_ui",
    "short_name": "irctc_ui",
    "start_url": ".",
    "display": "standalone",
    "background_color": "#0175C2",
    "theme_color": "#0175C2",
    "description": "A new Flutter project.",
    "orientation": "portrait-primary",
    "prefer_related_applications": false,
    "icons": [
        {
            "src": "icons/Icon-192.png",
            "sizes": "192x192",
            "type": "image/png"
        },
        {
            "src": "icons/Icon-512.png",
            "sizes": "512x512",
            "type": "image/png"
        },
        {
            "src": "icons/Icon-maskable-192.png",
            "sizes": "192x192",
            "type": "image/png",
            "purpose": "maskable"
        },
        {
            "src": "icons/Icon-maskable-512.png",
            "sizes": "512x512",
            "type": "image/png",
            "purpose": "maskable"
        }
    ]
}


# .gitignore

flutter/ephemeral/

# Visual Studio user-specific files.
*.suo
*.user
*.userosscache
*.sln.docstates

# Visual Studio build-related files.
x64/
x86/

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/


# build.gradle

plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.irctc_ui"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.irctc_ui"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {}


# AppFrameworkInfo.plist

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
  <key>CFBundleDevelopmentRegion</key>
  <string>en</string>
  <key>CFBundleExecutable</key>
  <string>App</string>
  <key>CFBundleIdentifier</key>
  <string>io.flutter.flutter.app</string>
  <key>CFBundleInfoDictionaryVersion</key>
  <string>6.0</string>
  <key>CFBundleName</key>
  <string>App</string>
  <key>CFBundlePackageType</key>
  <string>FMWK</string>
  <key>CFBundleShortVersionString</key>
  <string>1.0</string>
  <key>CFBundleSignature</key>
  <string>????</string>
  <key>CFBundleVersion</key>
  <string>1.0</string>
  <key>MinimumOSVersion</key>
  <string>11.0</string>
</dict>
</plist>


# Debug.xcconfig

#include "Generated.xcconfig"


# Release.xcconfig

#include "Generated.xcconfig"


# project.pbxproj

// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 54;
	objects = {

/* Begin PBXBuildFile section */
		1498D2341E8E89220040F4C2 /* GeneratedPluginRegistrant.m in Sources */ = {isa = PBXBuildFile; fileRef = 1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */; };
		3B3967161E833CAA004F5970 /* AppFrameworkInfo.plist in Resources */ = {isa = PBXBuildFile; fileRef = 3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */; };
		74858FAF1ED2DC5600515810 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 74858FAE1ED2DC5600515810 /* AppDelegate.swift */; };
		97C146FC1CF9000F007C117D /* Main.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FA1CF9000F007C117D /* Main.storyboard */; };
		97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FD1CF9000F007C117D /* Assets.xcassets */; };
		97C147011CF9000F007C117D /* LaunchScreen.storyboard in Resources */ = {isa = PBXBuildFile; fileRef = 97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */; };
		331C808B294A63AB00263BE5 /* RunnerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 331C807B294A618700263BE5 /* RunnerTests.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		331C8085294A63A400263BE5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 97C146E61CF9000F007C117D /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 97C146ED1CF9000F007C117D;
			remoteInfo = Runner;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		9705A1C41CF9048500538489 /* Embed Frameworks */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
			);
			name = "Embed Frameworks";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		1498D2321E8E86230040F4C2 /* GeneratedPluginRegistrant.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = GeneratedPluginRegistrant.h; sourceTree = "<group>"; };
		1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.objc; path = GeneratedPluginRegistrant.m; sourceTree = "<group>"; };
		3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.xml; name = AppFrameworkInfo.plist; path = Flutter/AppFrameworkInfo.plist; sourceTree = "<group>"; };
		74858FAD1ED2DC5600515810 /* Runner-Bridging-Header.h */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.c.h; path = "Runner-Bridging-Header.h"; sourceTree = "<group>"; };
		74858FAE1ED2DC5600515810 /* AppDelegate.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
		7AFA3C8E1D35360C0083082E /* Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = Release.xcconfig; path = Flutter/Release.xcconfig; sourceTree = "<group>"; };
		9740EEB21CF90195004384FC /* Debug.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; name = Debug.xcconfig; path = Flutter/Debug.xcconfig; sourceTree = "<group>"; };
		9740EEB31CF90195004384FC /* Generated.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; name = Generated.xcconfig; path = Flutter/Generated.xcconfig; sourceTree = "<group>"; };
		97C146EE1CF9000F007C117D /* Runner.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = Runner.app; sourceTree = BUILT_PRODUCTS_DIR; };
		97C146FB1CF9000F007C117D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/Main.storyboard; sourceTree = "<group>"; };
		97C146FD1CF9000F007C117D /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; path = Assets.xcassets; sourceTree = "<group>"; };
		97C147001CF9000F007C117D /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.storyboard; name = Base; path = Base.lproj/LaunchScreen.storyboard; sourceTree = "<group>"; };
		97C147021CF9000F007C117D /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		331C807B294A618700263BE5 /* RunnerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RunnerTests.swift; sourceTree = "<group>"; };
		331C8081294A63A400263BE5 /* RunnerTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = RunnerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		97C146EB1CF9000F007C117D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		9740EEB11CF90186004384FC /* Flutter */ = {
			isa = PBXGroup;
			children = (
				3B3967151E833CAA004F5970 /* AppFrameworkInfo.plist */,
				9740EEB21CF90195004384FC /* Debug.xcconfig */,
				7AFA3C8E1D35360C0083082E /* Release.xcconfig */,
				9740EEB31CF90195004384FC /* Generated.xcconfig */,
			);
			name = Flutter;
			sourceTree = "<group>";
		};
		331C8082294A63A400263BE5 /* RunnerTests */ = {
			isa = PBXGroup;
			children = (
				331C807B294A618700263BE5 /* RunnerTests.swift */,
			);
			path = RunnerTests;
			sourceTree = "<group>";
		};
		97C146E51CF9000F007C117D = {
			isa = PBXGroup;
			children = (
				9740EEB11CF90186004384FC /* Flutter */,
				97C146F01CF9000F007C117D /* Runner */,
				97C146EF1CF9000F007C117D /* Products */,
				331C8082294A63A400263BE5 /* RunnerTests */,
			);
			sourceTree = "<group>";
		};
		97C146EF1CF9000F007C117D /* Products */ = {
			isa = PBXGroup;
			children = (
				97C146EE1CF9000F007C117D /* Runner.app */,
				331C8081294A63A400263BE5 /* RunnerTests.xctest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		97C146F01CF9000F007C117D /* Runner */ = {
			isa = PBXGroup;
			children = (
				97C146FA1CF9000F007C117D /* Main.storyboard */,
				97C146FD1CF9000F007C117D /* Assets.xcassets */,
				97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */,
				97C147021CF9000F007C117D /* Info.plist */,
				1498D2321E8E86230040F4C2 /* GeneratedPluginRegistrant.h */,
				1498D2331E8E89220040F4C2 /* GeneratedPluginRegistrant.m */,
				74858FAE1ED2DC5600515810 /* AppDelegate.swift */,
				74858FAD1ED2DC5600515810 /* Runner-Bridging-Header.h */,
			);
			path = Runner;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		331C8080294A63A400263BE5 /* RunnerTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 331C8087294A63A400263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */;
			buildPhases = (
				331C807D294A63A400263BE5 /* Sources */,
				331C807E294A63A400263BE5 /* Frameworks */,
				331C807F294A63A400263BE5 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				331C8086294A63A400263BE5 /* PBXTargetDependency */,
			);
			name = RunnerTests;
			productName = RunnerTests;
			productReference = 331C8081294A63A400263BE5 /* RunnerTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		97C146ED1CF9000F007C117D /* Runner */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 97C147051CF9000F007C117D /* Build configuration list for PBXNativeTarget "Runner" */;
			buildPhases = (
				9740EEB61CF901F6004384FC /* Run Script */,
				97C146EA1CF9000F007C117D /* Sources */,
				97C146EB1CF9000F007C117D /* Frameworks */,
				97C146EC1CF9000F007C117D /* Resources */,
				9705A1C41CF9048500538489 /* Embed Frameworks */,
				3B06AD1E1E4923F5004D2608 /* Thin Binary */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Runner;
			productName = Runner;
			productReference = 97C146EE1CF9000F007C117D /* Runner.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		97C146E61CF9000F007C117D /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = YES;
				LastUpgradeCheck = 1430;
				ORGANIZATIONNAME = "";
				TargetAttributes = {
					331C8080294A63A400263BE5 = {
						CreatedOnToolsVersion = 14.0;
						TestTargetID = 97C146ED1CF9000F007C117D;
					};
					97C146ED1CF9000F007C117D = {
						CreatedOnToolsVersion = 7.3.1;
						LastSwiftMigration = 1100;
					};
				};
			};
			buildConfigurationList = 97C146E91CF9000F007C117D /* Build configuration list for PBXProject "Runner" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 97C146E51CF9000F007C117D;
			productRefGroup = 97C146EF1CF9000F007C117D /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				97C146ED1CF9000F007C117D /* Runner */,
				331C8080294A63A400263BE5 /* RunnerTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		331C807F294A63A400263BE5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		97C146EC1CF9000F007C117D /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				97C147011CF9000F007C117D /* LaunchScreen.storyboard in Resources */,
				3B3967161E833CAA004F5970 /* AppFrameworkInfo.plist in Resources */,
				97C146FE1CF9000F007C117D /* Assets.xcassets in Resources */,
				97C146FC1CF9000F007C117D /* Main.storyboard in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		3B06AD1E1E4923F5004D2608 /* Thin Binary */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"${TARGET_BUILD_DIR}/${INFOPLIST_PATH}",
			);
			name = "Thin Binary";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "/bin/sh \"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\" embed_and_thin";
		};
		9740EEB61CF901F6004384FC /* Run Script */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
			);
			name = "Run Script";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "/bin/sh \"$FLUTTER_ROOT/packages/flutter_tools/bin/xcode_backend.sh\" build";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		331C807D294A63A400263BE5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				331C808B294A63AB00263BE5 /* RunnerTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		97C146EA1CF9000F007C117D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				74858FAF1ED2DC5600515810 /* AppDelegate.swift in Sources */,
				1498D2341E8E89220040F4C2 /* GeneratedPluginRegistrant.m in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		331C8086294A63A400263BE5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 97C146ED1CF9000F007C117D /* Runner */;
			targetProxy = 331C8085294A63A400263BE5 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		97C146FA1CF9000F007C117D /* Main.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				97C146FB1CF9000F007C117D /* Base */,
			);
			name = Main.storyboard;
			sourceTree = "<group>";
		};
		97C146FF1CF9000F007C117D /* LaunchScreen.storyboard */ = {
			isa = PBXVariantGroup;
			children = (
				97C147001CF9000F007C117D /* Base */,
			);
			name = LaunchScreen.storyboard;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		249021D3217E4FDB00AE95B9 /* Profile */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				SUPPORTED_PLATFORMS = iphoneos;
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
			};
			name = Profile;
		};
		249021D4217E4FDB00AE95B9 /* Profile */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = Runner/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Profile;
		};
		331C8088294A63A400263BE5 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = AE0B7B92F70575B8D7E0D07E /* Pods-RunnerTests.debug.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				GENERATE_INFOPLIST_FILE = YES;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi.RunnerTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
			};
			name = Debug;
		};
		331C8089294A63A400263BE5 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 89B67EB44CE7B6631473024E /* Pods-RunnerTests.release.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				GENERATE_INFOPLIST_FILE = YES;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi.RunnerTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
			};
			name = Release;
		};
		331C808A294A63A400263BE5 /* Profile */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 640959BDD8F10B91D80A66BE /* Pods-RunnerTests.profile.xcconfig */;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CODE_SIGN_STYLE = Automatic;
				CURRENT_PROJECT_VERSION = 1;
				GENERATE_INFOPLIST_FILE = YES;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi.RunnerTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/Runner.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/Runner";
			};
			name = Profile;
		};
		97C147031CF9000F007C117D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = iphoneos;
				TARGETED_DEVICE_FAMILY = "1,2";
			};
			name = Debug;
		};
		97C147041CF9000F007C117D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++0x";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				"CODE_SIGN_IDENTITY[sdk=iphoneos*]" = "iPhone Developer";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu99;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				IPHONEOS_DEPLOYMENT_TARGET = 11.0;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = iphoneos;
				SUPPORTED_PLATFORMS = iphoneos;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
				TARGETED_DEVICE_FAMILY = "1,2";
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		97C147061CF9000F007C117D /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 9740EEB21CF90195004384FC /* Debug.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = Runner/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Debug;
		};
		97C147071CF9000F007C117D /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CURRENT_PROJECT_VERSION = "$(FLUTTER_BUILD_NUMBER)";
				ENABLE_BITCODE = NO;
				INFOPLIST_FILE = Runner/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/Frameworks",
				);
				PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_OBJC_BRIDGING_HEADER = "Runner/Runner-Bridging-Header.h";
				SWIFT_VERSION = 5.0;
				VERSIONING_SYSTEM = "apple-generic";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		331C8087294A63A400263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				331C8088294A63A400263BE5 /* Debug */,
				331C8089294A63A400263BE5 /* Release */,
				331C808A294A63A400263BE5 /* Profile */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		97C146E91CF9000F007C117D /* Build configuration list for PBXProject "Runner" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				97C147031CF9000F007C117D /* Debug */,
				97C147041CF9000F007C117D /* Release */,
				249021D3217E4FDB00AE95B9 /* Profile */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		97C147051CF9000F007C117D /* Build configuration list for PBXNativeTarget "Runner" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				97C147061CF9000F007C117D /* Debug */,
				97C147071CF9000F007C117D /* Release */,
				249021D4217E4FDB00AE95B9 /* Profile */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 97C146E61CF9000F007C117D /* Project object */;
}


# CMakeLists.txt

# Project-level configuration.
cmake_minimum_required(VERSION 3.14)
project(irctc_ui LANGUAGES CXX)

# The name of the executable created for the application. Change this to change
# the on-disk name of your application.
set(BINARY_NAME "irctc_ui")

# Explicitly opt in to modern CMake behaviors to avoid warnings with recent
# versions of CMake.
cmake_policy(VERSION 3.14...3.25)

# Define build configuration option.
get_property(IS_MULTICONFIG GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)
if(IS_MULTICONFIG)
  set(CMAKE_CONFIGURATION_TYPES "Debug;Profile;Release"
    CACHE STRING "" FORCE)
else()
  if(NOT CMAKE_BUILD_TYPE AND NOT CMAKE_CONFIGURATION_TYPES)
    set(CMAKE_BUILD_TYPE "Debug" CACHE
      STRING "Flutter build mode" FORCE)
    set_property(CACHE CMAKE_BUILD_TYPE PROPERTY STRINGS
      "Debug" "Profile" "Release")
  endif()
endif()
# Define settings for the Profile build mode.
set(CMAKE_EXE_LINKER_FLAGS_PROFILE "${CMAKE_EXE_LINKER_FLAGS_RELEASE}")
set(CMAKE_SHARED_LINKER_FLAGS_PROFILE "${CMAKE_SHARED_LINKER_FLAGS_RELEASE}")
set(CMAKE_C_FLAGS_PROFILE "${CMAKE_C_FLAGS_RELEASE}")
set(CMAKE_CXX_FLAGS_PROFILE "${CMAKE_CXX_FLAGS_RELEASE}")

# Use Unicode for all projects.
add_definitions(-DUNICODE -D_UNICODE)

# Compilation settings that should be applied to most targets.
#
# Be cautious about adding new options here, as plugins use this function by
# default. In most cases, you should add new options to specific targets instead
# of modifying this function.
function(APPLY_STANDARD_SETTINGS TARGET)
  target_compile_features(${TARGET} PUBLIC cxx_std_17)
  target_compile_options(${TARGET} PRIVATE /W4 /WX /wd"4100")
  target_compile_options(${TARGET} PRIVATE /EHsc)
  target_compile_definitions(${TARGET} PRIVATE "_HAS_EXCEPTIONS=0")
  target_compile_definitions(${TARGET} PRIVATE "$<$<CONFIG:Debug>:_DEBUG>")
endfunction()

# Flutter library and tool build rules.
set(FLUTTER_MANAGED_DIR "${CMAKE_CURRENT_SOURCE_DIR}/flutter")
add_subdirectory(${FLUTTER_MANAGED_DIR})

# Application build; see runner/CMakeLists.txt.
add_subdirectory("runner")


# Generated plugin build rules, which manage building the plugins and adding
# them to the application.
include(flutter/generated_plugins.cmake)


# === Installation ===
# Support files are copied into place next to the executable, so that it can
# run in place. This is done instead of making a separate bundle (as on Linux)
# so that building and running from within Visual Studio will work.
set(BUILD_BUNDLE_DIR "$<TARGET_FILE_DIR:${BINARY_NAME}>")
# Make the "install" step default, as it's required to run.
set(CMAKE_VS_INCLUDE_INSTALL_TO_DEFAULT_BUILD 1)
if(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)
  set(CMAKE_INSTALL_PREFIX "${BUILD_BUNDLE_DIR}" CACHE PATH "..." FORCE)
endif()

set(INSTALL_BUNDLE_DATA_DIR "${CMAKE_INSTALL_PREFIX}/data")
set(INSTALL_BUNDLE_LIB_DIR "${CMAKE_INSTALL_PREFIX}")

install(TARGETS ${BINARY_NAME} RUNTIME DESTINATION "${CMAKE_INSTALL_PREFIX}"
  COMPONENT Runtime)

install(FILES "${FLUTTER_ICU_DATA_FILE}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
  COMPONENT Runtime)

install(FILES "${FLUTTER_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
  COMPONENT Runtime)

if(PLUGIN_BUNDLED_LIBRARIES)
  install(FILES "${PLUGIN_BUNDLED_LIBRARIES}"
    DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
    COMPONENT Runtime)
endif()

# Copy the native assets provided by the build.dart from all packages.
set(NATIVE_ASSETS_DIR "${PROJECT_BUILD_DIR}native_assets/windows/")
install(DIRECTORY "${NATIVE_ASSETS_DIR}"
   DESTINATION "${INSTALL_BUNDLE_LIB_DIR}"
   COMPONENT Runtime)

# Fully re-copy the assets directory on each build to avoid having stale files
# from a previous install.
set(FLUTTER_ASSET_DIR_NAME "flutter_assets")
install(CODE "
  file(REMOVE_RECURSE \"${INSTALL_BUNDLE_DATA_DIR}/${FLUTTER_ASSET_DIR_NAME}\")
  " COMPONENT Runtime)
install(DIRECTORY "${PROJECT_BUILD_DIR}/${FLUTTER_ASSET_DIR_NAME}"
  DESTINATION "${INSTALL_BUNDLE_DATA_DIR}" COMPONENT Runtime)

# Install the AOT library on non-Debug builds only.
install(FILES "${AOT_LIBRARY}" DESTINATION "${INSTALL_BUNDLE_DATA_DIR}"
  CONFIGURATIONS Profile;Release
  COMPONENT Runtime)


# contents.xcworkspacedata

<?xml version="1.0" encoding="UTF-8"?>
<Workspace
   version = "1.0">
   <FileRef
      location = "group:Runner.xcodeproj">
   </FileRef>
</Workspace>


# AppDelegate.swift

import UIKit
import Flutter

@UIApplicationMain
@objc class AppDelegate: FlutterAppDelegate {
  override func application(
    _ application: UIApplication,
    didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?
  ) -> Bool {
    GeneratedPluginRegistrant.register(with: self)
    return super.application(application, didFinishLaunchingWithOptions: launchOptions)
  }
}


# Runner-Bridging-Header.h

#import "GeneratedPluginRegistrant.h"


# CMakeLists.txt

# This file controls Flutter-level build steps. It should not be edited.
cmake_minimum_required(VERSION 3.10)

set(EPHEMERAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ephemeral")

# Configuration provided via flutter tool.
include(${EPHEMERAL_DIR}/generated_config.cmake)

# TODO: Move the rest of this into files in ephemeral. See
# https://github.com/flutter/flutter/issues/57146.

# Serves the same purpose as list(TRANSFORM ... PREPEND ...),
# which isn't available in 3.10.
function(list_prepend LIST_NAME PREFIX)
    set(NEW_LIST "")
    foreach(element ${${LIST_NAME}})
        list(APPEND NEW_LIST "${PREFIX}${element}")
    endforeach(element)
    set(${LIST_NAME} "${NEW_LIST}" PARENT_SCOPE)
endfunction()

# === Flutter Library ===
# System-level dependencies.
find_package(PkgConfig REQUIRED)
pkg_check_modules(GTK REQUIRED IMPORTED_TARGET gtk+-3.0)
pkg_check_modules(GLIB REQUIRED IMPORTED_TARGET glib-2.0)
pkg_check_modules(GIO REQUIRED IMPORTED_TARGET gio-2.0)

set(FLUTTER_LIBRARY "${EPHEMERAL_DIR}/libflutter_linux_gtk.so")

# Published to parent scope for install step.
set(FLUTTER_LIBRARY ${FLUTTER_LIBRARY} PARENT_SCOPE)
set(FLUTTER_ICU_DATA_FILE "${EPHEMERAL_DIR}/icudtl.dat" PARENT_SCOPE)
set(PROJECT_BUILD_DIR "${PROJECT_DIR}/build/" PARENT_SCOPE)
set(AOT_LIBRARY "${PROJECT_DIR}/build/lib/libapp.so" PARENT_SCOPE)

list(APPEND FLUTTER_LIBRARY_HEADERS
  "fl_basic_message_channel.h"
  "fl_binary_codec.h"
  "fl_binary_messenger.h"
  "fl_dart_project.h"
  "fl_engine.h"
  "fl_json_message_codec.h"
  "fl_json_method_codec.h"
  "fl_message_codec.h"
  "fl_method_call.h"
  "fl_method_channel.h"
  "fl_method_codec.h"
  "fl_method_response.h"
  "fl_plugin_registrar.h"
  "fl_plugin_registry.h"
  "fl_standard_message_codec.h"
  "fl_standard_method_codec.h"
  "fl_string_codec.h"
  "fl_value.h"
  "fl_view.h"
  "flutter_linux.h"
)
list_prepend(FLUTTER_LIBRARY_HEADERS "${EPHEMERAL_DIR}/flutter_linux/")
add_library(flutter INTERFACE)
target_include_directories(flutter INTERFACE
  "${EPHEMERAL_DIR}"
)
target_link_libraries(flutter INTERFACE "${FLUTTER_LIBRARY}")
target_link_libraries(flutter INTERFACE
  PkgConfig::GTK
  PkgConfig::GLIB
  PkgConfig::GIO
)
add_dependencies(flutter flutter_assemble)

# === Flutter tool backend ===
# _phony_ is a non-existent file to force this command to run every time,
# since currently there's no way to get a full input/output list from the
# flutter tool.
add_custom_command(
  OUTPUT ${FLUTTER_LIBRARY} ${FLUTTER_LIBRARY_HEADERS}
    ${CMAKE_CURRENT_BINARY_DIR}/_phony_
  COMMAND ${CMAKE_COMMAND} -E env
    ${FLUTTER_TOOL_ENVIRONMENT}
    "${FLUTTER_ROOT}/packages/flutter_tools/bin/tool_backend.sh"
      ${FLUTTER_TARGET_PLATFORM} ${CMAKE_BUILD_TYPE}
  VERBATIM
)
add_custom_target(flutter_assemble DEPENDS
  "${FLUTTER_LIBRARY}"
  ${FLUTTER_LIBRARY_HEADERS}
)


# Info.plist

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>$(DEVELOPMENT_LANGUAGE)</string>
	<key>CFBundleDisplayName</key>
	<string>Irctc Ui</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>irctc_ui</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>$(FLUTTER_BUILD_NAME)</string>
	<key>CFBundleSignature</key>
	<string>????</string>
	<key>CFBundleVersion</key>
	<string>$(FLUTTER_BUILD_NUMBER)</string>
	<key>LSRequiresIPhoneOS</key>
	<true/>
	<key>UILaunchStoryboardName</key>
	<string>LaunchScreen</string>
	<key>UIMainStoryboardFile</key>
	<string>Main</string>
	<key>UISupportedInterfaceOrientations</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>UISupportedInterfaceOrientations~ipad</key>
	<array>
		<string>UIInterfaceOrientationPortrait</string>
		<string>UIInterfaceOrientationPortraitUpsideDown</string>
		<string>UIInterfaceOrientationLandscapeLeft</string>
		<string>UIInterfaceOrientationLandscapeRight</string>
	</array>
	<key>CADisableMinimumFrameDurationOnPhone</key>
	<true/>
	<key>UIApplicationSupportsIndirectInputEvents</key>
	<true/>
</dict>
</plist>


# RunnerTests.swift

import Flutter
import UIKit
import XCTest

class RunnerTests: XCTestCase {

  func testExample() {
    // If you add code to the Runner application, consider adding tests here.
    // See https://developer.apple.com/documentation/xctest for more information about using XCTest.
  }

}


# generated_plugin_registrant.h

//
//  Generated file. Do not edit.
//

// clang-format off

#ifndef GENERATED_PLUGIN_REGISTRANT_
#define GENERATED_PLUGIN_REGISTRANT_

#include <flutter_linux/flutter_linux.h>

// Registers Flutter plugins.
void fl_register_plugins(FlPluginRegistry* registry);

#endif  // GENERATED_PLUGIN_REGISTRANT_


# generated_plugin_registrant.cc

//
//  Generated file. Do not edit.
//

// clang-format off

#include "generated_plugin_registrant.h"


void fl_register_plugins(FlPluginRegistry* registry) {
}


# verify_pin.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print

import 'dart:async';

import 'package:flutter/cupertino.dart';
import 'package:flutter/material.dart';
import 'package:irctc_ui/homescreen/homepage.dart';
import 'package:irctc_ui/utils.dart';
import 'package:pin_input_text_field/pin_input_text_field.dart';
import 'dart:ui';

class VerifyPinScreen extends StatefulWidget {
  const VerifyPinScreen({super.key});

  @override
  State<VerifyPinScreen> createState() => _VerifyPinScreenState();
}

class _VerifyPinScreenState extends State<VerifyPinScreen> {
  bool isLoaderActive = false;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      extendBodyBehindAppBar: true,
      appBar: AppBar(
        backgroundColor: Color(0xFF010101),
        title: Row(
          mainAxisAlignment: MainAxisAlignment.end,
          children: [
            ImageFiltered(
              imageFilter: isLoaderActive
                  ? ImageFilter.blur(sigmaX: 3.0, sigmaY: 3.0)
                  : ImageFilter.blur(sigmaX: 0.0, sigmaY: 0.0),
              child: Text("Help",
                  style: TextStyle(
                      fontSize: setHeight(18),
                      fontWeight: FontWeight.bold,
                      color: Color(0xFF2475EE))),
            )
          ],
        ),
      ),

      // body
      body: Stack(
        children: [
          Container(
            width: double.maxFinite,
            color: Color(0xFF010101),
            child: Column(
              crossAxisAlignment: CrossAxisAlignment.center,
              children: [
                SizedBox(height: setHeight(AppBar().preferredSize.height) * 2),
                Image.asset("sf/img/logo_n.png",
                    height: setHeight(130), width: setWidth(100)),

                SizedBox(height: setHeight(16)),
                Text(
                  "Enter your PIN",
                  style: TextStyle(
                    letterSpacing: 0,
                    color: Colors.white,
                    fontSize: setHeight(32),
                    fontWeight: FontWeight.w500,
                  ),
                ),

                SizedBox(height: setHeight(5)),
                Text(
                  "4 digit login pin for @user_id",
                  style: TextStyle(
                    color: Color.fromARGB(150, 255, 255, 255),
                    fontSize: setHeight(13),
                    fontWeight: FontWeight.w500,
                  ),
                ),

                // pin input
                SizedBox(height: setHeight(50)),
                SizedBox(
                  width: setWidth(140),
                  child: PinInputTextField(
                    pinLength: 4,
                    autoFocus: true,
                    decoration: UnderlineDecoration(
                      textStyle: TextStyle(fontSize: setHeight(37)),
                      lineStrokeCap: StrokeCap.round,
                      colorBuilder: PinListenColorBuilder(
                          Colors.green, Color(0xFF363636)),
                      lineHeight: 5,
                      gapSpace: 12,
                      obscureStyle: ObscureStyle(
                        isTextObscure: true,
                        obscureText: '*',
                      ),
                    ),
                    textInputAction: TextInputAction.go,
                    enabled: true,
                    keyboardType: TextInputType.number,
                    onChanged: (pin) {
                      debugPrint('onChanged execute. pin:$pin');
                      if (pin.length == 4) {
                        setState(() {
                          isLoaderActive = true;
                          print("isLoaderActive :: $isLoaderActive");
                        });

                        Timer(
                            Duration(milliseconds: 3000),
                            () => setState(() {
                                  isLoaderActive = false;
                                  Navigator.pushReplacement(
                                      context,
                                      MaterialPageRoute(
                                          builder: (context) => HomeScreen()));
                                }));
                      }
                    },
                  ),
                ),

                // forgot pin
                SizedBox(height: setHeight(100)),
                Container(
                  width: setWidth(100),
                  height: setHeight(39),
                  decoration: BoxDecoration(
                      color: Color.fromARGB(255, 7, 24, 49),
                      borderRadius: BorderRadius.circular(7)),
                  child: Center(
                    child: Text(
                      "Forgot PIN?",
                      style: TextStyle(
                          color: Color(0xFF2475EE),
                          fontSize: setHeight(14),
                          fontWeight: FontWeight.w500),
                    ),
                  ),
                ),

                // switch user
                SizedBox(height: setHeight(14)),
                Text(
                  "Switch user or register?",
                  style: TextStyle(
                    color: Color(0xFFC2C2C2),
                    fontSize: setHeight(13),
                    fontWeight: FontWeight.w500,
                  ),
                ),
              ],
            ),
          ),

          // blur effect
          isLoaderActive
              ? BackdropFilter(
                  filter: ImageFilter.blur(sigmaX: 3.0, sigmaY: 3.0),
                  child: Container(
                    width: double.maxFinite,
                    height: double.maxFinite,
                    decoration: BoxDecoration(color: Colors.transparent),
                    child: CupertinoActivityIndicator(
                        radius: 25.0, color: CupertinoColors.white),
                  ),
                )
              : Container(
                  color: Colors.transparent,
                )
        ],
      ),
    );
  }
}


# generated_plugins.cmake

#
# Generated file, do not edit.
#

list(APPEND FLUTTER_PLUGIN_LIST
)

list(APPEND FLUTTER_FFI_PLUGIN_LIST
)

set(PLUGIN_BUNDLED_LIBRARIES)

foreach(plugin ${FLUTTER_PLUGIN_LIST})
  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${plugin}/linux plugins/${plugin})
  target_link_libraries(${BINARY_NAME} PRIVATE ${plugin}_plugin)
  list(APPEND PLUGIN_BUNDLED_LIBRARIES $<TARGET_FILE:${plugin}_plugin>)
  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${plugin}_bundled_libraries})
endforeach(plugin)

foreach(ffi_plugin ${FLUTTER_FFI_PLUGIN_LIST})
  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${ffi_plugin}/linux plugins/${ffi_plugin})
  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${ffi_plugin}_bundled_libraries})
endforeach(ffi_plugin)


# homepage.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print

import 'package:flutter/material.dart';
import 'package:irctc_ui/homescreen/components/bottom_navigatoin_bar.dart';
import 'package:irctc_ui/homescreen/components/other_service_card.dart';
import 'package:irctc_ui/homescreen/components/train_service_card.dart';
import 'package:irctc_ui/homescreen/search_train.dart';
import 'package:irctc_ui/utils.dart';

class HomeScreen extends StatefulWidget {
  const HomeScreen({super.key});

  @override
  State<HomeScreen> createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      extendBodyBehindAppBar: true,
      appBar: AppBar(
        backgroundColor: Colors.transparent,
      ),

      // body
      body: Stack(
        children: [
          Container(
            color: Color(0xFF010101),
            child: Image.asset("sf/img/home_bg.png",
                fit: BoxFit.cover, width: double.maxFinite),
          ),
          Align(
            alignment: Alignment.topCenter,
            child: Padding(
              padding: EdgeInsets.symmetric(horizontal: setWidth(20)),
              child: Column(
                crossAxisAlignment: CrossAxisAlignment.start,
                children: [
                  SizedBox(
                      height: setHeight(AppBar().preferredSize.height + 30)),
                  Padding(
                    padding: EdgeInsets.only(left: setWidth(21)),
                    child: Text(
                      "Train services",
                      style: TextStyle(
                        color: Color(0xFFA5A5A5),
                        fontWeight: FontWeight.w500,
                        fontSize: setHeight(21),
                        letterSpacing: 0,
                      ),
                    ),
                  ),

                  // grid
                  SizedBox(height: setHeight(14)),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      InkWell(
                        onTap: () {
                          Navigator.pushReplacement(
                              context,
                              MaterialPageRoute(
                                  builder: (context) => SearchTrainScreen()));
                        },
                        child: TrainServiceCardWidget(
                          imgPath: "sf/img/train.png",
                          imgColor: Color(0xFF3C87F6),
                          title: "Train",
                          description: "Book your next train",
                          cardColor: Color(0xFF2475EE),
                        ),
                      ),
                      SizedBox(width: setWidth(14)),
                      TrainServiceCardWidget(
                        imgPath: "sf/img/food.png",
                        imgColor: Color(0xFF292A2F),
                        title: "Food",
                        description: "Food delivery at your seat",
                        cardColor: Color(0xFF1D1F24),
                      ),
                    ],
                  ),
                  SizedBox(height: setHeight(14)),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      TrainServiceCardWidget(
                        imgPath: "sf/img/ask_disha.png",
                        imgColor: Color(0xFF292A2F),
                        title: "Ask Disha",
                        description: "Virtual assistant",
                        cardColor: Color(0xFF1D1F24),
                      ),
                      SizedBox(width: setWidth(14)),
                      TrainServiceCardWidget(
                        imgPath: "sf/img/rooms.png",
                        imgColor: Color(0xFF292A2F),
                        title: "Rooms",
                        description: "Book rooms at stations",
                        cardColor: Color(0xFF1D1F24),
                      ),
                    ],
                  ),

                  // other services
                  SizedBox(height: setHeight(50)),
                  Padding(
                    padding: EdgeInsets.only(left: setWidth(21)),
                    child: Text(
                      "Other services",
                      style: TextStyle(
                        color: Color(0xFFA5A5A5),
                        fontWeight: FontWeight.w500,
                        fontSize: setHeight(21),
                        letterSpacing: 0,
                      ),
                    ),
                  ),
                  SizedBox(height: setHeight(14)),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      OtherServiceCardWidget(
                          title: "Flight",
                          description: "Book your next flight"),
                      SizedBox(width: setWidth(14)),
                      OtherServiceCardWidget(
                          title: "Hotel", description: "Book your next stay"),
                    ],
                  ),
                  SizedBox(height: setHeight(14)),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      OtherServiceCardWidget(
                          title: "Bus", description: "Book your next bus"),
                      SizedBox(width: setWidth(14)),
                      OtherServiceCardWidget(
                          title: "Tourism",
                          description: "Explore tour options"),
                    ],
                  ),
                ],
              ),
            ),
          )
        ],
      ),

      bottomNavigationBar: BottomNavigationBarWidget(),
    );
  }
}


# search_train copy.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print

import 'dart:ui';

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';
import 'package:marquee/marquee.dart';

class SearchTrainScreen extends StatefulWidget {
  const SearchTrainScreen({super.key});

  @override
  State<SearchTrainScreen> createState() => _SearchTrainScreenState();
}

class _SearchTrainScreenState extends State<SearchTrainScreen> {
  List<String> railwayStaions = <String>[
    "Kalyan",
    "Dombivli",
    "Thane",
    "Mulund",
    "Bhandup",
    "Ghatkopar",
    "Vikroli",
    "Kurla",
    "Dadar",
    "Parel",
    "Byculla",
    "CSMT",
    "Churchgate",
    "Marine lines",
    "Churni road",
    "Mumbai Central",
    "Bandra",
    "Andheri",
    "Goregaon",
    "Malad",
    "Kandivali",
    "Borivali",
    "Bhayandar",
    "Vasai Road",
    "Virar",
    "Airoli",
    "Rabale",
    "Ghansoli",
    "Turbhe",
    "Nerul",
    "Seawoords Darave",
    "Panvel"
  ];
  List<String> tempRailwayStations = [];
  String selectedSourceStation = "Source";
  String selectedDestinationStation = "Destination";

  bool isSearchRailwayStationActive = true;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xFF1D1F24),
        title: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            SizedBox(
              width: setWidth(45),
              height: setHeight(45),
              child: Icon(
                Icons.arrow_back_ios_rounded,
                color: Colors.white,
                size: 30,
              ),
            ),
            Text(
              "Search train",
              style: TextStyle(
                  color: Colors.white,
                  fontWeight: FontWeight.w500,
                  fontSize: setHeight(21)),
            ),
            SizedBox(
              width: setWidth(45),
              height: setHeight(45),
            ),
          ],
        ),
      ),

      // body
      body: Stack(
        children: [
          Container(
            color: Color(0xFF010101),
            child: Image.asset("sf/img/home_bg.png",
                fit: BoxFit.cover, width: double.maxFinite),
          ),

          // main body
          Align(
            alignment: Alignment.topCenter,
            child: Column(
              children: [
                Container(
                  height: setHeight(39),
                  color: Color(0xFFF1A868),
                  child: Marquee(
                    text: "This is the place holder for importance notice.",
                    style: TextStyle(
                        fontWeight: FontWeight.w500, color: Colors.white),
                    scrollAxis: Axis.horizontal,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    blankSpace: 30.0,
                    velocity: 100.0,
                    pauseAfterRound: Duration(seconds: 2),
                    startPadding: 10.0,
                    accelerationDuration: Duration(seconds: 1),
                    accelerationCurve: Curves.linear,
                    decelerationDuration: Duration(milliseconds: 500),
                    decelerationCurve: Curves.easeOut,
                  ),
                ),

                // search train card
                SizedBox(height: setHeight(16)),
                Expanded(
                  child: Container(
                    margin: EdgeInsets.symmetric(horizontal: setWidth(18)),
                    padding: EdgeInsets.symmetric(
                        horizontal: setWidth(30), vertical: setHeight(18)),
                    width: double.maxFinite,
                    decoration: BoxDecoration(
                        color: Color(0xFF1D1F24),
                        borderRadius: BorderRadius.circular(25)),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        // source
                        Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text(
                              "From",
                              style: TextStyle(
                                  color: Color(0xFF676767),
                                  fontSize: setHeight(16),
                                  fontWeight: FontWeight.w500),
                            ),
                            SizedBox(height: setHeight(9)),
                            InkWell(
                              onTap: () {
                                setState(() {
                                  isSearchRailwayStationActive = true;
                                });
                              },
                              child: Container(
                                height: setHeight(60),
                                padding: EdgeInsets.symmetric(
                                    horizontal: setWidth(18)),
                                decoration: BoxDecoration(
                                    color: Color(0xFF282B32),
                                    borderRadius: BorderRadius.circular(14)),
                                child: Row(
                                  children: [
                                    Text(
                                      selectedSourceStation == "Source"
                                          ? ""
                                          : "KYN",
                                      style: TextStyle(
                                        color: Colors.white,
                                        fontSize: setHeight(27),
                                        fontWeight: FontWeight.w500,
                                      ),
                                    ),
                                    SizedBox(width: setWidth(10)),
                                    Padding(
                                      padding: EdgeInsets.only(top: 7),
                                      child: Text(
                                        selectedSourceStation,
                                        style: TextStyle(
                                          color: Color(0xFF8F8F8F),
                                          fontSize: setHeight(16),
                                          fontWeight: FontWeight.w500,
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            )
                          ],
                        ),
                      ],
                    ),
                  ),
                ),

                SizedBox(height: setHeight(34))
              ],
            ),
          ),

          // railway station input box
          isSearchRailwayStationActive
              ? Align(
                  alignment: Alignment.center,
                  child: Container(
                    width: setWidth(370),
                    height: setHeight(500),
                    padding: EdgeInsets.symmetric(
                        horizontal: setWidth(21), vertical: setHeight(21)),
                    decoration: BoxDecoration(
                        color: Color(0xFF282B32),
                        borderRadius: BorderRadius.circular(18)),
                    child: Column(
                      children: [
                        Container(
                          padding:
                              EdgeInsets.symmetric(horizontal: setWidth(10)),
                          decoration: BoxDecoration(
                              color: Color(0xFF191A1D),
                              borderRadius: BorderRadius.circular(10),
                              border: Border.all(
                                  width: 1.6, color: Color(0xFF2475EE))),
                          child: TextField(
                            textAlignVertical: TextAlignVertical.center,
                            textAlign: TextAlign.left,
                            cursorColor: Colors.white,
                            style: TextStyle(
                                fontSize: setHeight(16),
                                fontWeight: FontWeight.bold,
                                color: Colors.white),
                            decoration: InputDecoration(
                              border: InputBorder.none,
                              hintText: "Search railway staion",
                              hintStyle: TextStyle(
                                  color: Color(0xFF8F8F8F),
                                  fontSize: setHeight(16),
                                  fontWeight: FontWeight.w500,
                                  fontFamily: "Poppins"),
                            ),
                            onChanged: (val) {
                              filterStation(val);
                            },
                          ),
                        ),
                        SizedBox(height: setHeight(7)),
                        Expanded(
                          child: SingleChildScrollView(
                              scrollDirection: Axis.vertical,
                              child: Column(
                                crossAxisAlignment: CrossAxisAlignment.center,
                                children: tempRailwayStations.map((rs) {
                                  return InkWell(
                                    onTap: () {
                                      selectedSourceStation = rs.toUpperCase();
                                    },
                                    child: Container(
                                        margin:
                                            EdgeInsets.symmetric(vertical: 2.5),
                                        height: 30,
                                        decoration: BoxDecoration(
                                            color: Colors.white,
                                            borderRadius:
                                                BorderRadius.circular(10)),
                                        child: Center(
                                            child: Text(
                                          // rs.toUpperCase(),
                                          rs,
                                          style:
                                              TextStyle(fontFamily: "Poppins"),
                                        ))),
                                  );
                                }).toList(),
                              )),
                        ),
                      ],
                    ),
                  ),
                )
              : Container(
                  color: Colors.transparent,
                ),

        //   isSearchRailwayStationActive
        //       ? BackdropFilter(
        //           filter: ImageFilter.blur(sigmaX: 3.0, sigmaY: 3.0),
        //           child: Container(
        //             width: double.maxFinite,
        //             height: double.maxFinite,
        //             decoration: BoxDecoration(color: Colors.transparent),
        //           ),
        //         )
        //       : Container(
        //           color: Colors.transparent,
        //         )
        ],
      ),
    );
  }

  // filter railway stations
  void filterStation(keyword) {
    setState(() {
      tempRailwayStations = railwayStaions
          .where((element) =>
              element.toLowerCase().contains(keyword.toLowerCase()))
          .toList();
    });
  }
}


# contents.xcworkspacedata

<?xml version="1.0" encoding="UTF-8"?>
<Workspace
   version = "1.0">
   <FileRef
      location = "group:Runner.xcodeproj">
   </FileRef>
</Workspace>


# GeneratedPluginRegistrant.swift

//
//  Generated file. Do not edit.
//

import FlutterMacOS
import Foundation


func RegisterGeneratedPlugins(registry: FlutterPluginRegistry) {
}


# Flutter-Debug.xcconfig

#include "ephemeral/Flutter-Generated.xcconfig"


# select_seat.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, avoid_init_to_null

import 'package:dotted_line/dotted_line.dart';
import 'package:flutter/material.dart';
import 'package:irctc_ui/homescreen/components/select_seat_compartment_list.dart';
import 'package:irctc_ui/homescreen/components/select_seat_row_info.dart';
import 'package:irctc_ui/homescreen/components/select_train_proceed_to_book.dart';
import 'package:irctc_ui/homescreen/components/station_name_text.dart';
import 'package:irctc_ui/homescreen/components/train_compartment_details.dart';
import 'package:irctc_ui/homescreen/select_train.dart';
import 'package:irctc_ui/utils.dart';

class SelectSeatScreen extends StatefulWidget {
  const SelectSeatScreen({super.key});

  @override
  State<SelectSeatScreen> createState() => _SelectSeatScreenState();
}

class _SelectSeatScreenState extends State<SelectSeatScreen> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xFF1D1F24),
        title: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            InkWell(
              onTap: () {
                Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(
                        builder: (context) => SelectTrainScreen()));
              },
              child: SizedBox(
                width: setWidth(45),
                height: setHeight(45),
                child: Icon(
                  Icons.arrow_back_ios_rounded,
                  color: Colors.white,
                  size: 30,
                ),
              ),
            ),
            Text(
              "Select seat",
              style: TextStyle(
                  color: Colors.white,
                  fontWeight: FontWeight.w500,
                  fontSize: setHeight(21)),
            ),
            SizedBox(
              width: setWidth(45),
              height: setHeight(45),
            ),
          ],
        ),
      ),

      // body
      body: Stack(
        children: [
          Container(
            color: Color(0xFF010101),
            child: Image.asset("sf/img/home_bg.png",
                fit: BoxFit.cover, width: double.maxFinite),
          ),

          // body content
          Align(
            alignment: Alignment.topCenter,
            child: Column(
              children: [
                // train name
                Container(
                  height: setHeight(55),
                  color: Color(0xFF1D1F24),
                  padding: EdgeInsets.symmetric(horizontal: setWidth(30)),
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Text(
                        "SUR Express (134556)",
                        style: TextStyle(
                            color: Colors.white,
                            fontSize: setHeight(19),
                            letterSpacing: 0,
                            fontWeight: FontWeight.w500),
                      ),
                      Container(
                        height: setHeight(40),
                        padding: EdgeInsets.symmetric(horizontal: setWidth(10)),
                        decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(5),
                            color: Color(0xFF282B32)),
                        child: Row(
                          crossAxisAlignment: CrossAxisAlignment.center,
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Icon(Icons.route_rounded, color: Colors.white),
                            SizedBox(width: setWidth(5)),
                            Text(
                              "View route",
                              style: TextStyle(
                                  color: Color(0xFF8F8F8F),
                                  fontSize: setHeight(14),
                                  fontWeight: FontWeight.w500,
                                  letterSpacing: 0),
                            )
                          ],
                        ),
                      )
                    ],
                  ),
                ),

                // station names
                Container(
                  height: setHeight(64),
                  color: Color(0xFF1D1F24),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      StationNameTextWidget(
                          stationCode: "KYN",
                          stationName: "Kalyan Jn",
                          isSourceStation: true),
                      Flexible(
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Text(
                              "Tue, 07 Feb",
                              style: TextStyle(
                                  fontSize: setHeight(11),
                                  color: Colors.white,
                                  fontWeight: FontWeight.w500,
                                  letterSpacing: 0),
                            ),
                            SizedBox(height: setHeight(7)),
                            DottedLine(
                              direction: Axis.horizontal,
                              alignment: WrapAlignment.center,
                              lineThickness: 1.9,
                              dashLength: 10,
                              dashColor: Color(0xFF3A3F49),
                              dashRadius: 0.0,
                              dashGapLength: 5,
                              dashGapColor: Colors.transparent,
                              dashGapRadius: 0.0,
                            ),
                            SizedBox(height: setHeight(5)),
                            Text(
                              "10 hr 38 min",
                              style: TextStyle(
                                  fontSize: setHeight(11),
                                  color: Colors.white,
                                  fontWeight: FontWeight.w500,
                                  letterSpacing: 0),
                            ),
                          ],
                        ),
                      ),
                      StationNameTextWidget(
                          stationCode: "DR",
                          stationName: "Dadar Jn",
                          isSourceStation: false),
                    ],
                  ),
                ),
                Container(
                  color: Color(0xFF1D1F24),
                  height: setHeight(60),
                  padding: EdgeInsets.symmetric(
                      horizontal: setWidth(30), vertical: setHeight(16)),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.start,
                    children: [
                      Text(
                        "General",
                        style: TextStyle(
                            color: Colors.white,
                            fontSize: setHeight(18),
                            fontWeight: FontWeight.w500,
                            letterSpacing: 0),
                      ),
                      SizedBox(width: setWidth(5)),
                      VerticalDivider(
                        thickness: 1.6,
                        color: Color(0xFF3D4149),
                      ),
                      SizedBox(width: setWidth(5)),
                      Text(
                        "1A",
                        style: TextStyle(
                            color: Colors.white,
                            fontSize: setHeight(18),
                            fontWeight: FontWeight.w500),
                      ),
                    ],
                  ),
                ),

                // filter container
                Container(
                  height: setHeight(50),
                  color: Color(0xFF282B32),
                  padding: EdgeInsets.symmetric(horizontal: setWidth(30)),
                  child: SeatStatusInfoWidget(),
                ),

                // main body
                Expanded(
                  child: Row(
                    children: [
                      Expanded(flex: 4, child: TrainCompartmentListWidget()),
                      Expanded(
                        flex: 6,
                        child: Column(
                          children: [
                            SizedBox(
                              height: setHeight(21),
                              child: Row(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceAround,
                                children: [
                                  Container(
                                    width: setWidth(16),
                                    color: Color(0xFF1A1A1A),
                                  ),
                                  Container(
                                    width: setWidth(16),
                                    color: Color(0xFF1A1A1A),
                                  )
                                ],
                              ),
                            ),
                            // train compartment details
                            Expanded(
                              child: Container(
                                margin: EdgeInsets.only(
                                    right: setWidth(16), left: setWidth(10)),
                                    padding: EdgeInsets.symmetric(horizontal: setWidth(19), vertical: setHeight(7)),
                                decoration: BoxDecoration(
                                    color: Color(0xFF1D1F24),
                                    borderRadius: BorderRadius.circular(25)),
                                    child: TrainCompartmentDetailsWidget(),
                              ),
                            ),
                            SizedBox(
                              height: setHeight(21),
                              child: Row(
                                mainAxisAlignment:
                                    MainAxisAlignment.spaceAround,
                                children: [
                                  Container(
                                    width: setWidth(16),
                                    color: Color(0xFF1A1A1A),
                                  ),
                                  Container(
                                    width: setWidth(16),
                                    color: Color(0xFF1A1A1A),
                                  )
                                ],
                              ),
                            ),
                          ],
                        ),
                      ),
                    ],
                  ),
                )
              ],
            ),
          ),
        ],
      ),

      bottomNavigationBar: ProceedToBookButtonWidget(),
    );
  }
}


# select_train.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, avoid_init_to_null

import 'package:flutter/material.dart';
import 'package:irctc_ui/homescreen/components/select_train_filters.dart';
import 'package:irctc_ui/homescreen/components/select_train_proceed_to_book.dart';
import 'package:irctc_ui/homescreen/components/station_name_text.dart';
import 'package:irctc_ui/homescreen/components/train_details_card.dart';
import 'package:irctc_ui/homescreen/search_train.dart';
import 'package:irctc_ui/utils.dart';
import 'package:dotted_line/dotted_line.dart';

class SelectTrainScreen extends StatefulWidget {
  const SelectTrainScreen({super.key});

  @override
  State<SelectTrainScreen> createState() => _SelectTrainScreenState();
}

class _SelectTrainScreenState extends State<SelectTrainScreen> {



  @override
  Widget build(BuildContext context) {
    return Scaffold(
        
      appBar: AppBar(
        backgroundColor: Color(0xFF1D1F24),
        title: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            InkWell(
              onTap: () {
                Navigator.pushReplacement(
                    context,
                    MaterialPageRoute(
                        builder: (context) => SearchTrainScreen()));
              },
              child: SizedBox(
                width: setWidth(45),
                height: setHeight(45),
                child: Icon(
                  Icons.arrow_back_ios_rounded,
                  color: Colors.white,
                  size: 30,
                ),
              ),
            ),
            Text(
              "Select train",
              style: TextStyle(
                  color: Colors.white,
                  fontWeight: FontWeight.w500,
                  fontSize: setHeight(21)),
            ),
            SizedBox(
              width: setWidth(45),
              height: setHeight(45),
            ),
          ],
        ),
      ),

      // body
      body: Stack(
        children: [
          Container(
            color: Color(0xFF010101),
            child: Image.asset("sf/img/home_bg.png",
                fit: BoxFit.cover, width: double.maxFinite),
          ),

          // body content
          Align(
            alignment: Alignment.topCenter,
            child: Column(
              children: [
                Container(
                  height: setHeight(64),
                  color: Color(0xFF1D1F24),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      StationNameTextWidget(
                          stationCode: "KYN",
                          stationName: "Kalyan Jn",
                          isSourceStation: true),
                      Flexible(
                        child: DottedLine(
                          direction: Axis.horizontal,
                          alignment: WrapAlignment.center,
                          lineThickness: 1.9,
                          dashLength: 10,
                          dashColor: Color(0xFF3A3F49),
                          dashRadius: 0.0,
                          dashGapLength: 5,
                          dashGapColor: Colors.transparent,
                          dashGapRadius: 0.0,
                        ),
                      ),
                      StationNameTextWidget(
                          stationCode: "DR",
                          stationName: "Dadar Jn",
                          isSourceStation: false),
                    ],
                  ),
                ),
                Container(
                  color: Color(0xFF1D1F24),
                  height: setHeight(60),
                  child: Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: [
                      Container(
                        height: setHeight(34),
                        width: setWidth(34),
                        decoration: BoxDecoration(
                            color: Color(0xFF282B32),
                            borderRadius: BorderRadius.circular(5)),
                        child: Icon(Icons.arrow_back_ios_rounded,
                            color: Color(0xFF6D6E7C)),
                      ),
                      // date container
                      Container(
                        margin: EdgeInsets.symmetric(horizontal: setWidth(16)),
                        child: Text(
                          "Tue, 07 Jan",
                          style: TextStyle(
                              fontSize: setHeight(18),
                              fontWeight: FontWeight.w500,
                              color: Colors.white),
                        ),
                      ),
                      Container(
                        height: setHeight(34),
                        width: setWidth(34),
                        decoration: BoxDecoration(
                            color: Color(0xFF282B32),
                            borderRadius: BorderRadius.circular(5)),
                        child: Icon(Icons.arrow_forward_ios_rounded,
                            color: Color(0xFF6D6E7C)),
                      ),
                    ],
                  ),
                ),

                // filter container
                Container(
                  height: setHeight(60),
                  color: Color(0xFF282B32),
                  padding: EdgeInsets.symmetric(horizontal: setWidth(20)),
                  child: SelectTrainFiltersWidget(),
                ),

                // train list here
                Expanded(
                  child: ListView(
                    scrollDirection: Axis.vertical,
                    children: [
                      SizedBox(height: setHeight(10)),
                      TrainDetailsCardWidget(),
                      TrainDetailsCardWidget(),
                      TrainDetailsCardWidget(),
                      TrainDetailsCardWidget(),
                      TrainDetailsCardWidget(),
                      TrainDetailsCardWidget(),
                      TrainDetailsCardWidget(),
                      SizedBox(height: setHeight(16)),
                    ],
                  ),
                )
              ],
            ),
          ),

          Align(
            alignment: Alignment.bottomCenter,
            child: Container(
              height: setHeight(45),
              foregroundDecoration: BoxDecoration(
                gradient: LinearGradient(
                  colors: [
                    Colors.transparent,
                    Colors.transparent,
                    Colors.transparent,
                    //   Color(0xFF1D1F24)
                    Color.fromARGB(203, 0, 0, 0)
                  ],
                  begin: Alignment.topCenter,
                  end: Alignment.bottomCenter,
                  stops: [0, 0.1, 0, 0.999],
                ),
              ),
            ),
          ),
        ],
      ),

      //   bottomNavigationBar: SelectTrainScreen.selectedClassType != null
      //       ? ProceedToBookButtonWidget()
      //       : SizedBox(),
      bottomNavigationBar: ProceedToBookButtonWidget(),
    );
  }

}


# search_train.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print

import 'dart:ui';

import 'package:flutter/material.dart';
import 'package:irctc_ui/homescreen/components/train_search_filter.dart';
import 'package:irctc_ui/homescreen/homepage.dart';
import 'package:irctc_ui/homescreen/select_train.dart';
import 'package:irctc_ui/utils.dart';
import 'package:marquee/marquee.dart';
import 'package:dotted_line/dotted_line.dart';

class SearchTrainScreen extends StatefulWidget {
  const SearchTrainScreen({super.key});

  @override
  State<SearchTrainScreen> createState() => _SearchTrainScreenState();
}

class _SearchTrainScreenState extends State<SearchTrainScreen> {
  List<String> classType = <String>[
    "All classes",
    "General",
    "Sleeper",
    "1st AC",
    "2nd AC",
    "3rd AC",
    "2nd Sitting",
    "Chair Car AC",
    "Handicapped"
  ];
  String selectedClassType = "All classes";

  List<String> quotaType = <String>[
    "General",
    "Ladies",
    "Defence",
  ];
  String selectedQuotaType = "General";
  bool isRoundTripChecked = false;
  int activeFilter = 1;

  late DateTime departureDate;
  late DateTime returnDate;

  bool isDepartureDateChanged = false;
  bool isReturnDateChanged = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Color(0xFF1D1F24),
        title: Row(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            InkWell(
              onTap: () {
                Navigator.pushReplacement(context,
                    MaterialPageRoute(builder: (context) => HomeScreen()));
              },
              child: SizedBox(
                width: setWidth(45),
                height: setHeight(45),
                child: Icon(
                  Icons.arrow_back_ios_rounded,
                  color: Colors.white,
                  size: 30,
                ),
              ),
            ),
            Text(
              "Search train",
              style: TextStyle(
                  color: Colors.white,
                  fontWeight: FontWeight.w500,
                  fontSize: setHeight(21)),
            ),
            SizedBox(
              width: setWidth(45),
              height: setHeight(45),
            ),
          ],
        ),
      ),

      // body
      body: Stack(
        children: [
          Container(
            color: Color(0xFF010101),
            child: Image.asset("sf/img/home_bg.png",
                fit: BoxFit.cover, width: double.maxFinite),
          ),

          // main body
          Align(
            alignment: Alignment.topCenter,
            child: Column(
              children: [
                Container(
                  height: setHeight(39),
                  color: Color(0xFFF1A868),
                  child: Marquee(
                    text: "This is the place holder for importance notice.",
                    style: TextStyle(
                        fontWeight: FontWeight.w500, color: Colors.white),
                    scrollAxis: Axis.horizontal,
                    crossAxisAlignment: CrossAxisAlignment.center,
                    blankSpace: 30.0,
                    velocity: 100.0,
                    pauseAfterRound: Duration(seconds: 2),
                    startPadding: 10.0,
                    accelerationDuration: Duration(seconds: 1),
                    accelerationCurve: Curves.linear,
                    decelerationDuration: Duration(milliseconds: 500),
                    decelerationCurve: Curves.easeOut,
                  ),
                ),

                // search train card
                SizedBox(height: setHeight(16)),
                Expanded(
                  child: Container(
                    margin: EdgeInsets.symmetric(horizontal: setWidth(18)),
                    // padding: EdgeInsets.symmetric(
                    //     horizontal: setWidth(30), vertical: setHeight(18)),
                    width: double.maxFinite,
                    decoration: BoxDecoration(
                        color: Color(0xFF1D1F24),
                        borderRadius: BorderRadius.circular(25)),
                    child: Column(
                      crossAxisAlignment: CrossAxisAlignment.start,
                      children: [
                        // source
                        Padding(
                          padding: EdgeInsets.symmetric(
                              horizontal: setWidth(30), vertical: setHeight(5)),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              SizedBox(height: setHeight(12)),
                              Text(
                                "From",
                                style: TextStyle(
                                    color: Color(0xFF676767),
                                    fontSize: setHeight(16),
                                    fontWeight: FontWeight.w500),
                              ),
                              SizedBox(height: setHeight(9)),
                              Container(
                                height: setHeight(60),
                                padding: EdgeInsets.symmetric(
                                    horizontal: setWidth(18)),
                                decoration: BoxDecoration(
                                    color: Color(0xFF282B32),
                                    borderRadius: BorderRadius.circular(14)),
                                child: Row(
                                  children: [
                                    Text(
                                      "KYN",
                                      style: TextStyle(
                                        color: Colors.white,
                                        fontSize: setHeight(27),
                                        fontWeight: FontWeight.w500,
                                      ),
                                    ),
                                    SizedBox(width: setWidth(10)),
                                    Padding(
                                      padding: EdgeInsets.only(top: 7),
                                      child: Text(
                                        "Kalyan Jn",
                                        style: TextStyle(
                                          color: Color(0xFF8F8F8F),
                                          fontSize: setHeight(16),
                                          fontWeight: FontWeight.w500,
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              )
                            ],
                          ),
                        ),

                        SizedBox(height: setHeight(10)),

                        Row(
                          mainAxisAlignment: MainAxisAlignment.spaceBetween,
                          children: [
                            Container(
                                width: setWidth(25),
                                height: setHeight(50),
                                decoration: BoxDecoration(
                                    color: Colors.black,
                                    borderRadius: BorderRadius.only(
                                      topRight: Radius.circular(100),
                                      bottomRight: Radius.circular(100),
                                    ))),
                            SizedBox(width: setWidth(7)),
                            Flexible(
                              child: DottedLine(
                                direction: Axis.horizontal,
                                alignment: WrapAlignment.center,
                                lineThickness: 2.3,
                                dashLength: 10,
                                dashColor: Color(0xFF3A3F49),
                                dashRadius: 0.0,
                                dashGapLength: 5,
                                dashGapColor: Colors.transparent,
                                dashGapRadius: 0.0,
                              ),
                            ),
                            Container(
                              width: setWidth(45),
                              height: setHeight(45),
                              decoration: BoxDecoration(
                                  shape: BoxShape.circle,
                                  color: Color(0xFF2475EE)),
                              child: Icon(Icons.swap_vert_rounded,
                                  size: setHeight(32), color: Colors.white),
                            ),
                            Flexible(
                              child: DottedLine(
                                direction: Axis.horizontal,
                                alignment: WrapAlignment.center,
                                lineThickness: 2.3,
                                dashLength: 10,
                                dashColor: Color(0xFF3A3F49),
                                dashRadius: 0.0,
                                dashGapLength: 5,
                                dashGapColor: Colors.transparent,
                                dashGapRadius: 0.0,
                              ),
                            ),
                            SizedBox(width: setWidth(7)),
                            Container(
                                width: setWidth(25),
                                height: setHeight(50),
                                decoration: BoxDecoration(
                                    color: Colors.black,
                                    borderRadius: BorderRadius.only(
                                      topLeft: Radius.circular(100),
                                      bottomLeft: Radius.circular(100),
                                    ))),
                          ],
                        ),

                        // destination
                        Padding(
                          padding: EdgeInsets.symmetric(
                              horizontal: setWidth(30), vertical: setHeight(7)),
                          child: Column(
                            crossAxisAlignment: CrossAxisAlignment.start,
                            children: [
                              Text(
                                "To",
                                style: TextStyle(
                                    color: Color(0xFF676767),
                                    fontSize: setHeight(16),
                                    fontWeight: FontWeight.w500),
                              ),
                              SizedBox(height: setHeight(9)),
                              Container(
                                height: setHeight(60),
                                padding: EdgeInsets.symmetric(
                                    horizontal: setWidth(18)),
                                decoration: BoxDecoration(
                                    color: Color(0xFF282B32),
                                    borderRadius: BorderRadius.circular(14)),
                                child: Row(
                                  children: [
                                    Text(
                                      "DR",
                                      style: TextStyle(
                                        color: Colors.white,
                                        fontSize: setHeight(27),
                                        fontWeight: FontWeight.w500,
                                      ),
                                    ),
                                    SizedBox(width: setWidth(10)),
                                    Padding(
                                      padding: EdgeInsets.only(top: 7),
                                      child: Text(
                                        "Dadar",
                                        style: TextStyle(
                                          color: Color(0xFF8F8F8F),
                                          fontSize: setHeight(16),
                                          fontWeight: FontWeight.w500,
                                        ),
                                      ),
                                    ),
                                  ],
                                ),
                              ),

                              // class type input
                              SizedBox(height: setHeight(19)),
                              Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    "Class",
                                    style: TextStyle(
                                        color: Color(0xFF676767),
                                        fontSize: setHeight(16),
                                        fontWeight: FontWeight.w500),
                                  ),
                                  SizedBox(height: setHeight(10)),
                                  Container(
                                    height: setHeight(50),
                                    decoration: BoxDecoration(
                                        color: Color(0xFF282B32),
                                        borderRadius:
                                            BorderRadius.circular(14)),
                                    child: Center(
                                      child: ButtonTheme(
                                        alignedDropdown: true,
                                        child: DropdownButtonFormField(
                                          dropdownColor: Color(0xFF8F8F8F),
                                          // dropdownColor: Color(0xFF282B32),
                                          padding: EdgeInsets.only(right: 10),
                                          decoration: InputDecoration(
                                            border: InputBorder.none,
                                          ),
                                          alignment: Alignment.centerLeft,
                                          isExpanded: true,
                                          style: TextStyle(
                                              color: Colors.white,
                                              fontSize: setHeight(18),
                                              fontWeight: FontWeight.w500),
                                          hint: Text(
                                            selectedClassType,
                                            textAlign: TextAlign.left,
                                            style: classType
                                                    .contains(selectedClassType)
                                                ? TextStyle(color: Colors.white)
                                                : TextStyle(
                                                    fontSize: setHeight(18),
                                                    color: Color(0xFF8F8F8F)),
                                          ),
                                          onChanged: (newValue) {
                                            setState(() {
                                              selectedClassType =
                                                  newValue.toString();

                                              print(
                                                  "selectedClassType :: $selectedClassType");
                                            });
                                          },
                                          items: classType.map((ct) {
                                            return DropdownMenuItem(
                                              value: ct.toString(),
                                              child: Text(
                                                ct.toString(),
                                                style: TextStyle(),
                                              ),
                                            );
                                          }).toList(),
                                        ),
                                      ),
                                    ),
                                  ),
                                  SizedBox(height: setHeight(10)),
                                ],
                              ),

                              // quota input
                              SizedBox(height: setHeight(5)),
                              Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    "Quota",
                                    style: TextStyle(
                                        color: Color(0xFF676767),
                                        fontSize: setHeight(16),
                                        fontWeight: FontWeight.w500),
                                  ),
                                  SizedBox(height: setHeight(10)),
                                  Container(
                                    height: setHeight(50),
                                    decoration: BoxDecoration(
                                        color: Color(0xFF282B32),
                                        borderRadius:
                                            BorderRadius.circular(14)),
                                    child: Center(
                                      child: ButtonTheme(
                                        alignedDropdown: true,
                                        child: DropdownButtonFormField(
                                          dropdownColor: Color(0xFF8F8F8F),
                                          // dropdownColor: Color(0xFF282B32),
                                          padding: EdgeInsets.only(right: 10),
                                          decoration: InputDecoration(
                                            border: InputBorder.none,
                                          ),
                                          alignment: Alignment.centerLeft,
                                          isExpanded: true,
                                          style: TextStyle(
                                              color: Colors.white,
                                              fontSize: setHeight(18),
                                              fontWeight: FontWeight.w500),
                                          hint: Text(
                                            selectedQuotaType,
                                            textAlign: TextAlign.left,
                                            style: quotaType
                                                    .contains(selectedQuotaType)
                                                ? TextStyle(color: Colors.white)
                                                : TextStyle(
                                                    fontSize: setHeight(18),
                                                    color: Color(0xFF8F8F8F)),
                                          ),
                                          onChanged: (newValue) {
                                            setState(() {
                                              selectedQuotaType =
                                                  newValue.toString();

                                              print(
                                                  "selectedQuotaType :: $selectedQuotaType");
                                            });
                                          },
                                          items: quotaType.map((ct) {
                                            return DropdownMenuItem(
                                              value: ct.toString(),
                                              child: Text(
                                                ct.toString(),
                                                style: TextStyle(),
                                              ),
                                            );
                                          }).toList(),
                                        ),
                                      ),
                                    ),
                                  ),
                                  SizedBox(height: setHeight(5)),
                                ],
                              ),

                              // round trip checkbox
                              Row(
                                mainAxisAlignment: MainAxisAlignment.start,
                                children: [
                                  Transform.scale(
                                    scale: 1.5,
                                    child: Checkbox(
                                      checkColor: Colors.white,
                                      value: isRoundTripChecked,
                                      activeColor: Color(0xFF2475EE),
                                      side: BorderSide(
                                          color: Color(0xFF2475EE), width: 2),
                                      shape: RoundedRectangleBorder(
                                          borderRadius:
                                              BorderRadius.circular(5)),
                                      onChanged: (bool? value) {
                                        setState(() {
                                          isRoundTripChecked = value!;
                                        });
                                      },
                                    ),
                                  ),
                                  SizedBox(width: setWidth(5)),
                                  Text(
                                    "Round trip",
                                    style: TextStyle(
                                        color: Color(0xFF676767),
                                        fontSize: setHeight(18),
                                        fontWeight: FontWeight.w500),
                                  )
                                ],
                              ),

                              // date
                              Row(
                                children: [
                                  Expanded(
                                    flex: 1,
                                    child: Column(
                                      crossAxisAlignment:
                                          CrossAxisAlignment.start,
                                      children: [
                                        Text(
                                          "Departure date",
                                          style: TextStyle(
                                              color: Color(0xFF676767),
                                              fontSize: setHeight(16),
                                              fontWeight: FontWeight.w500),
                                        ),
                                        SizedBox(height: setHeight(7)),
                                        InkWell(
                                          onTap: () {
                                            getDate(context, "departure");
                                          },
                                          child: Container(
                                            height: setHeight(50),
                                            padding: EdgeInsets.symmetric(
                                                horizontal: setWidth(14)),
                                            decoration: BoxDecoration(
                                                color: Color(0xFF282B32),
                                                borderRadius:
                                                    BorderRadius.circular(14)),
                                            child: Row(
                                              crossAxisAlignment:
                                                  CrossAxisAlignment.center,
                                              children: [
                                                Icon(
                                                  Icons.calendar_month_rounded,
                                                  color: Color(0xFF676767),
                                                ),
                                                SizedBox(width: setWidth(5)),
                                                Text(
                                                  isDepartureDateChanged
                                                      ? "${departureDate.day}-${departureDate.month}-${departureDate.year}"
                                                      : "Choose date",
                                                  style: TextStyle(
                                                      color:
                                                          isDepartureDateChanged
                                                              ? Colors.white
                                                              : Color(
                                                                  0xFF676767),
                                                      fontWeight:
                                                          FontWeight.bold,
                                                      fontSize: setHeight(16)),
                                                )
                                              ],
                                            ),
                                          ),
                                        )
                                      ],
                                    ),
                                  ),
                                  SizedBox(width: setWidth(16)),
                                  isRoundTripChecked
                                      ? Expanded(
                                          flex: 1,
                                          child: Column(
                                            crossAxisAlignment:
                                                CrossAxisAlignment.start,
                                            children: [
                                              Text(
                                                "Return date",
                                                style: TextStyle(
                                                    color: Color(0xFF676767),
                                                    fontSize: setHeight(16),
                                                    fontWeight:
                                                        FontWeight.w500),
                                              ),
                                              SizedBox(height: setHeight(7)),
                                              InkWell(
                                                onTap: () {
                                                  getDate(context, "return");
                                                },
                                                child: Container(
                                                  height: setHeight(50),
                                                  padding: EdgeInsets.symmetric(
                                                      horizontal: setWidth(14)),
                                                  decoration: BoxDecoration(
                                                      color: Color(0xFF282B32),
                                                      borderRadius:
                                                          BorderRadius.circular(
                                                              14)),
                                                  child: Row(
                                                    crossAxisAlignment:
                                                        CrossAxisAlignment
                                                            .center,
                                                    children: [
                                                      Icon(
                                                        Icons
                                                            .calendar_month_rounded,
                                                        color:
                                                            Color(0xFF676767),
                                                      ),
                                                      SizedBox(
                                                          width: setWidth(5)),
                                                      Text(
                                                        isReturnDateChanged
                                                            ? "${returnDate.day}-${returnDate.month}-${returnDate.year}"
                                                            : "Choose date",
                                                        style: TextStyle(
                                                            color: isReturnDateChanged
                                                                ? Colors.white
                                                                : Color(
                                                                    0xFF676767),
                                                            fontWeight:
                                                                FontWeight.bold,
                                                            fontSize:
                                                                setHeight(16)),
                                                      )
                                                    ],
                                                  ),
                                                ),
                                              )
                                            ],
                                          ),
                                        )
                                      : Expanded(flex: 1, child: Container())
                                ],
                              ),

                              // filters
                              SizedBox(height: setHeight(16)),
                              Column(
                                crossAxisAlignment: CrossAxisAlignment.start,
                                children: [
                                  Text(
                                    "Filter",
                                    style: TextStyle(
                                        color: Color(0xFF676767),
                                        fontSize: setHeight(16),
                                        fontWeight: FontWeight.w500),
                                  ),
                                  SizedBox(height: setHeight(10)),
                                  SingleChildScrollView(
                                    scrollDirection: Axis.horizontal,
                                    child: Row(
                                      children: [
                                        SearchTrainFilterCardWidget(
                                          title: "Flexible with date",
                                        ),
                                        SizedBox(width: setWidth(10)),
                                        SearchTrainFilterCardWidget(
                                          title: "Disability concession",
                                        ),
                                        SizedBox(width: setWidth(10)),
                                        SearchTrainFilterCardWidget(
                                          title: "Superfast",
                                        ),
                                        SizedBox(width: setWidth(10)),
                                        SearchTrainFilterCardWidget(
                                          title: "Return available",
                                        ),
                                        SizedBox(width: setWidth(10)),
                                        SearchTrainFilterCardWidget(
                                          title: "Example",
                                        ),
                                      ],
                                    ),
                                  )
                                ],
                              ),

                              // search trains button
                              SizedBox(height: setHeight(16)),
                              InkWell(
                                onTap: () {
                                  Navigator.pushReplacement(
                                      context,
                                      MaterialPageRoute(
                                          builder: (context) =>
                                              SelectTrainScreen()));
                                },
                                child: Container(
                                  height: setHeight(60),
                                  decoration: BoxDecoration(
                                      color: Color(0xFF2475EE),
                                      borderRadius: BorderRadius.circular(14)),
                                  child: Center(
                                    child: Text(
                                      "Search Trains",
                                      style: TextStyle(
                                          color: Colors.white,
                                          fontSize: setHeight(21),
                                          fontWeight: FontWeight.bold,
                                          letterSpacing: 0),
                                    ),
                                  ),
                                ),
                              )
                            ],
                          ),
                        ),
                      ],
                    ),
                  ),
                ),

                SizedBox(height: setHeight(30))
              ],
            ),
          ),
        ],
      ),
    );
  }

  // date picker
  Future<void> getDate(BuildContext context, String dateFor) async {
    final DateTime? picked = await showDatePicker(
        context: context,
        firstDate: DateTime.now(),
        lastDate: DateTime(DateTime.now().year + 1));

    setState(() {
      if (dateFor == "departure") {
        departureDate = picked!;
        isDepartureDateChanged = true;
      } else if (dateFor == "return") {
        returnDate = picked!;
        isReturnDateChanged = true;
      }
    });
  }
}


# Flutter-Release.xcconfig

#include "ephemeral/Flutter-Generated.xcconfig"


# RunnerTests.swift

import FlutterMacOS
import Cocoa
import XCTest

class RunnerTests: XCTestCase {

  func testExample() {
    // If you add code to the Runner application, consider adding tests here.
    // See https://developer.apple.com/documentation/xctest for more information about using XCTest.
  }

}


# AppDelegate.swift

import Cocoa
import FlutterMacOS

@NSApplicationMain
class AppDelegate: FlutterAppDelegate {
  override func applicationShouldTerminateAfterLastWindowClosed(_ sender: NSApplication) -> Bool {
    return true
  }
}


# MainFlutterWindow.swift

import Cocoa
import FlutterMacOS

class MainFlutterWindow: NSWindow {
  override func awakeFromNib() {
    let flutterViewController = FlutterViewController()
    let windowFrame = self.frame
    self.contentViewController = flutterViewController
    self.setFrame(windowFrame, display: true)

    RegisterGeneratedPlugins(registry: flutterViewController)

    super.awakeFromNib()
  }
}


# Info.plist

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleDevelopmentRegion</key>
	<string>$(DEVELOPMENT_LANGUAGE)</string>
	<key>CFBundleExecutable</key>
	<string>$(EXECUTABLE_NAME)</string>
	<key>CFBundleIconFile</key>
	<string></string>
	<key>CFBundleIdentifier</key>
	<string>$(PRODUCT_BUNDLE_IDENTIFIER)</string>
	<key>CFBundleInfoDictionaryVersion</key>
	<string>6.0</string>
	<key>CFBundleName</key>
	<string>$(PRODUCT_NAME)</string>
	<key>CFBundlePackageType</key>
	<string>APPL</string>
	<key>CFBundleShortVersionString</key>
	<string>$(FLUTTER_BUILD_NAME)</string>
	<key>CFBundleVersion</key>
	<string>$(FLUTTER_BUILD_NUMBER)</string>
	<key>LSMinimumSystemVersion</key>
	<string>$(MACOSX_DEPLOYMENT_TARGET)</string>
	<key>NSHumanReadableCopyright</key>
	<string>$(PRODUCT_COPYRIGHT)</string>
	<key>NSMainNibFile</key>
	<string>MainMenu</string>
	<key>NSPrincipalClass</key>
	<string>NSApplication</string>
</dict>
</plist>


# Release.entitlements

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>com.apple.security.app-sandbox</key>
	<true/>
</dict>
</plist>


# DebugProfile.entitlements

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>com.apple.security.app-sandbox</key>
	<true/>
	<key>com.apple.security.cs.allow-jit</key>
	<true/>
	<key>com.apple.security.network.server</key>
	<true/>
</dict>
</plist>


# project.pbxproj

// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 54;
	objects = {

/* Begin PBXAggregateTarget section */
		33CC111A2044C6BA0003C045 /* Flutter Assemble */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = 33CC111B2044C6BA0003C045 /* Build configuration list for PBXAggregateTarget "Flutter Assemble" */;
			buildPhases = (
				33CC111E2044C6BF0003C045 /* ShellScript */,
			);
			dependencies = (
			);
			name = "Flutter Assemble";
			productName = FLX;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		331C80D8294CF71000263BE5 /* RunnerTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = 331C80D7294CF71000263BE5 /* RunnerTests.swift */; };
		335BBD1B22A9A15E00E9071D /* GeneratedPluginRegistrant.swift in Sources */ = {isa = PBXBuildFile; fileRef = 335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */; };
		33CC10F12044A3C60003C045 /* AppDelegate.swift in Sources */ = {isa = PBXBuildFile; fileRef = 33CC10F02044A3C60003C045 /* AppDelegate.swift */; };
		33CC10F32044A3C60003C045 /* Assets.xcassets in Resources */ = {isa = PBXBuildFile; fileRef = 33CC10F22044A3C60003C045 /* Assets.xcassets */; };
		33CC10F62044A3C60003C045 /* MainMenu.xib in Resources */ = {isa = PBXBuildFile; fileRef = 33CC10F42044A3C60003C045 /* MainMenu.xib */; };
		33CC11132044BFA00003C045 /* MainFlutterWindow.swift in Sources */ = {isa = PBXBuildFile; fileRef = 33CC11122044BFA00003C045 /* MainFlutterWindow.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		331C80D9294CF71000263BE5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 33CC10E52044A3C60003C045 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 33CC10EC2044A3C60003C045;
			remoteInfo = Runner;
		};
		33CC111F2044C79F0003C045 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = 33CC10E52044A3C60003C045 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = 33CC111A2044C6BA0003C045;
			remoteInfo = FLX;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXCopyFilesBuildPhase section */
		33CC110E2044A8840003C045 /* Bundle Framework */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = "";
			dstSubfolderSpec = 10;
			files = (
			);
			name = "Bundle Framework";
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		331C80D5294CF71000263BE5 /* RunnerTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = RunnerTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		331C80D7294CF71000263BE5 /* RunnerTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RunnerTests.swift; sourceTree = "<group>"; };
		333000ED22D3DE5D00554162 /* Warnings.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Warnings.xcconfig; sourceTree = "<group>"; };
		335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = GeneratedPluginRegistrant.swift; sourceTree = "<group>"; };
		33CC10ED2044A3C60003C045 /* irctc_ui.app */ = {isa = PBXFileReference; explicitFileType = wrapper.application; includeInIndex = 0; path = "irctc_ui.app"; sourceTree = BUILT_PRODUCTS_DIR; };
		33CC10F02044A3C60003C045 /* AppDelegate.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = AppDelegate.swift; sourceTree = "<group>"; };
		33CC10F22044A3C60003C045 /* Assets.xcassets */ = {isa = PBXFileReference; lastKnownFileType = folder.assetcatalog; name = Assets.xcassets; path = Runner/Assets.xcassets; sourceTree = "<group>"; };
		33CC10F52044A3C60003C045 /* Base */ = {isa = PBXFileReference; lastKnownFileType = file.xib; name = Base; path = Base.lproj/MainMenu.xib; sourceTree = "<group>"; };
		33CC10F72044A3C60003C045 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; name = Info.plist; path = Runner/Info.plist; sourceTree = "<group>"; };
		33CC11122044BFA00003C045 /* MainFlutterWindow.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MainFlutterWindow.swift; sourceTree = "<group>"; };
		33CEB47222A05771004F2AC0 /* Flutter-Debug.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "Flutter-Debug.xcconfig"; sourceTree = "<group>"; };
		33CEB47422A05771004F2AC0 /* Flutter-Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = "Flutter-Release.xcconfig"; sourceTree = "<group>"; };
		33CEB47722A0578A004F2AC0 /* Flutter-Generated.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; name = "Flutter-Generated.xcconfig"; path = "ephemeral/Flutter-Generated.xcconfig"; sourceTree = "<group>"; };
		33E51913231747F40026EE4D /* DebugProfile.entitlements */ = {isa = PBXFileReference; lastKnownFileType = text.plist.entitlements; path = DebugProfile.entitlements; sourceTree = "<group>"; };
		33E51914231749380026EE4D /* Release.entitlements */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.plist.entitlements; path = Release.entitlements; sourceTree = "<group>"; };
		33E5194F232828860026EE4D /* AppInfo.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = AppInfo.xcconfig; sourceTree = "<group>"; };
		7AFA3C8E1D35360C0083082E /* Release.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Release.xcconfig; sourceTree = "<group>"; };
		9740EEB21CF90195004384FC /* Debug.xcconfig */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = text.xcconfig; path = Debug.xcconfig; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		331C80D2294CF70F00263BE5 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		33CC10EA2044A3C60003C045 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		331C80D6294CF71000263BE5 /* RunnerTests */ = {
			isa = PBXGroup;
			children = (
				331C80D7294CF71000263BE5 /* RunnerTests.swift */,
			);
			path = RunnerTests;
			sourceTree = "<group>";
		};
		33BA886A226E78AF003329D5 /* Configs */ = {
			isa = PBXGroup;
			children = (
				33E5194F232828860026EE4D /* AppInfo.xcconfig */,
				9740EEB21CF90195004384FC /* Debug.xcconfig */,
				7AFA3C8E1D35360C0083082E /* Release.xcconfig */,
				333000ED22D3DE5D00554162 /* Warnings.xcconfig */,
			);
			path = Configs;
			sourceTree = "<group>";
		};
		33CC10E42044A3C60003C045 = {
			isa = PBXGroup;
			children = (
				33FAB671232836740065AC1E /* Runner */,
				33CEB47122A05771004F2AC0 /* Flutter */,
				331C80D6294CF71000263BE5 /* RunnerTests */,
				33CC10EE2044A3C60003C045 /* Products */,
				D73912EC22F37F3D000D13A0 /* Frameworks */,
			);
			sourceTree = "<group>";
		};
		33CC10EE2044A3C60003C045 /* Products */ = {
			isa = PBXGroup;
			children = (
				33CC10ED2044A3C60003C045 /* irctc_ui.app */,
				331C80D5294CF71000263BE5 /* RunnerTests.xctest */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		33CC11242044D66E0003C045 /* Resources */ = {
			isa = PBXGroup;
			children = (
				33CC10F22044A3C60003C045 /* Assets.xcassets */,
				33CC10F42044A3C60003C045 /* MainMenu.xib */,
				33CC10F72044A3C60003C045 /* Info.plist */,
			);
			name = Resources;
			path = ..;
			sourceTree = "<group>";
		};
		33CEB47122A05771004F2AC0 /* Flutter */ = {
			isa = PBXGroup;
			children = (
				335BBD1A22A9A15E00E9071D /* GeneratedPluginRegistrant.swift */,
				33CEB47222A05771004F2AC0 /* Flutter-Debug.xcconfig */,
				33CEB47422A05771004F2AC0 /* Flutter-Release.xcconfig */,
				33CEB47722A0578A004F2AC0 /* Flutter-Generated.xcconfig */,
			);
			path = Flutter;
			sourceTree = "<group>";
		};
		33FAB671232836740065AC1E /* Runner */ = {
			isa = PBXGroup;
			children = (
				33CC10F02044A3C60003C045 /* AppDelegate.swift */,
				33CC11122044BFA00003C045 /* MainFlutterWindow.swift */,
				33E51913231747F40026EE4D /* DebugProfile.entitlements */,
				33E51914231749380026EE4D /* Release.entitlements */,
				33CC11242044D66E0003C045 /* Resources */,
				33BA886A226E78AF003329D5 /* Configs */,
			);
			path = Runner;
			sourceTree = "<group>";
		};
		D73912EC22F37F3D000D13A0 /* Frameworks */ = {
			isa = PBXGroup;
			children = (
			);
			name = Frameworks;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		331C80D4294CF70F00263BE5 /* RunnerTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 331C80DE294CF71000263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */;
			buildPhases = (
				331C80D1294CF70F00263BE5 /* Sources */,
				331C80D2294CF70F00263BE5 /* Frameworks */,
				331C80D3294CF70F00263BE5 /* Resources */,
			);
			buildRules = (
			);
			dependencies = (
				331C80DA294CF71000263BE5 /* PBXTargetDependency */,
			);
			name = RunnerTests;
			productName = RunnerTests;
			productReference = 331C80D5294CF71000263BE5 /* RunnerTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		33CC10EC2044A3C60003C045 /* Runner */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = 33CC10FB2044A3C60003C045 /* Build configuration list for PBXNativeTarget "Runner" */;
			buildPhases = (
				33CC10E92044A3C60003C045 /* Sources */,
				33CC10EA2044A3C60003C045 /* Frameworks */,
				33CC10EB2044A3C60003C045 /* Resources */,
				33CC110E2044A8840003C045 /* Bundle Framework */,
				3399D490228B24CF009A79C7 /* ShellScript */,
			);
			buildRules = (
			);
			dependencies = (
				33CC11202044C79F0003C045 /* PBXTargetDependency */,
			);
			name = Runner;
			productName = Runner;
			productReference = 33CC10ED2044A3C60003C045 /* irctc_ui.app */;
			productType = "com.apple.product-type.application";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		33CC10E52044A3C60003C045 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastSwiftUpdateCheck = 0920;
				LastUpgradeCheck = 1430;
				ORGANIZATIONNAME = "";
				TargetAttributes = {
					331C80D4294CF70F00263BE5 = {
						CreatedOnToolsVersion = 14.0;
						TestTargetID = 33CC10EC2044A3C60003C045;
					};
					33CC10EC2044A3C60003C045 = {
						CreatedOnToolsVersion = 9.2;
						LastSwiftMigration = 1100;
						ProvisioningStyle = Automatic;
						SystemCapabilities = {
							com.apple.Sandbox = {
								enabled = 1;
							};
						};
					};
					33CC111A2044C6BA0003C045 = {
						CreatedOnToolsVersion = 9.2;
						ProvisioningStyle = Manual;
					};
				};
			};
			buildConfigurationList = 33CC10E82044A3C60003C045 /* Build configuration list for PBXProject "Runner" */;
			compatibilityVersion = "Xcode 9.3";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = 33CC10E42044A3C60003C045;
			productRefGroup = 33CC10EE2044A3C60003C045 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				33CC10EC2044A3C60003C045 /* Runner */,
				331C80D4294CF70F00263BE5 /* RunnerTests */,
				33CC111A2044C6BA0003C045 /* Flutter Assemble */,
			);
		};
/* End PBXProject section */

/* Begin PBXResourcesBuildPhase section */
		331C80D3294CF70F00263BE5 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		33CC10EB2044A3C60003C045 /* Resources */ = {
			isa = PBXResourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				33CC10F32044A3C60003C045 /* Assets.xcassets in Resources */,
				33CC10F62044A3C60003C045 /* MainMenu.xib in Resources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXResourcesBuildPhase section */

/* Begin PBXShellScriptBuildPhase section */
		3399D490228B24CF009A79C7 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			alwaysOutOfDate = 1;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "echo \"$PRODUCT_NAME.app\" > \"$PROJECT_DIR\"/Flutter/ephemeral/.app_filename && \"$FLUTTER_ROOT\"/packages/flutter_tools/bin/macos_assemble.sh embed\n";
		};
		33CC111E2044C6BF0003C045 /* ShellScript */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
				Flutter/ephemeral/FlutterInputs.xcfilelist,
			);
			inputPaths = (
				Flutter/ephemeral/tripwire,
			);
			outputFileListPaths = (
				Flutter/ephemeral/FlutterOutputs.xcfilelist,
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "\"$FLUTTER_ROOT\"/packages/flutter_tools/bin/macos_assemble.sh && touch Flutter/ephemeral/tripwire";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		331C80D1294CF70F00263BE5 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				331C80D8294CF71000263BE5 /* RunnerTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		33CC10E92044A3C60003C045 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				33CC11132044BFA00003C045 /* MainFlutterWindow.swift in Sources */,
				33CC10F12044A3C60003C045 /* AppDelegate.swift in Sources */,
				335BBD1B22A9A15E00E9071D /* GeneratedPluginRegistrant.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		331C80DA294CF71000263BE5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 33CC10EC2044A3C60003C045 /* Runner */;
			targetProxy = 331C80D9294CF71000263BE5 /* PBXContainerItemProxy */;
		};
		33CC11202044C79F0003C045 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = 33CC111A2044C6BA0003C045 /* Flutter Assemble */;
			targetProxy = 33CC111F2044C79F0003C045 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin PBXVariantGroup section */
		33CC10F42044A3C60003C045 /* MainMenu.xib */ = {
			isa = PBXVariantGroup;
			children = (
				33CC10F52044A3C60003C045 /* Base */,
			);
			name = MainMenu.xib;
			path = Runner;
			sourceTree = "<group>";
		};
/* End PBXVariantGroup section */

/* Begin XCBuildConfiguration section */
		331C80DB294CF71000263BE5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CURRENT_PROJECT_VERSION = 1;
				GENERATE_INFOPLIST_FILE = YES;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi.RunnerTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/irctc_ui.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/irctc_ui";
			};
			name = Debug;
		};
		331C80DC294CF71000263BE5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CURRENT_PROJECT_VERSION = 1;
				GENERATE_INFOPLIST_FILE = YES;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi.RunnerTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/irctc_ui.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/irctc_ui";
			};
			name = Release;
		};
		331C80DD294CF71000263BE5 /* Profile */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				BUNDLE_LOADER = "$(TEST_HOST)";
				CURRENT_PROJECT_VERSION = 1;
				GENERATE_INFOPLIST_FILE = YES;
				MARKETING_VERSION = 1.0;
				PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi.RunnerTests;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
				TEST_HOST = "$(BUILT_PRODUCTS_DIR)/irctc_ui.app/$(BUNDLE_EXECUTABLE_FOLDER_PATH)/irctc_ui";
			};
			name = Profile;
		};
		338D0CE9231458BD00FA5F75 /* Profile */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Profile;
		};
		338D0CEA231458BD00FA5F75 /* Profile */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = Runner/DebugProfile.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				INFOPLIST_FILE = Runner/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
				);
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
			};
			name = Profile;
		};
		338D0CEB231458BD00FA5F75 /* Profile */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Manual;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Profile;
		};
		33CC10F92044A3C60003C045 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 9740EEB21CF90195004384FC /* Debug.xcconfig */;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				MTL_ENABLE_DEBUG_INFO = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		33CC10FA2044A3C60003C045 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 7AFA3C8E1D35360C0083082E /* Release.xcconfig */;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++14";
				CLANG_CXX_LIBRARY = "libc++";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CODE_SIGN_IDENTITY = "-";
				COPY_PHASE_STRIP = NO;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 10.14;
				MTL_ENABLE_DEBUG_INFO = NO;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		33CC10FC2044A3C60003C045 /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = Runner/DebugProfile.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				INFOPLIST_FILE = Runner/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
				);
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		33CC10FD2044A3C60003C045 /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = 33E5194F232828860026EE4D /* AppInfo.xcconfig */;
			buildSettings = {
				ASSETCATALOG_COMPILER_APPICON_NAME = AppIcon;
				CLANG_ENABLE_MODULES = YES;
				CODE_SIGN_ENTITLEMENTS = Runner/Release.entitlements;
				CODE_SIGN_STYLE = Automatic;
				COMBINE_HIDPI_IMAGES = YES;
				INFOPLIST_FILE = Runner/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = (
					"$(inherited)",
					"@executable_path/../Frameworks",
				);
				PROVISIONING_PROFILE_SPECIFIER = "";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
		33CC111C2044C6BA0003C045 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Manual;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		33CC111D2044C6BA0003C045 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		331C80DE294CF71000263BE5 /* Build configuration list for PBXNativeTarget "RunnerTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				331C80DB294CF71000263BE5 /* Debug */,
				331C80DC294CF71000263BE5 /* Release */,
				331C80DD294CF71000263BE5 /* Profile */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		33CC10E82044A3C60003C045 /* Build configuration list for PBXProject "Runner" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				33CC10F92044A3C60003C045 /* Debug */,
				33CC10FA2044A3C60003C045 /* Release */,
				338D0CE9231458BD00FA5F75 /* Profile */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		33CC10FB2044A3C60003C045 /* Build configuration list for PBXNativeTarget "Runner" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				33CC10FC2044A3C60003C045 /* Debug */,
				33CC10FD2044A3C60003C045 /* Release */,
				338D0CEA231458BD00FA5F75 /* Profile */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		33CC111B2044C6BA0003C045 /* Build configuration list for PBXAggregateTarget "Flutter Assemble" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				33CC111C2044C6BA0003C045 /* Debug */,
				33CC111D2044C6BA0003C045 /* Release */,
				338D0CEB231458BD00FA5F75 /* Profile */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = 33CC10E52044A3C60003C045 /* Project object */;
}


# CMakeLists.txt

# This file controls Flutter-level build steps. It should not be edited.
cmake_minimum_required(VERSION 3.14)

set(EPHEMERAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/ephemeral")

# Configuration provided via flutter tool.
include(${EPHEMERAL_DIR}/generated_config.cmake)

# TODO: Move the rest of this into files in ephemeral. See
# https://github.com/flutter/flutter/issues/57146.
set(WRAPPER_ROOT "${EPHEMERAL_DIR}/cpp_client_wrapper")

# Set fallback configurations for older versions of the flutter tool.
if (NOT DEFINED FLUTTER_TARGET_PLATFORM)
  set(FLUTTER_TARGET_PLATFORM "windows-x64")
endif()

# === Flutter Library ===
set(FLUTTER_LIBRARY "${EPHEMERAL_DIR}/flutter_windows.dll")

# Published to parent scope for install step.
set(FLUTTER_LIBRARY ${FLUTTER_LIBRARY} PARENT_SCOPE)
set(FLUTTER_ICU_DATA_FILE "${EPHEMERAL_DIR}/icudtl.dat" PARENT_SCOPE)
set(PROJECT_BUILD_DIR "${PROJECT_DIR}/build/" PARENT_SCOPE)
set(AOT_LIBRARY "${PROJECT_DIR}/build/windows/app.so" PARENT_SCOPE)

list(APPEND FLUTTER_LIBRARY_HEADERS
  "flutter_export.h"
  "flutter_windows.h"
  "flutter_messenger.h"
  "flutter_plugin_registrar.h"
  "flutter_texture_registrar.h"
)
list(TRANSFORM FLUTTER_LIBRARY_HEADERS PREPEND "${EPHEMERAL_DIR}/")
add_library(flutter INTERFACE)
target_include_directories(flutter INTERFACE
  "${EPHEMERAL_DIR}"
)
target_link_libraries(flutter INTERFACE "${FLUTTER_LIBRARY}.lib")
add_dependencies(flutter flutter_assemble)

# === Wrapper ===
list(APPEND CPP_WRAPPER_SOURCES_CORE
  "core_implementations.cc"
  "standard_codec.cc"
)
list(TRANSFORM CPP_WRAPPER_SOURCES_CORE PREPEND "${WRAPPER_ROOT}/")
list(APPEND CPP_WRAPPER_SOURCES_PLUGIN
  "plugin_registrar.cc"
)
list(TRANSFORM CPP_WRAPPER_SOURCES_PLUGIN PREPEND "${WRAPPER_ROOT}/")
list(APPEND CPP_WRAPPER_SOURCES_APP
  "flutter_engine.cc"
  "flutter_view_controller.cc"
)
list(TRANSFORM CPP_WRAPPER_SOURCES_APP PREPEND "${WRAPPER_ROOT}/")

# Wrapper sources needed for a plugin.
add_library(flutter_wrapper_plugin STATIC
  ${CPP_WRAPPER_SOURCES_CORE}
  ${CPP_WRAPPER_SOURCES_PLUGIN}
)
apply_standard_settings(flutter_wrapper_plugin)
set_target_properties(flutter_wrapper_plugin PROPERTIES
  POSITION_INDEPENDENT_CODE ON)
set_target_properties(flutter_wrapper_plugin PROPERTIES
  CXX_VISIBILITY_PRESET hidden)
target_link_libraries(flutter_wrapper_plugin PUBLIC flutter)
target_include_directories(flutter_wrapper_plugin PUBLIC
  "${WRAPPER_ROOT}/include"
)
add_dependencies(flutter_wrapper_plugin flutter_assemble)

# Wrapper sources needed for the runner.
add_library(flutter_wrapper_app STATIC
  ${CPP_WRAPPER_SOURCES_CORE}
  ${CPP_WRAPPER_SOURCES_APP}
)
apply_standard_settings(flutter_wrapper_app)
target_link_libraries(flutter_wrapper_app PUBLIC flutter)
target_include_directories(flutter_wrapper_app PUBLIC
  "${WRAPPER_ROOT}/include"
)
add_dependencies(flutter_wrapper_app flutter_assemble)

# === Flutter tool backend ===
# _phony_ is a non-existent file to force this command to run every time,
# since currently there's no way to get a full input/output list from the
# flutter tool.
set(PHONY_OUTPUT "${CMAKE_CURRENT_BINARY_DIR}/_phony_")
set_source_files_properties("${PHONY_OUTPUT}" PROPERTIES SYMBOLIC TRUE)
add_custom_command(
  OUTPUT ${FLUTTER_LIBRARY} ${FLUTTER_LIBRARY_HEADERS}
    ${CPP_WRAPPER_SOURCES_CORE} ${CPP_WRAPPER_SOURCES_PLUGIN}
    ${CPP_WRAPPER_SOURCES_APP}
    ${PHONY_OUTPUT}
  COMMAND ${CMAKE_COMMAND} -E env
    ${FLUTTER_TOOL_ENVIRONMENT}
    "${FLUTTER_ROOT}/packages/flutter_tools/bin/tool_backend.bat"
      ${FLUTTER_TARGET_PLATFORM} $<CONFIG>
  VERBATIM
)
add_custom_target(flutter_assemble DEPENDS
  "${FLUTTER_LIBRARY}"
  ${FLUTTER_LIBRARY_HEADERS}
  ${CPP_WRAPPER_SOURCES_CORE}
  ${CPP_WRAPPER_SOURCES_PLUGIN}
  ${CPP_WRAPPER_SOURCES_APP}
)


# generated_plugins.cmake

#
# Generated file, do not edit.
#

list(APPEND FLUTTER_PLUGIN_LIST
)

list(APPEND FLUTTER_FFI_PLUGIN_LIST
)

set(PLUGIN_BUNDLED_LIBRARIES)

foreach(plugin ${FLUTTER_PLUGIN_LIST})
  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${plugin}/windows plugins/${plugin})
  target_link_libraries(${BINARY_NAME} PRIVATE ${plugin}_plugin)
  list(APPEND PLUGIN_BUNDLED_LIBRARIES $<TARGET_FILE:${plugin}_plugin>)
  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${plugin}_bundled_libraries})
endforeach(plugin)

foreach(ffi_plugin ${FLUTTER_FFI_PLUGIN_LIST})
  add_subdirectory(flutter/ephemeral/.plugin_symlinks/${ffi_plugin}/windows plugins/${ffi_plugin})
  list(APPEND PLUGIN_BUNDLED_LIBRARIES ${${ffi_plugin}_bundled_libraries})
endforeach(ffi_plugin)


# generated_plugin_registrant.h

//
//  Generated file. Do not edit.
//

// clang-format off

#ifndef GENERATED_PLUGIN_REGISTRANT_
#define GENERATED_PLUGIN_REGISTRANT_

#include <flutter/plugin_registry.h>

// Registers Flutter plugins.
void RegisterPlugins(flutter::PluginRegistry* registry);

#endif  // GENERATED_PLUGIN_REGISTRANT_


# gradle-wrapper.properties

distributionBase=GRADLE_USER_HOME
distributionPath=wrapper/dists
zipStoreBase=GRADLE_USER_HOME
zipStorePath=wrapper/dists
distributionUrl=https\://services.gradle.org/distributions/gradle-7.5-all.zip


# CMakeLists.txt

cmake_minimum_required(VERSION 3.14)
project(runner LANGUAGES CXX)

# Define the application target. To change its name, change BINARY_NAME in the
# top-level CMakeLists.txt, not the value here, or `flutter run` will no longer
# work.
#
# Any new source files that you add to the application should be added here.
add_executable(${BINARY_NAME} WIN32
  "flutter_window.cpp"
  "main.cpp"
  "utils.cpp"
  "win32_window.cpp"
  "${FLUTTER_MANAGED_DIR}/generated_plugin_registrant.cc"
  "Runner.rc"
  "runner.exe.manifest"
)

# Apply the standard set of build settings. This can be removed for applications
# that need different build settings.
apply_standard_settings(${BINARY_NAME})

# Add preprocessor definitions for the build version.
target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION=\"${FLUTTER_VERSION}\"")
target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_MAJOR=${FLUTTER_VERSION_MAJOR}")
target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_MINOR=${FLUTTER_VERSION_MINOR}")
target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_PATCH=${FLUTTER_VERSION_PATCH}")
target_compile_definitions(${BINARY_NAME} PRIVATE "FLUTTER_VERSION_BUILD=${FLUTTER_VERSION_BUILD}")

# Disable Windows macros that collide with C++ standard library functions.
target_compile_definitions(${BINARY_NAME} PRIVATE "NOMINMAX")

# Add dependency libraries and include directories. Add any application-specific
# dependencies here.
target_link_libraries(${BINARY_NAME} PRIVATE flutter flutter_wrapper_app)
target_link_libraries(${BINARY_NAME} PRIVATE "dwmapi.lib")
target_include_directories(${BINARY_NAME} PRIVATE "${CMAKE_SOURCE_DIR}")

# Run the Flutter tool portions of the build. This must not be removed.
add_dependencies(${BINARY_NAME} flutter_assemble)


# Runner.rc

// Microsoft Visual C++ generated resource script.
//
#pragma code_page(65001)
#include "resource.h"

#define APSTUDIO_READONLY_SYMBOLS
/////////////////////////////////////////////////////////////////////////////
//
// Generated from the TEXTINCLUDE 2 resource.
//
#include "winres.h"

/////////////////////////////////////////////////////////////////////////////
#undef APSTUDIO_READONLY_SYMBOLS

/////////////////////////////////////////////////////////////////////////////
// English (United States) resources

#if !defined(AFX_RESOURCE_DLL) || defined(AFX_TARG_ENU)
LANGUAGE LANG_ENGLISH, SUBLANG_ENGLISH_US

#ifdef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// TEXTINCLUDE
//

1 TEXTINCLUDE
BEGIN
    "resource.h\0"
END

2 TEXTINCLUDE
BEGIN
    "#include ""winres.h""\r\n"
    "\0"
END

3 TEXTINCLUDE
BEGIN
    "\r\n"
    "\0"
END

#endif    // APSTUDIO_INVOKED


/////////////////////////////////////////////////////////////////////////////
//
// Icon
//

// Icon with lowest ID value placed first to ensure application icon
// remains consistent on all systems.
IDI_APP_ICON            ICON                    "resources\\app_icon.ico"


/////////////////////////////////////////////////////////////////////////////
//
// Version
//

#if defined(FLUTTER_VERSION_MAJOR) && defined(FLUTTER_VERSION_MINOR) && defined(FLUTTER_VERSION_PATCH) && defined(FLUTTER_VERSION_BUILD)
#define VERSION_AS_NUMBER FLUTTER_VERSION_MAJOR,FLUTTER_VERSION_MINOR,FLUTTER_VERSION_PATCH,FLUTTER_VERSION_BUILD
#else
#define VERSION_AS_NUMBER 1,0,0,0
#endif

#if defined(FLUTTER_VERSION)
#define VERSION_AS_STRING FLUTTER_VERSION
#else
#define VERSION_AS_STRING "1.0.0"
#endif

VS_VERSION_INFO VERSIONINFO
 FILEVERSION VERSION_AS_NUMBER
 PRODUCTVERSION VERSION_AS_NUMBER
 FILEFLAGSMASK VS_FFI_FILEFLAGSMASK
#ifdef _DEBUG
 FILEFLAGS VS_FF_DEBUG
#else
 FILEFLAGS 0x0L
#endif
 FILEOS VOS__WINDOWS32
 FILETYPE VFT_APP
 FILESUBTYPE 0x0L
BEGIN
    BLOCK "StringFileInfo"
    BEGIN
        BLOCK "040904e4"
        BEGIN
            VALUE "CompanyName", "com.example" "\0"
            VALUE "FileDescription", "irctc_ui" "\0"
            VALUE "FileVersion", VERSION_AS_STRING "\0"
            VALUE "InternalName", "irctc_ui" "\0"
            VALUE "LegalCopyright", "Copyright (C) 2024 com.example. All rights reserved." "\0"
            VALUE "OriginalFilename", "irctc_ui.exe" "\0"
            VALUE "ProductName", "irctc_ui" "\0"
            VALUE "ProductVersion", VERSION_AS_STRING "\0"
        END
    END
    BLOCK "VarFileInfo"
    BEGIN
        VALUE "Translation", 0x409, 1252
    END
END

#endif    // English (United States) resources
/////////////////////////////////////////////////////////////////////////////



#ifndef APSTUDIO_INVOKED
/////////////////////////////////////////////////////////////////////////////
//
// Generated from the TEXTINCLUDE 3 resource.
//


/////////////////////////////////////////////////////////////////////////////
#endif    // not APSTUDIO_INVOKED


# generated_plugin_registrant.cc

//
//  Generated file. Do not edit.
//

// clang-format off

#include "generated_plugin_registrant.h"


void RegisterPlugins(flutter::PluginRegistry* registry) {
}


# utils.cpp

#include "utils.h"

#include <flutter_windows.h>
#include <io.h>
#include <stdio.h>
#include <windows.h>

#include <iostream>

void CreateAndAttachConsole() {
  if (::AllocConsole()) {
    FILE *unused;
    if (freopen_s(&unused, "CONOUT$", "w", stdout)) {
      _dup2(_fileno(stdout), 1);
    }
    if (freopen_s(&unused, "CONOUT$", "w", stderr)) {
      _dup2(_fileno(stdout), 2);
    }
    std::ios::sync_with_stdio();
    FlutterDesktopResyncOutputStreams();
  }
}

std::vector<std::string> GetCommandLineArguments() {
  // Convert the UTF-16 command line arguments to UTF-8 for the Engine to use.
  int argc;
  wchar_t** argv = ::CommandLineToArgvW(::GetCommandLineW(), &argc);
  if (argv == nullptr) {
    return std::vector<std::string>();
  }

  std::vector<std::string> command_line_arguments;

  // Skip the first argument as it's the binary name.
  for (int i = 1; i < argc; i++) {
    command_line_arguments.push_back(Utf8FromUtf16(argv[i]));
  }

  ::LocalFree(argv);

  return command_line_arguments;
}

std::string Utf8FromUtf16(const wchar_t* utf16_string) {
  if (utf16_string == nullptr) {
    return std::string();
  }
  int target_length = ::WideCharToMultiByte(
      CP_UTF8, WC_ERR_INVALID_CHARS, utf16_string,
      -1, nullptr, 0, nullptr, nullptr)
    -1; // remove the trailing null character
  int input_length = (int)wcslen(utf16_string);
  std::string utf8_string;
  if (target_length <= 0 || target_length > utf8_string.max_size()) {
    return utf8_string;
  }
  utf8_string.resize(target_length);
  int converted_length = ::WideCharToMultiByte(
      CP_UTF8, WC_ERR_INVALID_CHARS, utf16_string,
      input_length, utf8_string.data(), target_length, nullptr, nullptr);
  if (converted_length == 0) {
    return std::string();
  }
  return utf8_string;
}


# flutter_window.cpp

#include "flutter_window.h"

#include <optional>

#include "flutter/generated_plugin_registrant.h"

FlutterWindow::FlutterWindow(const flutter::DartProject& project)
    : project_(project) {}

FlutterWindow::~FlutterWindow() {}

bool FlutterWindow::OnCreate() {
  if (!Win32Window::OnCreate()) {
    return false;
  }

  RECT frame = GetClientArea();

  // The size here must match the window dimensions to avoid unnecessary surface
  // creation / destruction in the startup path.
  flutter_controller_ = std::make_unique<flutter::FlutterViewController>(
      frame.right - frame.left, frame.bottom - frame.top, project_);
  // Ensure that basic setup of the controller was successful.
  if (!flutter_controller_->engine() || !flutter_controller_->view()) {
    return false;
  }
  RegisterPlugins(flutter_controller_->engine());
  SetChildContent(flutter_controller_->view()->GetNativeWindow());

  flutter_controller_->engine()->SetNextFrameCallback([&]() {
    this->Show();
  });

  // Flutter can complete the first frame before the "show window" callback is
  // registered. The following call ensures a frame is pending to ensure the
  // window is shown. It is a no-op if the first frame hasn't completed yet.
  flutter_controller_->ForceRedraw();

  return true;
}

void FlutterWindow::OnDestroy() {
  if (flutter_controller_) {
    flutter_controller_ = nullptr;
  }

  Win32Window::OnDestroy();
}

LRESULT
FlutterWindow::MessageHandler(HWND hwnd, UINT const message,
                              WPARAM const wparam,
                              LPARAM const lparam) noexcept {
  // Give Flutter, including plugins, an opportunity to handle window messages.
  if (flutter_controller_) {
    std::optional<LRESULT> result =
        flutter_controller_->HandleTopLevelWindowProc(hwnd, message, wparam,
                                                      lparam);
    if (result) {
      return *result;
    }
  }

  switch (message) {
    case WM_FONTCHANGE:
      flutter_controller_->engine()->ReloadSystemFonts();
      break;
  }

  return Win32Window::MessageHandler(hwnd, message, wparam, lparam);
}


# resource.h

//{{NO_DEPENDENCIES}}
// Microsoft Visual C++ generated include file.
// Used by Runner.rc
//
#define IDI_APP_ICON                    101

// Next default values for new objects
//
#ifdef APSTUDIO_INVOKED
#ifndef APSTUDIO_READONLY_SYMBOLS
#define _APS_NEXT_RESOURCE_VALUE        102
#define _APS_NEXT_COMMAND_VALUE         40001
#define _APS_NEXT_CONTROL_VALUE         1001
#define _APS_NEXT_SYMED_VALUE           101
#endif
#endif


# runner.exe.manifest

<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersion="1.0">
  <application xmlns="urn:schemas-microsoft-com:asm.v3">
    <windowsSettings>
      <dpiAwareness xmlns="http://schemas.microsoft.com/SMI/2016/WindowsSettings">PerMonitorV2</dpiAwareness>
    </windowsSettings>
  </application>
  <compatibility xmlns="urn:schemas-microsoft-com:compatibility.v1">
    <application>
      <!-- Windows 10 and Windows 11 -->
      <supportedOS Id="{8e0f7a12-bfb3-4fe8-b9a5-48fd50a15a9a}"/>
      <!-- Windows 8.1 -->
      <supportedOS Id="{1f676c76-80e1-4239-95bb-83d0f6d0da78}"/>
      <!-- Windows 8 -->
      <supportedOS Id="{4a2f28e3-53b9-4441-ba9c-d69d4a4a6e38}"/>
      <!-- Windows 7 -->
      <supportedOS Id="{35138b9a-5d96-4fbd-8e2d-a2440225f93a}"/>
    </application>
  </compatibility>
</assembly>


# flutter_window.h

#ifndef RUNNER_FLUTTER_WINDOW_H_
#define RUNNER_FLUTTER_WINDOW_H_

#include <flutter/dart_project.h>
#include <flutter/flutter_view_controller.h>

#include <memory>

#include "win32_window.h"

// A window that does nothing but host a Flutter view.
class FlutterWindow : public Win32Window {
 public:
  // Creates a new FlutterWindow hosting a Flutter view running |project|.
  explicit FlutterWindow(const flutter::DartProject& project);
  virtual ~FlutterWindow();

 protected:
  // Win32Window:
  bool OnCreate() override;
  void OnDestroy() override;
  LRESULT MessageHandler(HWND window, UINT const message, WPARAM const wparam,
                         LPARAM const lparam) noexcept override;

 private:
  // The project to run.
  flutter::DartProject project_;

  // The Flutter instance hosted by this window.
  std::unique_ptr<flutter::FlutterViewController> flutter_controller_;
};

#endif  // RUNNER_FLUTTER_WINDOW_H_


# win32_window.cpp

#include "win32_window.h"

#include <dwmapi.h>
#include <flutter_windows.h>

#include "resource.h"

namespace {

/// Window attribute that enables dark mode window decorations.
///
/// Redefined in case the developer's machine has a Windows SDK older than
/// version 10.0.22000.0.
/// See: https://docs.microsoft.com/windows/win32/api/dwmapi/ne-dwmapi-dwmwindowattribute
#ifndef DWMWA_USE_IMMERSIVE_DARK_MODE
#define DWMWA_USE_IMMERSIVE_DARK_MODE 20
#endif

constexpr const wchar_t kWindowClassName[] = L"FLUTTER_RUNNER_WIN32_WINDOW";

/// Registry key for app theme preference.
///
/// A value of 0 indicates apps should use dark mode. A non-zero or missing
/// value indicates apps should use light mode.
constexpr const wchar_t kGetPreferredBrightnessRegKey[] =
  L"Software\\Microsoft\\Windows\\CurrentVersion\\Themes\\Personalize";
constexpr const wchar_t kGetPreferredBrightnessRegValue[] = L"AppsUseLightTheme";

// The number of Win32Window objects that currently exist.
static int g_active_window_count = 0;

using EnableNonClientDpiScaling = BOOL __stdcall(HWND hwnd);

// Scale helper to convert logical scaler values to physical using passed in
// scale factor
int Scale(int source, double scale_factor) {
  return static_cast<int>(source * scale_factor);
}

// Dynamically loads the |EnableNonClientDpiScaling| from the User32 module.
// This API is only needed for PerMonitor V1 awareness mode.
void EnableFullDpiSupportIfAvailable(HWND hwnd) {
  HMODULE user32_module = LoadLibraryA("User32.dll");
  if (!user32_module) {
    return;
  }
  auto enable_non_client_dpi_scaling =
      reinterpret_cast<EnableNonClientDpiScaling*>(
          GetProcAddress(user32_module, "EnableNonClientDpiScaling"));
  if (enable_non_client_dpi_scaling != nullptr) {
    enable_non_client_dpi_scaling(hwnd);
  }
  FreeLibrary(user32_module);
}

}  // namespace

// Manages the Win32Window's window class registration.
class WindowClassRegistrar {
 public:
  ~WindowClassRegistrar() = default;

  // Returns the singleton registrar instance.
  static WindowClassRegistrar* GetInstance() {
    if (!instance_) {
      instance_ = new WindowClassRegistrar();
    }
    return instance_;
  }

  // Returns the name of the window class, registering the class if it hasn't
  // previously been registered.
  const wchar_t* GetWindowClass();

  // Unregisters the window class. Should only be called if there are no
  // instances of the window.
  void UnregisterWindowClass();

 private:
  WindowClassRegistrar() = default;

  static WindowClassRegistrar* instance_;

  bool class_registered_ = false;
};

WindowClassRegistrar* WindowClassRegistrar::instance_ = nullptr;

const wchar_t* WindowClassRegistrar::GetWindowClass() {
  if (!class_registered_) {
    WNDCLASS window_class{};
    window_class.hCursor = LoadCursor(nullptr, IDC_ARROW);
    window_class.lpszClassName = kWindowClassName;
    window_class.style = CS_HREDRAW | CS_VREDRAW;
    window_class.cbClsExtra = 0;
    window_class.cbWndExtra = 0;
    window_class.hInstance = GetModuleHandle(nullptr);
    window_class.hIcon =
        LoadIcon(window_class.hInstance, MAKEINTRESOURCE(IDI_APP_ICON));
    window_class.hbrBackground = 0;
    window_class.lpszMenuName = nullptr;
    window_class.lpfnWndProc = Win32Window::WndProc;
    RegisterClass(&window_class);
    class_registered_ = true;
  }
  return kWindowClassName;
}

void WindowClassRegistrar::UnregisterWindowClass() {
  UnregisterClass(kWindowClassName, nullptr);
  class_registered_ = false;
}

Win32Window::Win32Window() {
  ++g_active_window_count;
}

Win32Window::~Win32Window() {
  --g_active_window_count;
  Destroy();
}

bool Win32Window::Create(const std::wstring& title,
                         const Point& origin,
                         const Size& size) {
  Destroy();

  const wchar_t* window_class =
      WindowClassRegistrar::GetInstance()->GetWindowClass();

  const POINT target_point = {static_cast<LONG>(origin.x),
                              static_cast<LONG>(origin.y)};
  HMONITOR monitor = MonitorFromPoint(target_point, MONITOR_DEFAULTTONEAREST);
  UINT dpi = FlutterDesktopGetDpiForMonitor(monitor);
  double scale_factor = dpi / 96.0;

  HWND window = CreateWindow(
      window_class, title.c_str(), WS_OVERLAPPEDWINDOW,
      Scale(origin.x, scale_factor), Scale(origin.y, scale_factor),
      Scale(size.width, scale_factor), Scale(size.height, scale_factor),
      nullptr, nullptr, GetModuleHandle(nullptr), this);

  if (!window) {
    return false;
  }

  UpdateTheme(window);

  return OnCreate();
}

bool Win32Window::Show() {
  return ShowWindow(window_handle_, SW_SHOWNORMAL);
}

// static
LRESULT CALLBACK Win32Window::WndProc(HWND const window,
                                      UINT const message,
                                      WPARAM const wparam,
                                      LPARAM const lparam) noexcept {
  if (message == WM_NCCREATE) {
    auto window_struct = reinterpret_cast<CREATESTRUCT*>(lparam);
    SetWindowLongPtr(window, GWLP_USERDATA,
                     reinterpret_cast<LONG_PTR>(window_struct->lpCreateParams));

    auto that = static_cast<Win32Window*>(window_struct->lpCreateParams);
    EnableFullDpiSupportIfAvailable(window);
    that->window_handle_ = window;
  } else if (Win32Window* that = GetThisFromHandle(window)) {
    return that->MessageHandler(window, message, wparam, lparam);
  }

  return DefWindowProc(window, message, wparam, lparam);
}

LRESULT
Win32Window::MessageHandler(HWND hwnd,
                            UINT const message,
                            WPARAM const wparam,
                            LPARAM const lparam) noexcept {
  switch (message) {
    case WM_DESTROY:
      window_handle_ = nullptr;
      Destroy();
      if (quit_on_close_) {
        PostQuitMessage(0);
      }
      return 0;

    case WM_DPICHANGED: {
      auto newRectSize = reinterpret_cast<RECT*>(lparam);
      LONG newWidth = newRectSize->right - newRectSize->left;
      LONG newHeight = newRectSize->bottom - newRectSize->top;

      SetWindowPos(hwnd, nullptr, newRectSize->left, newRectSize->top, newWidth,
                   newHeight, SWP_NOZORDER | SWP_NOACTIVATE);

      return 0;
    }
    case WM_SIZE: {
      RECT rect = GetClientArea();
      if (child_content_ != nullptr) {
        // Size and position the child window.
        MoveWindow(child_content_, rect.left, rect.top, rect.right - rect.left,
                   rect.bottom - rect.top, TRUE);
      }
      return 0;
    }

    case WM_ACTIVATE:
      if (child_content_ != nullptr) {
        SetFocus(child_content_);
      }
      return 0;

    case WM_DWMCOLORIZATIONCOLORCHANGED:
      UpdateTheme(hwnd);
      return 0;
  }

  return DefWindowProc(window_handle_, message, wparam, lparam);
}

void Win32Window::Destroy() {
  OnDestroy();

  if (window_handle_) {
    DestroyWindow(window_handle_);
    window_handle_ = nullptr;
  }
  if (g_active_window_count == 0) {
    WindowClassRegistrar::GetInstance()->UnregisterWindowClass();
  }
}

Win32Window* Win32Window::GetThisFromHandle(HWND const window) noexcept {
  return reinterpret_cast<Win32Window*>(
      GetWindowLongPtr(window, GWLP_USERDATA));
}

void Win32Window::SetChildContent(HWND content) {
  child_content_ = content;
  SetParent(content, window_handle_);
  RECT frame = GetClientArea();

  MoveWindow(content, frame.left, frame.top, frame.right - frame.left,
             frame.bottom - frame.top, true);

  SetFocus(child_content_);
}

RECT Win32Window::GetClientArea() {
  RECT frame;
  GetClientRect(window_handle_, &frame);
  return frame;
}

HWND Win32Window::GetHandle() {
  return window_handle_;
}

void Win32Window::SetQuitOnClose(bool quit_on_close) {
  quit_on_close_ = quit_on_close;
}

bool Win32Window::OnCreate() {
  // No-op; provided for subclasses.
  return true;
}

void Win32Window::OnDestroy() {
  // No-op; provided for subclasses.
}

void Win32Window::UpdateTheme(HWND const window) {
  DWORD light_mode;
  DWORD light_mode_size = sizeof(light_mode);
  LSTATUS result = RegGetValue(HKEY_CURRENT_USER, kGetPreferredBrightnessRegKey,
                               kGetPreferredBrightnessRegValue,
                               RRF_RT_REG_DWORD, nullptr, &light_mode,
                               &light_mode_size);

  if (result == ERROR_SUCCESS) {
    BOOL enable_dark_mode = light_mode == 0;
    DwmSetWindowAttribute(window, DWMWA_USE_IMMERSIVE_DARK_MODE,
                          &enable_dark_mode, sizeof(enable_dark_mode));
  }
}


# win32_window.h

#ifndef RUNNER_WIN32_WINDOW_H_
#define RUNNER_WIN32_WINDOW_H_

#include <windows.h>

#include <functional>
#include <memory>
#include <string>

// A class abstraction for a high DPI-aware Win32 Window. Intended to be
// inherited from by classes that wish to specialize with custom
// rendering and input handling
class Win32Window {
 public:
  struct Point {
    unsigned int x;
    unsigned int y;
    Point(unsigned int x, unsigned int y) : x(x), y(y) {}
  };

  struct Size {
    unsigned int width;
    unsigned int height;
    Size(unsigned int width, unsigned int height)
        : width(width), height(height) {}
  };

  Win32Window();
  virtual ~Win32Window();

  // Creates a win32 window with |title| that is positioned and sized using
  // |origin| and |size|. New windows are created on the default monitor. Window
  // sizes are specified to the OS in physical pixels, hence to ensure a
  // consistent size this function will scale the inputted width and height as
  // as appropriate for the default monitor. The window is invisible until
  // |Show| is called. Returns true if the window was created successfully.
  bool Create(const std::wstring& title, const Point& origin, const Size& size);

  // Show the current window. Returns true if the window was successfully shown.
  bool Show();

  // Release OS resources associated with window.
  void Destroy();

  // Inserts |content| into the window tree.
  void SetChildContent(HWND content);

  // Returns the backing Window handle to enable clients to set icon and other
  // window properties. Returns nullptr if the window has been destroyed.
  HWND GetHandle();

  // If true, closing this window will quit the application.
  void SetQuitOnClose(bool quit_on_close);

  // Return a RECT representing the bounds of the current client area.
  RECT GetClientArea();

 protected:
  // Processes and route salient window messages for mouse handling,
  // size change and DPI. Delegates handling of these to member overloads that
  // inheriting classes can handle.
  virtual LRESULT MessageHandler(HWND window,
                                 UINT const message,
                                 WPARAM const wparam,
                                 LPARAM const lparam) noexcept;

  // Called when CreateAndShow is called, allowing subclass window-related
  // setup. Subclasses should return false if setup fails.
  virtual bool OnCreate();

  // Called when Destroy is called.
  virtual void OnDestroy();

 private:
  friend class WindowClassRegistrar;

  // OS callback called by message pump. Handles the WM_NCCREATE message which
  // is passed when the non-client area is being created and enables automatic
  // non-client DPI scaling so that the non-client area automatically
  // responds to changes in DPI. All other messages are handled by
  // MessageHandler.
  static LRESULT CALLBACK WndProc(HWND const window,
                                  UINT const message,
                                  WPARAM const wparam,
                                  LPARAM const lparam) noexcept;

  // Retrieves a class instance pointer for |window|
  static Win32Window* GetThisFromHandle(HWND const window) noexcept;

  // Update the window frame's theme to match the system theme.
  static void UpdateTheme(HWND const window);

  bool quit_on_close_ = false;

  // window handle for top level window.
  HWND window_handle_ = nullptr;

  // window handle for hosted content.
  HWND child_content_ = nullptr;
};

#endif  // RUNNER_WIN32_WINDOW_H_


# main.cpp

#include <flutter/dart_project.h>
#include <flutter/flutter_view_controller.h>
#include <windows.h>

#include "flutter_window.h"
#include "utils.h"

int APIENTRY wWinMain(_In_ HINSTANCE instance, _In_opt_ HINSTANCE prev,
                      _In_ wchar_t *command_line, _In_ int show_command) {
  // Attach to console when present (e.g., 'flutter run') or create a
  // new console when running with a debugger.
  if (!::AttachConsole(ATTACH_PARENT_PROCESS) && ::IsDebuggerPresent()) {
    CreateAndAttachConsole();
  }

  // Initialize COM, so that it is available for use in the library and/or
  // plugins.
  ::CoInitializeEx(nullptr, COINIT_APARTMENTTHREADED);

  flutter::DartProject project(L"data");

  std::vector<std::string> command_line_arguments =
      GetCommandLineArguments();

  project.set_dart_entrypoint_arguments(std::move(command_line_arguments));

  FlutterWindow window(project);
  Win32Window::Point origin(10, 10);
  Win32Window::Size size(1280, 720);
  if (!window.Create(L"irctc_ui", origin, size)) {
    return EXIT_FAILURE;
  }
  window.SetQuitOnClose(true);

  ::MSG msg;
  while (::GetMessage(&msg, nullptr, 0, 0)) {
    ::TranslateMessage(&msg);
    ::DispatchMessage(&msg);
  }

  ::CoUninitialize();
  return EXIT_SUCCESS;
}


# utils.h

#ifndef RUNNER_UTILS_H_
#define RUNNER_UTILS_H_

#include <string>
#include <vector>

// Creates a console for the process, and redirects stdout and stderr to
// it for both the runner and the Flutter library.
void CreateAndAttachConsole();

// Takes a null-terminated wchar_t* encoded in UTF-16 and returns a std::string
// encoded in UTF-8. Returns an empty std::string on failure.
std::string Utf8FromUtf16(const wchar_t* utf16_string);

// Gets the command line arguments passed in as a std::vector<std::string>,
// encoded in UTF-8. Returns an empty std::vector<std::string> on failure.
std::vector<std::string> GetCommandLineArguments();

#endif  // RUNNER_UTILS_H_


# contents.xcworkspacedata

<?xml version="1.0" encoding="UTF-8"?>
<Workspace
   version = "1.0">
   <FileRef
      location = "self:">
   </FileRef>
</Workspace>


# WorkspaceSettings.xcsettings

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>PreviewsEnabled</key>
	<false/>
</dict>
</plist>


# IDEWorkspaceChecks.plist

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDEDidComputeMac32BitWarning</key>
	<true/>
</dict>
</plist>


# LaunchScreen.storyboard

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="12121" systemVersion="16G29" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" launchScreen="YES" colorMatched="YES" initialViewController="01J-lp-oVM">
    <dependencies>
        <deployment identifier="iOS"/>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="12089"/>
    </dependencies>
    <scenes>
        <!--View Controller-->
        <scene sceneID="EHf-IW-A2E">
            <objects>
                <viewController id="01J-lp-oVM" sceneMemberID="viewController">
                    <layoutGuides>
                        <viewControllerLayoutGuide type="top" id="Ydg-fD-yQy"/>
                        <viewControllerLayoutGuide type="bottom" id="xbc-2k-c8Z"/>
                    </layoutGuides>
                    <view key="view" contentMode="scaleToFill" id="Ze5-6b-2t3">
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <subviews>
                            <imageView opaque="NO" clipsSubviews="YES" multipleTouchEnabled="YES" contentMode="center" image="LaunchImage" translatesAutoresizingMaskIntoConstraints="NO" id="YRO-k0-Ey4">
                            </imageView>
                        </subviews>
                        <color key="backgroundColor" red="1" green="1" blue="1" alpha="1" colorSpace="custom" customColorSpace="sRGB"/>
                        <constraints>
                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerX" secondItem="Ze5-6b-2t3" secondAttribute="centerX" id="1a2-6s-vTC"/>
                            <constraint firstItem="YRO-k0-Ey4" firstAttribute="centerY" secondItem="Ze5-6b-2t3" secondAttribute="centerY" id="4X2-HB-R7a"/>
                        </constraints>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="iYj-Kq-Ea1" userLabel="First Responder" sceneMemberID="firstResponder"/>
            </objects>
            <point key="canvasLocation" x="53" y="375"/>
        </scene>
    </scenes>
    <resources>
        <image name="LaunchImage" width="168" height="185"/>
    </resources>
</document>


# Main.storyboard

<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<document type="com.apple.InterfaceBuilder3.CocoaTouch.Storyboard.XIB" version="3.0" toolsVersion="10117" systemVersion="15F34" targetRuntime="iOS.CocoaTouch" propertyAccessControl="none" useAutolayout="YES" useTraitCollections="YES" initialViewController="BYZ-38-t0r">
    <dependencies>
        <deployment identifier="iOS"/>
        <plugIn identifier="com.apple.InterfaceBuilder.IBCocoaTouchPlugin" version="10085"/>
    </dependencies>
    <scenes>
        <!--Flutter View Controller-->
        <scene sceneID="tne-QT-ifu">
            <objects>
                <viewController id="BYZ-38-t0r" customClass="FlutterViewController" sceneMemberID="viewController">
                    <layoutGuides>
                        <viewControllerLayoutGuide type="top" id="y3c-jy-aDJ"/>
                        <viewControllerLayoutGuide type="bottom" id="wfy-db-euE"/>
                    </layoutGuides>
                    <view key="view" contentMode="scaleToFill" id="8bC-Xf-vdC">
                        <rect key="frame" x="0.0" y="0.0" width="600" height="600"/>
                        <autoresizingMask key="autoresizingMask" widthSizable="YES" heightSizable="YES"/>
                        <color key="backgroundColor" white="1" alpha="1" colorSpace="custom" customColorSpace="calibratedWhite"/>
                    </view>
                </viewController>
                <placeholder placeholderIdentifier="IBFirstResponder" id="dkx-z0-nzr" sceneMemberID="firstResponder"/>
            </objects>
        </scene>
    </scenes>
</document>


# bottom_navigatoin_bar.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';
import 'package:google_nav_bar/google_nav_bar.dart';

class BottomNavigationBarWidget extends StatefulWidget {
  const BottomNavigationBarWidget({super.key});

  @override
  State<BottomNavigationBarWidget> createState() =>
      _BottomNavigationBarWidgetState();
}

class _BottomNavigationBarWidgetState extends State<BottomNavigationBarWidget> {
  @override
  Widget build(BuildContext context) {
    return Container(
        padding: EdgeInsets.only(
            right: setWidth(19),
            left: setWidth(19),
            top: setHeight(12),
            bottom: setHeight(25)),
        height: setHeight(110),
        color: Color(0xFF1D1F24),
        child: GNav(
            tabBorderRadius: 21,
            duration: Duration(milliseconds: 1000),
            gap: 7,
            color: Color(0xFF9A9A9A),
            activeColor: Colors.white,
            iconSize: setHeight(32),
            tabBackgroundColor: Color(0xFF2475EE),
            padding: EdgeInsets.symmetric(
                horizontal: setWidth(12), vertical: setHeight(9)),
            textStyle: TextStyle(
                fontWeight: FontWeight.bold,
                fontSize: setHeight(18),
                color: Colors.white),
            tabs: [
              GButton(
                icon: Icons.home_filled,
                text: 'Home',
              ),
              GButton(
                icon: Icons.public,
                text: 'Public',
              ),
              GButton(
                icon: Icons.account_circle_rounded,
                text: 'Profile',
              ),
              GButton(
                icon: Icons.more_horiz_rounded,
                text: 'More',
              )
            ]));
  }
}


# other_service_card.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, prefer_typing_uninitialized_variables

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';

class OtherServiceCardWidget extends StatefulWidget {
  const OtherServiceCardWidget(
      {super.key, required this.title, required this.description});

  final title;
  final description;

  @override
  State<OtherServiceCardWidget> createState() => _OtherServiceCardWidgetState();
}

class _OtherServiceCardWidgetState extends State<OtherServiceCardWidget> {
  @override
  Widget build(BuildContext context) {
    return Container(
      width: setWidth(188),
      height: setHeight(95),
      decoration: BoxDecoration(
          color: Color(0xFF1D1F24), borderRadius: BorderRadius.circular(25)),
      child: Padding(
        padding: EdgeInsets.symmetric(
            horizontal: setWidth(25), vertical: setHeight(19)),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              widget.title,
              style: TextStyle(
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                  fontSize: setHeight(25),
                  letterSpacing: 0),
            ),
            Text(
              widget.description,
              style: TextStyle(
                  fontWeight: FontWeight.w400,
                  color: Color.fromARGB(180, 255, 255, 255),
                  fontSize: setHeight(13),
                  letterSpacing: 0),
            ),
          ],
        ),
      ),
    );
  }
}


# select_seat_compartment_list.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, avoid_init_to_null

import 'dart:async';

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';

class TrainCompartmentListWidget extends StatefulWidget {
  const TrainCompartmentListWidget({super.key});

  @override
  State<TrainCompartmentListWidget> createState() =>
      _TrainCompartmentListWidgetState();
}

class _TrainCompartmentListWidgetState
    extends State<TrainCompartmentListWidget> {
  bool isSelectedCompartmentActive = true;
  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        Padding(
          padding: EdgeInsets.symmetric(
            horizontal: setWidth(37),
            //   vertical: setHeight(18)
          ),
          child: NotificationListener<ScrollNotification>(
            onNotification: detectScroll,
            child: SingleChildScrollView(
              scrollDirection: Axis.vertical,
              child: Column(
                children: [
                  SizedBox(height: setHeight(167)),
                  compartmentCard("01"),
                  compartmentCard("02"),
                  compartmentCard("03"),
                  compartmentCard("04"),
                  compartmentCard("05"),
                  compartmentCard("06"),
                  compartmentCard("07"),
                  compartmentCard("08"),
                  compartmentCard("09"),
                  compartmentCard("10"),
                  SizedBox(height: setHeight(151))
                ],
              ),
            ),
          ),
        ),

        // gradient color top
        Align(
          alignment: Alignment.topCenter,
          child: Container(
            height: setHeight(70),
            foregroundDecoration: BoxDecoration(
              gradient: LinearGradient(
                colors: [
                  Colors.black,
                  Colors.transparent,
                  Colors.transparent,
                  Colors.transparent,
                ],
                begin: Alignment.topCenter,
                end: Alignment.bottomCenter,
                stops: [0, 0.9, 0, 0],
              ),
            ),
          ),
        ),

        // gradient color bottom
        Align(
          alignment: Alignment.bottomCenter,
          child: Container(
            height: setHeight(70),
            foregroundDecoration: BoxDecoration(
              gradient: LinearGradient(
                colors: [
                  Colors.transparent,
                  Colors.transparent,
                  Colors.transparent,
                  Colors.black
                ],
                begin: Alignment.topCenter,
                end: Alignment.bottomCenter,
                stops: [0, 0, 0.1, 1],
              ),
            ),
          ),
        ),

        // selected compartment border
        isSelectedCompartmentActive
            ? Align(
                alignment: Alignment.center,
                child: InkWell(
                  onTap: () {
                    setState(() {
                      print("pressed");
                      isSelectedCompartmentActive = false;
                    });
                    //   Timer(
                    //       Duration(milliseconds: 1000),
                    //       () => setState(() {
                    //             isSelectedCompartmentActive = true;
                    //           }));
                  },
                  child: Container(
                    margin: EdgeInsets.symmetric(horizontal: setWidth(20)),
                    height: setHeight(280),
                    decoration: BoxDecoration(
                        borderRadius: BorderRadius.circular(18),
                        shape: BoxShape.rectangle,
                        border: Border.all(width: 3, color: Color(0xFF2475EE))),
                  ),
                ),
              )
            : SizedBox(),
      ],
    );
  }

  bool detectScroll(scrollNotification) {
    if (scrollNotification is ScrollStartNotification) {
      setState(() {
        print("scroll start");
        isSelectedCompartmentActive = false;
      });
    } else if (scrollNotification is ScrollUpdateNotification) {
      setState(() {
        print("scroll update");
        isSelectedCompartmentActive = false;
      });
    } else if (scrollNotification is ScrollEndNotification) {
      print("scroll end");
      setState(() {
        isSelectedCompartmentActive = true;
      });
    }

    return false;
  }
}

Widget compartmentCard(String compartmentNo) {
  return Column(
    children: [
      Container(
        height: setHeight(210),
        decoration: BoxDecoration(
            color: Color(0xFF1D1F24), borderRadius: BorderRadius.circular(9)),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          crossAxisAlignment: CrossAxisAlignment.stretch,
          children: [
            Center(
              child: Text(
                "Compartment",
                style: TextStyle(
                    color: Colors.white,
                    fontSize: setHeight(12),
                    fontWeight: FontWeight.w500,
                    letterSpacing: 0),
              ),
            ),
            SizedBox(height: setHeight(3)),
            Center(
              child: Text(
                compartmentNo,
                style: TextStyle(
                    color: Colors.white,
                    fontSize: setHeight(18),
                    fontWeight: FontWeight.bold,
                    letterSpacing: 0),
              ),
            ),
          ],
        ),
      ),
      SizedBox(height: setHeight(16)),
    ],
  );
}


# select_seat_row_info.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, avoid_init_to_null

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';

class SeatStatusInfoWidget extends StatefulWidget {
  const SeatStatusInfoWidget({super.key});

  @override
  State<SeatStatusInfoWidget> createState() => _SeatStatusInfoWidgetState();
}

class _SeatStatusInfoWidgetState extends State<SeatStatusInfoWidget> {
  @override
  Widget build(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        seatStatusCard("booked"),
        seatStatusCard("available"),
        seatStatusCard("reserved"),
        seatStatusCard("selected"),
      ],
    );
  }
}

Widget seatStatusCard(String seatStatus) {
  return Row(
    children: [
      Container(
        height: setHeight(28),
        width: setWidth(28),
        decoration: BoxDecoration(
            borderRadius: BorderRadius.circular(5),
            border: seatStatus == "selected"
                ? Border.all(color: Colors.white)
                : Border(),
            color: seatStatus == "booked"
                ? Color(0xFFD84F4F)
                : seatStatus == "reserved"
                    ? Color(0x5F1D1F24)
                    : seatStatus == "selected"
                        ? Color(0xFF2475EE)
                        : Color(0xFF1D1F24)),
        child: Center(
          child: Text(
            "00",
            style: TextStyle(
                color: Colors.white,
                fontWeight: FontWeight.w500,
                fontSize: setHeight(12),
                letterSpacing: 0),
          ),
        ),
      ),
      SizedBox(width: setWidth(7)),
      Text(
        seatStatus == "booked"
            ? "Booked"
            : seatStatus == "reserved"
                ? "Reserved"
                : seatStatus == "selected"
                    ? "Selected"
                    : "Available",
        style: TextStyle(
            fontSize: setHeight(12),
            fontWeight: FontWeight.w500,
            color: Colors.white,
            letterSpacing: 0),
      )
    ],
  );
}


# select_train_proceed_to_book.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print

import 'package:flutter/material.dart';
import 'package:irctc_ui/homescreen/select_seat.dart';
import 'package:irctc_ui/utils.dart';

class ProceedToBookButtonWidget extends StatefulWidget {
  const ProceedToBookButtonWidget({super.key});

  @override
  State<ProceedToBookButtonWidget> createState() =>
      _ProceedToBookButtonWidgetState();
}

class _ProceedToBookButtonWidgetState extends State<ProceedToBookButtonWidget> {
  @override
  Widget build(BuildContext context) {
    return Container(
      height: setHeight(100),
      color: Color(0xFF1D1F24),
      padding: EdgeInsets.only(
          right: setWidth(30), bottom: setHeight(14), left: setWidth(30)),
      child: Column(
        children: [
          SizedBox(height: setHeight(12)),
          Row(
            children: [
              Expanded(
                  flex: 6,
                  child: Column(
                    crossAxisAlignment: CrossAxisAlignment.start,
                    mainAxisAlignment: MainAxisAlignment.spaceAround,
                    children: [
                      Text(
                        "SUR Express (134556), 3AC",
                        style: TextStyle(
                            color: Color(0xFF8F8F8F),
                            fontWeight: FontWeight.bold,
                            fontSize: setHeight(13),
                            letterSpacing: 0),
                      ),
                      SizedBox(height: setHeight(10)),
                      Row(
                        crossAxisAlignment: CrossAxisAlignment.center,
                        children: [
                          Icon(
                            Icons.currency_rupee_rounded,
                            color: Color(0xFF8F8F8F),
                            size: setHeight(23),
                          ),
                          Text(
                            "1999.00",
                            textAlign: TextAlign.start,
                            style: TextStyle(
                                //   color: Color(0xFF2475EE),
                                color: Colors.white,
                                fontWeight: FontWeight.bold,
                                fontSize: setHeight(23)),
                          ),
                        ],
                      )
                    ],
                  )),
              Expanded(
                  flex: 5,
                  child: InkWell(
                    onTap: () {
                      Navigator.pushReplacement(
                          context,
                          MaterialPageRoute(
                              builder: (context) => SelectSeatScreen()));
                    },
                    child: Container(
                      height: setHeight(55),
                      decoration: BoxDecoration(
                          color: Color(0xFF2475EE),
                          borderRadius: BorderRadius.circular(14)),
                      child: Center(
                        child: Text(
                          "Proceed to Book",
                          style: TextStyle(
                              color: Colors.white,
                              fontWeight: FontWeight.bold,
                              fontSize: setHeight(18),
                              letterSpacing: 0),
                        ),
                      ),
                    ),
                  ))
            ],
          ),
        ],
      ),
    );
  }
}


# station_name_text.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';

class StationNameTextWidget extends StatefulWidget {
  const StationNameTextWidget(
      {super.key, required this.stationName, required this.stationCode, required this.isSourceStation});

  final stationName;
  final stationCode;
  final isSourceStation;

  @override
  State<StationNameTextWidget> createState() => _StationNameTextWidgetState();
}

class _StationNameTextWidgetState extends State<StationNameTextWidget> {
  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: EdgeInsets.symmetric(
          horizontal: setWidth(30), vertical: setHeight(5)),
      child: Column(
        crossAxisAlignment: widget.isSourceStation ? CrossAxisAlignment.start : CrossAxisAlignment.end,
        children: [
          Text(
            widget.stationCode,
            style: TextStyle(
              color: Colors.white,
              fontSize: setHeight(25),
              fontWeight: FontWeight.w500,
            ),
          ),
          Text(
            widget.stationName,
            style: TextStyle(
              color: Color(0xFF8F8F8F),
              fontSize: setHeight(14),
              fontWeight: FontWeight.w500,
            ),
          ),
        ],
      ),
    );
  }
}


# train_search_filter.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, prefer_typing_uninitialized_variables

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';

class SearchTrainFilterCardWidget extends StatefulWidget {
  const SearchTrainFilterCardWidget({super.key, required this.title});
  final title;

  @override
  State<SearchTrainFilterCardWidget> createState() =>
      _SearchTrainFilterCardWidgetState();
}

class _SearchTrainFilterCardWidgetState
    extends State<SearchTrainFilterCardWidget> {
  bool isFilterActive = false;
  @override
  Widget build(BuildContext context) {
    return InkWell(
      onTap: () {
        setState(() {
          isFilterActive = !isFilterActive;
        });
      },
      child: Container(
        height: setHeight(45),
        padding: EdgeInsets.symmetric(horizontal: setWidth(16)),
        decoration: BoxDecoration(
            color: Color(0xFF282B32),
            borderRadius: BorderRadius.circular(25),
            border: Border.all(
                width: 2,
                color: isFilterActive ? Color(0xFF2475EE) : Color(0xFF282B32))),
        child: Center(
          child: Text(
            widget.title,
            style: TextStyle(fontSize: setHeight(16), color: Colors.white),
          ),
        ),
      ),
    );
  }
}


# train_details_card.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, camel_case_types, prefer_typing_uninitialized_variables, avoid_init_to_null

import 'package:dotted_line/dotted_line.dart';
import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';

class TrainDetailsCardWidget extends StatefulWidget {
  const TrainDetailsCardWidget({super.key});

  @override
  State<TrainDetailsCardWidget> createState() => _TrainDetailsCardWidgetState();
}

class _TrainDetailsCardWidgetState extends State<TrainDetailsCardWidget> {
  static String? selectedClassType = null;

  @override
  void initState() {
    super.initState();
    _TrainDetailsCardWidgetState.selectedClassType = null;
  }

  @override
  Widget build(BuildContext context) {
    return Container(
      height: setHeight(230),
      margin: EdgeInsets.symmetric(
          horizontal: setWidth(10), vertical: setHeight(10)),
      decoration: BoxDecoration(
          color: Color(0xFF1D1F24), borderRadius: BorderRadius.circular(19)),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Padding(
            padding: EdgeInsets.symmetric(
                horizontal: setWidth(21), vertical: setHeight(16)),
            child: Row(
              crossAxisAlignment: CrossAxisAlignment.center,
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Text(
                  "SUR Express (134556)",
                  style: TextStyle(
                      color: Colors.white,
                      fontSize: setHeight(18),
                      letterSpacing: 0,
                      fontWeight: FontWeight.w500),
                ),
                Container(
                  height: setHeight(40),
                  padding: EdgeInsets.symmetric(horizontal: setWidth(10)),
                  decoration: BoxDecoration(
                      borderRadius: BorderRadius.circular(10),
                      color: Color(0xFF282B32)),
                  child: Row(
                    crossAxisAlignment: CrossAxisAlignment.center,
                    mainAxisAlignment: MainAxisAlignment.spaceBetween,
                    children: [
                      Icon(Icons.route_rounded, color: Colors.white),
                      SizedBox(width: setWidth(5)),
                      Text(
                        "View route",
                        style: TextStyle(
                            color: Color(0xFF8F8F8F),
                            fontSize: setHeight(14),
                            fontWeight: FontWeight.w500),
                      )
                    ],
                  ),
                )
              ],
            ),
          ),

          Divider(
            height: 0,
            thickness: 1.6,
            color: Color(0xFF282B32),
          ),

          // station and time details
          Padding(
            padding: EdgeInsets.symmetric(
                horizontal: setWidth(21), vertical: setHeight(10)),
            child: Column(
              mainAxisAlignment: MainAxisAlignment.spaceBetween,
              children: [
                Row(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  mainAxisAlignment: MainAxisAlignment.spaceBetween,
                  children: [
                    stationTimeAndDateInfoWidget(
                        true, "19:20", "Solapur Jn", "Tue, 04 Feb"),
                    SizedBox(width: setWidth(5)),
                    Expanded(
                      child: SizedBox(
                        height: setHeight(70),
                        child: Column(
                          mainAxisAlignment: MainAxisAlignment.center,
                          children: [
                            Flexible(
                              child: DottedLine(
                                direction: Axis.horizontal,
                                alignment: WrapAlignment.center,
                                lineThickness: 1.9,
                                dashLength: 7,
                                dashColor: Color(0xFF3D4149),
                                dashRadius: 0.0,
                                dashGapLength: 5,
                                dashGapColor: Colors.transparent,
                                dashGapRadius: 0.0,
                              ),
                            ),
                            SizedBox(height: setHeight(7)),
                            Text(
                              "10 hr 38 min",
                              style: TextStyle(
                                  color: Color(0xFF8F8F8F),
                                  fontSize: setHeight(14),
                                  fontWeight: FontWeight.w400,
                                  letterSpacing: 0),
                            ),
                          ],
                        ),
                      ),
                    ),
                    SizedBox(width: setWidth(5)),
                    stationTimeAndDateInfoWidget(
                        false, "05:52", "Kalyan Jn", "Wed, 05 Feb"),
                  ],
                ),
              ],
            ),
          ),

          // tickets availablity
          SingleChildScrollView(
            scrollDirection: Axis.horizontal,
            child: Row(
              children: [
                SizedBox(width: setWidth(21)),
                InkWell(
                  onTap: () {
                    setSelectedClassType("SL");
                  },
                  child: ticketAvailabilityWidget(
                      classType: "SL",
                      ticketAvailability: "available",
                      availableSeat: 34),
                ),
                InkWell(
                  onTap: () {
                    setSelectedClassType("2S");
                  },
                  child: ticketAvailabilityWidget(
                      classType: "2S",
                      ticketAvailability: "waiting",
                      availableSeat: 10),
                ),
                InkWell(
                  onTap: () {
                    setSelectedClassType("3A");
                  },
                  child: ticketAvailabilityWidget(
                      classType: "3A",
                      ticketAvailability: "regret",
                      availableSeat: 0),
                ),
                InkWell(
                  onTap: () {
                    setSelectedClassType("2A");
                  },
                  child: ticketAvailabilityWidget(
                      classType: "2A",
                      ticketAvailability: "available",
                      availableSeat: 34),
                ),
                InkWell(
                  onTap: () {
                    setSelectedClassType("1A");
                  },
                  child: ticketAvailabilityWidget(
                      classType: "1A",
                      ticketAvailability: "available",
                      availableSeat: 34),
                ),
                SizedBox(width: setWidth(11)),
              ],
            ),
          ),
        ],
      ),
    );
  }

  void setSelectedClassType(classType) {
    setState(() {
      if (_TrainDetailsCardWidgetState.selectedClassType == null ||
          _TrainDetailsCardWidgetState.selectedClassType != classType) {
        _TrainDetailsCardWidgetState.selectedClassType = classType;
      } else {
        _TrainDetailsCardWidgetState.selectedClassType = null;
      }
    });
  }
}

Widget stationTimeAndDateInfoWidget(
    bool isStartStation, String time, String station, String date) {
  return Column(
    crossAxisAlignment:
        isStartStation ? CrossAxisAlignment.start : CrossAxisAlignment.end,
    children: [
      Text(
        time,
        style: TextStyle(
            color: Colors.white,
            fontSize: setHeight(16),
            fontWeight: FontWeight.bold,
            letterSpacing: 0),
      ),
      Text(
        station,
        style: TextStyle(
            color: Color(0xFF8F8F8F),
            fontSize: setHeight(14),
            fontWeight: FontWeight.w400,
            letterSpacing: 0),
      ),
      Text(
        date,
        style: TextStyle(
            color: Color(0xFF8F8F8F),
            fontSize: setHeight(14),
            fontWeight: FontWeight.w400,
            letterSpacing: 0),
      ),
    ],
  );
}

class ticketAvailabilityWidget extends StatefulWidget {
  const ticketAvailabilityWidget(
      {super.key,
      required this.ticketAvailability,
      required this.classType,
      required this.availableSeat});

  final ticketAvailability;
  final classType;
  final availableSeat;

  @override
  State<ticketAvailabilityWidget> createState() =>
      _ticketAvailabilityWidgetState();
}

class _ticketAvailabilityWidgetState extends State<ticketAvailabilityWidget> {
  @override
  Widget build(BuildContext context) {
    return Row(
      children: [
        Container(
          height: setHeight(55),
          width: setWidth(104),
          padding: EdgeInsets.symmetric(
              horizontal: setWidth(10), vertical: setHeight(5)),
          decoration: BoxDecoration(
            color: Color(0xFF282B32),
            borderRadius: BorderRadius.circular(12),
            border: Border.all(
                width: 1.6,
                color: _TrainDetailsCardWidgetState.selectedClassType ==
                        widget.classType
                    ? Color(0xFF2475EE)
                    : Color(0xFF282B32)),
          ),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.spaceBetween,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                crossAxisAlignment: CrossAxisAlignment.center,
                children: [
                  Text(
                    widget.classType,
                    style: TextStyle(
                      color: Colors.white,
                      fontWeight: FontWeight.w500,
                    ),
                  ),
                  Container(
                    padding: EdgeInsets.symmetric(
                        horizontal: setWidth(7), vertical: setHeight(4)),
                    decoration: BoxDecoration(
                        color: widget.ticketAvailability == "available"
                            ? Color(0xFF24903C).withOpacity(0.7)
                            : widget.ticketAvailability == "waiting"
                                ? Color(0xFFE7A428).withOpacity(0.7)
                                : Color(0xFFD84F4F).withOpacity(0.7),
                        // : Color(0xFFD84F4F),
                        borderRadius: BorderRadius.circular(5)),
                    child: Text(
                      widget.ticketAvailability == "available"
                          ? "Available"
                          : widget.ticketAvailability == "waiting"
                              ? "Waiting"
                              : "Regret",
                      style: TextStyle(
                          color: Colors.white,
                          fontWeight: FontWeight.w500,
                          fontSize: setHeight(11)),
                    ),
                  )
                ],
              ),
              SizedBox(height: setHeight(4)),
              Text(
                "${widget.availableSeat} Seats",
                style: TextStyle(
                    color: Color(0xFF8F8F8F), fontSize: setHeight(12)),
              ),
            ],
          ),
        ),
        SizedBox(width: setWidth(10)),
      ],
    );
  }
}


# train_service_card.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, prefer_typing_uninitialized_variables

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';

class TrainServiceCardWidget extends StatefulWidget {
  const TrainServiceCardWidget({
    super.key,
    required this.imgPath,
    required this.title,
    required this.description,
    required this.imgColor,
    required this.cardColor,
  });

  final imgPath;
  final title;
  final description;
  final imgColor;
  final cardColor;

  @override
  State<TrainServiceCardWidget> createState() => _TrainServiceCardWidgetState();
}

class _TrainServiceCardWidgetState extends State<TrainServiceCardWidget> {
  @override
  Widget build(BuildContext context) {
    return Container(
      width: setWidth(188),
      height: setHeight(188),
      padding: EdgeInsets.symmetric(
          horizontal: setWidth(19), vertical: setHeight(19)),
      decoration: BoxDecoration(
          color: widget.cardColor, borderRadius: BorderRadius.circular(25)),
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.start,
        children: [
          Container(
            padding: EdgeInsets.all(setHeight(18)),
            width: setWidth(70),
            height: setHeight(70),
            decoration: BoxDecoration(
                color: widget.imgColor,
                borderRadius: BorderRadius.circular(12)),
            child: Image.asset(
              widget.imgPath,
              fit: BoxFit.cover,
            ),
          ),
          SizedBox(height: setHeight(7)),
          Text(
            widget.title,
            style: TextStyle(
                fontWeight: FontWeight.bold,
                color: Colors.white,
                fontSize: setHeight(25),
                letterSpacing: 0),
          ),
          Text(
            widget.description,
            style: TextStyle(
                fontWeight: FontWeight.w400,
                color: Color.fromARGB(180, 255, 255, 255),
                fontSize: setHeight(13),
                letterSpacing: 0),
          ),
        ],
      ),
    );
  }
}


# Release.xcconfig

#include "../../Flutter/Flutter-Release.xcconfig"
#include "Warnings.xcconfig"


# AppInfo.xcconfig

// Application-level settings for the Runner target.
//
// This may be replaced with something auto-generated from metadata (e.g., pubspec.yaml) in the
// future. If not, the values below would default to using the project name when this becomes a
// 'flutter create' template.

// The application's name. By default this is also the title of the Flutter window.
PRODUCT_NAME = irctc_ui

// The application's bundle identifier
PRODUCT_BUNDLE_IDENTIFIER = com.example.irctcUi

// The copyright displayed in application information
PRODUCT_COPYRIGHT = Copyright © 2024 com.example. All rights reserved.


# IDEWorkspaceChecks.plist

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDEDidComputeMac32BitWarning</key>
	<true/>
</dict>
</plist>


# Debug.xcconfig

#include "../../Flutter/Flutter-Debug.xcconfig"
#include "Warnings.xcconfig"


# Warnings.xcconfig

WARNING_CFLAGS = -Wall -Wconditional-uninitialized -Wnullable-to-nonnull-conversion -Wmissing-method-return-type -Woverlength-strings
GCC_WARN_UNDECLARED_SELECTOR = YES
CLANG_UNDEFINED_BEHAVIOR_SANITIZER_NULLABILITY = YES
CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE
CLANG_WARN__DUPLICATE_METHOD_MATCH = YES
CLANG_WARN_PRAGMA_PACK = YES
CLANG_WARN_STRICT_PROTOTYPES = YES
CLANG_WARN_COMMA = YES
GCC_WARN_STRICT_SELECTOR_MATCH = YES
CLANG_WARN_OBJC_REPEATED_USE_OF_WEAK = YES
CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES
GCC_WARN_SHADOW = YES
CLANG_WARN_UNREACHABLE_CODE = YES


# select_train_filters.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, camel_case_types, prefer_typing_uninitialized_variables

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';

class SelectTrainFiltersWidget extends StatefulWidget {
  const SelectTrainFiltersWidget({super.key});

  @override
  State<SelectTrainFiltersWidget> createState() =>
      _SelectTrainFiltersWidgetState();
}

class _SelectTrainFiltersWidgetState extends State<SelectTrainFiltersWidget> {
  @override
  Widget build(BuildContext context) {
    return Row(
      mainAxisAlignment: MainAxisAlignment.spaceBetween,
      children: [
        Row(
          children: [
            filterButton(hasTitle: true, hasIcon: false, title: "Available"),
            SizedBox(width: setWidth(7)),
            filterButton(
                hasTitle: true,
                hasIcon: true,
                title: "Quota",
                icon: Icons.keyboard_arrow_down_rounded),
          ],
        ),
        Row(
          children: [
            filterButton(
                hasTitle: true,
                hasIcon: true,
                title: "Sort",
                icon: Icons.keyboard_arrow_down_rounded),
            SizedBox(width: setWidth(7)),
            filterButton(
                hasTitle: false, hasIcon: true, icon: Icons.filter_alt_outlined)
          ],
        ),
      ],
    );
  }

//   Widget filterButton(bool hasTitle, bool hasIcon,
//       {String? title, IconData? icon}) {
//     bool isFilterActive = false;
//     return
//     InkWell(
//       onTap: () {
//         setState(() {
//           isFilterActive = !isFilterActive;
//         });
//       },
//       child: Container(
//         height: setHeight(37),
//         padding: EdgeInsets.symmetric(horizontal: setWidth(14)),
//         decoration: BoxDecoration(
//             color: Color(0xFF1D1F24),
//             borderRadius: BorderRadius.circular(25),
//             border: Border.all(
//                 width: 1.6,
//                 color: isFilterActive ? Color(0xFF2475EE) : Color(0xFF282B32))),
//         child: Row(
//           children: [
//             hasTitle
//                 ? Text(
//                     title!,
//                     style:
//                         TextStyle(color: Colors.white, fontSize: setHeight(13)),
//                   )
//                 : SizedBox(width: 0),
//             hasTitle & hasIcon
//                 ? SizedBox(width: setWidth(5))
//                 : SizedBox(width: 0),
//             hasIcon
//                 ? Icon(icon, size: setHeight(30), color: Color(0xFF6D6E7C))
//                 : SizedBox(width: 0)
//           ],
//         ),
//       ),
//     );
//   }
}

class filterButton extends StatefulWidget {
  const filterButton(
      {super.key,
      required this.hasTitle,
      required this.hasIcon,
      this.title,
      this.icon});

  final hasTitle;
  final hasIcon;
  final title;
  final icon;

  @override
  State<filterButton> createState() => _filterButtonState();
}

class _filterButtonState extends State<filterButton> {
  bool isFilterActive = false;
  @override
  Widget build(BuildContext context) {
    return InkWell(
      onTap: () {
        setState(() {
          isFilterActive = !isFilterActive;
        });
      },
      child: Container(
        height: setHeight(37),
        padding: EdgeInsets.symmetric(horizontal: setWidth(14)),
        decoration: BoxDecoration(
            // color: Color(0xFF1D1F24),
            color: isFilterActive
                ? Color(0xFF2475EE).withOpacity(0.2)
                : Color(0xFF1D1F24),
            borderRadius: BorderRadius.circular(25),
            border: Border.all(
                width: 1.6,
                color: isFilterActive ? Color(0xFF2475EE) : Color(0xFF282B32))),
        child: Row(
          children: [
            widget.hasTitle
                ? Text(
                    widget.title!,
                    style:
                        TextStyle(color: Colors.white, fontSize: setHeight(13)),
                  )
                : SizedBox(width: 0),
            widget.hasTitle & widget.hasIcon
                ? SizedBox(width: setWidth(5))
                : SizedBox(width: 0),
            widget.hasIcon
                ? Icon(widget.icon!,
                    size: setHeight(30), color: Color(0xFF6D6E7C))
                : SizedBox(width: 0)
          ],
        ),
      ),
    );
  }
}


# train_compartment_details.dart

// ignore_for_file: prefer_const_constructors, prefer_const_literals_to_create_immutables, avoid_print, avoid_init_to_null, camel_case_types, prefer_typing_uninitialized_variables

import 'dart:math';

import 'package:flutter/material.dart';
import 'package:irctc_ui/utils.dart';

int seatNumber = 0;

class TrainCompartmentDetailsWidget extends StatefulWidget {
  const TrainCompartmentDetailsWidget({super.key});

  @override
  State<TrainCompartmentDetailsWidget> createState() =>
      _TrainCompartmentDetailsWidgetState();
}

class _TrainCompartmentDetailsWidgetState
    extends State<TrainCompartmentDetailsWidget> {
  @override
  void initState() {
    super.initState();
    seatNumber = 0;
  }

  @override
  Widget build(BuildContext context) {
    return Column(
      crossAxisAlignment: CrossAxisAlignment.stretch,
      children: [
        Center(
          child: Text(
            "Compartment 01",
            style: TextStyle(
                color: Colors.white,
                fontSize: setHeight(14),
                fontWeight: FontWeight.bold,
                letterSpacing: 0),
          ),
        ),
        SizedBox(height: setHeight(12)),
        Column(
          children: [
            seatBlock("reserved"),
            Divider(
                color: Color(0xFF282828),
                thickness: 2.1,
                height: setHeight(23)),
            seatBlock("booked"),
            Divider(
                color: Color(0xFF282828),
                thickness: 2.1,
                height: setHeight(23)),
            seatBlock("booked"),
            Divider(
                color: Color(0xFF282828),
                thickness: 2.1,
                height: setHeight(23)),
            seatBlock("available"),
            Divider(
                color: Color(0xFF282828),
                thickness: 2.1,
                height: setHeight(23)),
            seatBlock("available"),
          ],
        )
      ],
    );
  }
}

Widget seatsRowWidget(String sStatus) {
  return Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [
    Expanded(
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceBetween,
        children: [
          seatCard(seatStatus: sStatus, seatNo: getSeatNumber()),
          seatCard(seatStatus: sStatus, seatNo: getSeatNumber()),
          seatCard(seatStatus: sStatus, seatNo: getSeatNumber()),
        ],
      ),
    ),
    SizedBox(width: setWidth(41)),
    seatCard(seatStatus: sStatus, seatNo: getSeatNumber()),
  ]);
}

Widget seatBlock(String seatStatus) {
  return Column(
    children: [
      seatsRowWidget(seatStatus),
      SizedBox(height: setHeight(7)),
      seatsRowWidget(seatStatus),
    ],
  );
}

// seat card class

class seatCard extends StatefulWidget {
  const seatCard({super.key, required this.seatStatus, required this.seatNo});

  final seatStatus;
  final seatNo;

  @override
  State<seatCard> createState() => _seatCardState();
}

class _seatCardState extends State<seatCard> {
  bool isSeatSelected = false;
  @override
  Widget build(BuildContext context) {
    return InkWell(
      onTap: () {
        if (widget.seatStatus != "reserved" && widget.seatStatus != "booked") {
          setState(() {
            isSeatSelected = !isSeatSelected;
          });
        }
      },
      child: Container(
        height: setHeight(34),
        width: setWidth(34),
        decoration: BoxDecoration(
            color: widget.seatStatus == "reserved"
                ? Color(0x5F282B32)
                : widget.seatStatus == "booked" && Random().nextInt(100) <= 21
                    ? Color(0xFFD84F4F)
                    : isSeatSelected
                        ? Color(0xFF2475EE)
                        : Color(0xFF282B32),
            borderRadius: BorderRadius.circular(5),
            border: isSeatSelected
                ? Border.all(color: Colors.white, width: 1.6)
                : Border()),
        child: Center(
          child: Text(
            widget.seatNo < 10 ? "0${widget.seatNo}" : "${widget.seatNo}",
            style: TextStyle(
                color: widget.seatStatus == "reserved"
                    ? Color.fromARGB(65, 255, 255, 255)
                    : Colors.white,
                fontWeight: FontWeight.w500,
                letterSpacing: 0,
                fontSize: setHeight(14)),
          ),
        ),
      ),
    );
  }
}

int getSeatNumber() {
  if (seatNumber >= 40) {
    seatNumber = 0;
  }
  seatNumber = seatNumber + 1;
  return seatNumber;
}


# MainMenu.xib

<?xml version="1.0" encoding="UTF-8"?>
<document type="com.apple.InterfaceBuilder3.Cocoa.XIB" version="3.0" toolsVersion="14490.70" targetRuntime="MacOSX.Cocoa" propertyAccessControl="none" useAutolayout="YES" customObjectInstantitationMethod="direct">
    <dependencies>
        <deployment identifier="macosx"/>
        <plugIn identifier="com.apple.InterfaceBuilder.CocoaPlugin" version="14490.70"/>
        <capability name="documents saved in the Xcode 8 format" minToolsVersion="8.0"/>
    </dependencies>
    <objects>
        <customObject id="-2" userLabel="File's Owner" customClass="NSApplication">
            <connections>
                <outlet property="delegate" destination="Voe-Tx-rLC" id="GzC-gU-4Uq"/>
            </connections>
        </customObject>
        <customObject id="-1" userLabel="First Responder" customClass="FirstResponder"/>
        <customObject id="-3" userLabel="Application" customClass="NSObject"/>
        <customObject id="Voe-Tx-rLC" customClass="AppDelegate" customModule="Runner" customModuleProvider="target">
            <connections>
                <outlet property="applicationMenu" destination="uQy-DD-JDr" id="XBo-yE-nKs"/>
                <outlet property="mainFlutterWindow" destination="QvC-M9-y7g" id="gIp-Ho-8D9"/>
            </connections>
        </customObject>
        <customObject id="YLy-65-1bz" customClass="NSFontManager"/>
        <menu title="Main Menu" systemMenu="main" id="AYu-sK-qS6">
            <items>
                <menuItem title="APP_NAME" id="1Xt-HY-uBw">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="APP_NAME" systemMenu="apple" id="uQy-DD-JDr">
                        <items>
                            <menuItem title="About APP_NAME" id="5kV-Vb-QxS">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <connections>
                                    <action selector="orderFrontStandardAboutPanel:" target="-1" id="Exp-CZ-Vem"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="VOq-y0-SEH"/>
                            <menuItem title="Preferences…" keyEquivalent="," id="BOF-NM-1cW"/>
                            <menuItem isSeparatorItem="YES" id="wFC-TO-SCJ"/>
                            <menuItem title="Services" id="NMo-om-nkz">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Services" systemMenu="services" id="hz9-B4-Xy5"/>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="4je-JR-u6R"/>
                            <menuItem title="Hide APP_NAME" keyEquivalent="h" id="Olw-nP-bQN">
                                <connections>
                                    <action selector="hide:" target="-1" id="PnN-Uc-m68"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Hide Others" keyEquivalent="h" id="Vdr-fp-XzO">
                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
                                <connections>
                                    <action selector="hideOtherApplications:" target="-1" id="VT4-aY-XCT"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Show All" id="Kd2-mp-pUS">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <connections>
                                    <action selector="unhideAllApplications:" target="-1" id="Dhg-Le-xox"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="kCx-OE-vgT"/>
                            <menuItem title="Quit APP_NAME" keyEquivalent="q" id="4sb-4s-VLi">
                                <connections>
                                    <action selector="terminate:" target="-1" id="Te7-pn-YzF"/>
                                </connections>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
                <menuItem title="Edit" id="5QF-Oa-p0T">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="Edit" id="W48-6f-4Dl">
                        <items>
                            <menuItem title="Undo" keyEquivalent="z" id="dRJ-4n-Yzg">
                                <connections>
                                    <action selector="undo:" target="-1" id="M6e-cu-g7V"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Redo" keyEquivalent="Z" id="6dh-zS-Vam">
                                <connections>
                                    <action selector="redo:" target="-1" id="oIA-Rs-6OD"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="WRV-NI-Exz"/>
                            <menuItem title="Cut" keyEquivalent="x" id="uRl-iY-unG">
                                <connections>
                                    <action selector="cut:" target="-1" id="YJe-68-I9s"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Copy" keyEquivalent="c" id="x3v-GG-iWU">
                                <connections>
                                    <action selector="copy:" target="-1" id="G1f-GL-Joy"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Paste" keyEquivalent="v" id="gVA-U4-sdL">
                                <connections>
                                    <action selector="paste:" target="-1" id="UvS-8e-Qdg"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Paste and Match Style" keyEquivalent="V" id="WeT-3V-zwk">
                                <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
                                <connections>
                                    <action selector="pasteAsPlainText:" target="-1" id="cEh-KX-wJQ"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Delete" id="pa3-QI-u2k">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <connections>
                                    <action selector="delete:" target="-1" id="0Mk-Ml-PaM"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Select All" keyEquivalent="a" id="Ruw-6m-B2m">
                                <connections>
                                    <action selector="selectAll:" target="-1" id="VNm-Mi-diN"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="uyl-h8-XO2"/>
                            <menuItem title="Find" id="4EN-yA-p0u">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Find" id="1b7-l0-nxx">
                                    <items>
                                        <menuItem title="Find…" tag="1" keyEquivalent="f" id="Xz5-n4-O0W">
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="cD7-Qs-BN4"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Find and Replace…" tag="12" keyEquivalent="f" id="YEy-JH-Tfz">
                                            <modifierMask key="keyEquivalentModifierMask" option="YES" command="YES"/>
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="WD3-Gg-5AJ"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Find Next" tag="2" keyEquivalent="g" id="q09-fT-Sye">
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="NDo-RZ-v9R"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Find Previous" tag="3" keyEquivalent="G" id="OwM-mh-QMV">
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="HOh-sY-3ay"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Use Selection for Find" tag="7" keyEquivalent="e" id="buJ-ug-pKt">
                                            <connections>
                                                <action selector="performFindPanelAction:" target="-1" id="U76-nv-p5D"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Jump to Selection" keyEquivalent="j" id="S0p-oC-mLd">
                                            <connections>
                                                <action selector="centerSelectionInVisibleArea:" target="-1" id="IOG-6D-g5B"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem title="Spelling and Grammar" id="Dv1-io-Yv7">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Spelling" id="3IN-sU-3Bg">
                                    <items>
                                        <menuItem title="Show Spelling and Grammar" keyEquivalent=":" id="HFo-cy-zxI">
                                            <connections>
                                                <action selector="showGuessPanel:" target="-1" id="vFj-Ks-hy3"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Check Document Now" keyEquivalent=";" id="hz2-CU-CR7">
                                            <connections>
                                                <action selector="checkSpelling:" target="-1" id="fz7-VC-reM"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="bNw-od-mp5"/>
                                        <menuItem title="Check Spelling While Typing" id="rbD-Rh-wIN">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleContinuousSpellChecking:" target="-1" id="7w6-Qz-0kB"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Check Grammar With Spelling" id="mK6-2p-4JG">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleGrammarChecking:" target="-1" id="muD-Qn-j4w"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Correct Spelling Automatically" id="78Y-hA-62v">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticSpellingCorrection:" target="-1" id="2lM-Qi-WAP"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem title="Substitutions" id="9ic-FL-obx">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Substitutions" id="FeM-D8-WVr">
                                    <items>
                                        <menuItem title="Show Substitutions" id="z6F-FW-3nz">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="orderFrontSubstitutionsPanel:" target="-1" id="oku-mr-iSq"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem isSeparatorItem="YES" id="gPx-C9-uUO"/>
                                        <menuItem title="Smart Copy/Paste" id="9yt-4B-nSM">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleSmartInsertDelete:" target="-1" id="3IJ-Se-DZD"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Smart Quotes" id="hQb-2v-fYv">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticQuoteSubstitution:" target="-1" id="ptq-xd-QOA"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Smart Dashes" id="rgM-f4-ycn">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticDashSubstitution:" target="-1" id="oCt-pO-9gS"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Smart Links" id="cwL-P1-jid">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticLinkDetection:" target="-1" id="Gip-E3-Fov"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Data Detectors" id="tRr-pd-1PS">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticDataDetection:" target="-1" id="R1I-Nq-Kbl"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Text Replacement" id="HFQ-gK-NFA">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="toggleAutomaticTextReplacement:" target="-1" id="DvP-Fe-Py6"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem title="Transformations" id="2oI-Rn-ZJC">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Transformations" id="c8a-y6-VQd">
                                    <items>
                                        <menuItem title="Make Upper Case" id="vmV-6d-7jI">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="uppercaseWord:" target="-1" id="sPh-Tk-edu"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Make Lower Case" id="d9M-CD-aMd">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="lowercaseWord:" target="-1" id="iUZ-b5-hil"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Capitalize" id="UEZ-Bs-lqG">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="capitalizeWord:" target="-1" id="26H-TL-nsh"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                            <menuItem title="Speech" id="xrE-MZ-jX0">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <menu key="submenu" title="Speech" id="3rS-ZA-NoH">
                                    <items>
                                        <menuItem title="Start Speaking" id="Ynk-f8-cLZ">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="startSpeaking:" target="-1" id="654-Ng-kyl"/>
                                            </connections>
                                        </menuItem>
                                        <menuItem title="Stop Speaking" id="Oyz-dy-DGm">
                                            <modifierMask key="keyEquivalentModifierMask"/>
                                            <connections>
                                                <action selector="stopSpeaking:" target="-1" id="dX8-6p-jy9"/>
                                            </connections>
                                        </menuItem>
                                    </items>
                                </menu>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
                <menuItem title="View" id="H8h-7b-M4v">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="View" id="HyV-fh-RgO">
                        <items>
                            <menuItem title="Enter Full Screen" keyEquivalent="f" id="4J7-dP-txa">
                                <modifierMask key="keyEquivalentModifierMask" control="YES" command="YES"/>
                                <connections>
                                    <action selector="toggleFullScreen:" target="-1" id="dU3-MA-1Rq"/>
                                </connections>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
                <menuItem title="Window" id="aUF-d1-5bR">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="Window" systemMenu="window" id="Td7-aD-5lo">
                        <items>
                            <menuItem title="Minimize" keyEquivalent="m" id="OY7-WF-poV">
                                <connections>
                                    <action selector="performMiniaturize:" target="-1" id="VwT-WD-YPe"/>
                                </connections>
                            </menuItem>
                            <menuItem title="Zoom" id="R4o-n2-Eq4">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <connections>
                                    <action selector="performZoom:" target="-1" id="DIl-cC-cCs"/>
                                </connections>
                            </menuItem>
                            <menuItem isSeparatorItem="YES" id="eu3-7i-yIM"/>
                            <menuItem title="Bring All to Front" id="LE2-aR-0XJ">
                                <modifierMask key="keyEquivalentModifierMask"/>
                                <connections>
                                    <action selector="arrangeInFront:" target="-1" id="DRN-fu-gQh"/>
                                </connections>
                            </menuItem>
                        </items>
                    </menu>
                </menuItem>
                <menuItem title="Help" id="EPT-qC-fAb">
                    <modifierMask key="keyEquivalentModifierMask"/>
                    <menu key="submenu" title="Help" systemMenu="help" id="rJ0-wn-3NY"/>
                </menuItem>
            </items>
            <point key="canvasLocation" x="142" y="-258"/>
        </menu>
        <window title="APP_NAME" allowsToolTipsWhenApplicationIsInactive="NO" autorecalculatesKeyViewLoop="NO" releasedWhenClosed="NO" animationBehavior="default" id="QvC-M9-y7g" customClass="MainFlutterWindow" customModule="Runner" customModuleProvider="target">
            <windowStyleMask key="styleMask" titled="YES" closable="YES" miniaturizable="YES" resizable="YES"/>
            <rect key="contentRect" x="335" y="390" width="800" height="600"/>
            <rect key="screenRect" x="0.0" y="0.0" width="2560" height="1577"/>
            <view key="contentView" wantsLayer="YES" id="EiT-Mj-1SZ">
                <rect key="frame" x="0.0" y="0.0" width="800" height="600"/>
                <autoresizingMask key="autoresizingMask"/>
            </view>
        </window>
    </objects>
</document>


# AndroidManifest.xml

<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <!-- The INTERNET permission is required for development. Specifically,
         the Flutter tool needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <uses-permission android:name="android.permission.INTERNET"/>
</manifest>


# AndroidManifest.xml

<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <!-- The INTERNET permission is required for development. Specifically,
         the Flutter tool needs it to communicate with the running application
         to allow setting breakpoints, to provide hot reload, etc.
    -->
    <uses-permission android:name="android.permission.INTERNET"/>
</manifest>


# AndroidManifest.xml

<manifest xmlns:android="http://schemas.android.com/apk/res/android">
    <application
        android:label="irctc_ui"
        android:name="${applicationName}"
        android:icon="@mipmap/ic_launcher">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:launchMode="singleTop"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize">
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
</manifest>


# Runner.xcscheme

<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1430"
   version = "1.3">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "97C146ED1CF9000F007C117D"
               BuildableName = "Runner.app"
               BlueprintName = "Runner"
               ReferencedContainer = "container:Runner.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
            BuildableName = "Runner.app"
            BlueprintName = "Runner"
            ReferencedContainer = "container:Runner.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
      <Testables>
         <TestableReference
            skipped = "NO"
            parallelizable = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "331C8080294A63A400263BE5"
               BuildableName = "RunnerTests.xctest"
               BlueprintName = "RunnerTests"
               ReferencedContainer = "container:Runner.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
            BuildableName = "Runner.app"
            BlueprintName = "Runner"
            ReferencedContainer = "container:Runner.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Profile"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "97C146ED1CF9000F007C117D"
            BuildableName = "Runner.app"
            BlueprintName = "Runner"
            ReferencedContainer = "container:Runner.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>


# IDEWorkspaceChecks.plist

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDEDidComputeMac32BitWarning</key>
	<true/>
</dict>
</plist>


# app_icon.ico

   
        ^!  �   00   h  "       �  l(     (  T+  00    �  |,        �  $;      h  �C  00     �%  4I         �  �n       h  �  �PNG

   IHDR         \r�f    IDATx��}x՝ǿgnrsC���R,U���muW�5����b��hI�Zm���֗�uu�}j��v�]wm�/�hyy'(. �Do�KQQI.��톼Μ���	7��ͼ��93����!s���{Μs�A�AI	�vd�L�� ��r)w�Iv˷�����~��i�]v�7K����S�Bݦt\�XƁY~7'��ý�'�� �ܮ��g���U��
�R �pݧl# [����z��7���|��Z-C@���GݒT�� @`��S�A��zz��Vk���I-D��2e�� ���1��� ���Q7��A�ˊ����  ᔚ�=�J`䗐|� b��H���j����P v��D�^#�������C���}6�|˴�VW�^�S��U )�( ��y&�V��R�O�i�( +|�Ө��by�� (|�T� �YJKQ��x�ٸ�   �� -&�ɿ4�g�����R�P &��Ӑ��N
ꇛ�N?}�9~�e�4 Q��)0��~|k����nKA( �!!������D���n�����H��P  ��
 b $�#%?@@�����HP��pv`�(  ��gP��Q��>) ��뗤<���X�vF���Q��=[;���) jǁ�+�>�I�|� ʜs����@� ȷ��
tU*+�|2��!&�� Ѥ���{��u����� �55H>��o���Б`�b�T����� ��'Ӱ����U�h0q"�K�.(�'3��_H��P ��q�|v��=?��� �J�( ��ȑH6��������݀��� /��/u{�O0$���e�В���~^�J
�z���B-?@J�����`����6/�]��9��ס#�BFrwO�H�% @]}˥�cM/��O� $�#R ԅ:�CtH~G4�GO~�v�;��2���D8jN��� � �c9�9������ @p1ɗ��L�� N�$oP�G���~Y�
�`2f�/�3�/E�z~�R�P?y�!���G��UBh'`�8�,$��k� p��8��3 )p�=���OՎ��F�� 瞋�7C)?�I��8G-gzz�����g�
UU��',����@��Ar�$�}����Lo%��C ;55H>�jA�e����v��E��@2SU��^���>$�0�$��L���ⷊ�/�@�	@�� 22a�O�H�)��7	�l����O���) H~�� ���r$�5u�/k ������ �ƌ�����5 ���jzO��#ŔhPN>�C��6h��ڸ���$ww��`���_f�m��Q��ܟ�n�V���"	�3V䷋���4��vA���w
� |Ī�a��B���'���y����F�����/{��������b����ܽ�M��Q����H~AP xŨQH��aK~�{�h��w�i�0�/
�������m=�gW~/#Ã�?M�P��}�u}�4�CB�6'"��mۏ�R ��^7�[ 7�<��/t��o%�]��-�NEra#�a��( ܠ���I>A��]���:L4��H>�/�{�K���C( DRY���^'�#6�B�{���쳑\����?(C�;��\F�� �ƏGr�>���^�-���$�OP 8��S���J򛹮�I~� pB<������g����?��3�耜������	jǱC$��P �D�S}A�ۥ@;��Q����i]~�x�D�AG��@��@P����m?�n��g�
)���Ed�?(�1��t��d�-��,��ޟ�
 �DY~�䵕�
 �"�_8��I~�� (F<.��A��\[���n���$��P ũ���GV~��}[�����Z`���N�B��DW~Πvim]~���5��@=�[~�v 4q��x���,�"B4t�Oe%�o�m��f�?XP TW#9��{�*? �T� ( ��~�����'�f jI-��U���9��S�	��?`�?�`� �'8�[l�O�^� p��@�����@�h��w��e�o@�G����QHn9��뺆.�H��� �ŌWt{����e��m"�����~a��"� T��(�"" v����gp�r`��o��~U��ڱ�5��H�X���=A���׶�w�s�A�/�> �����Ͽ8��^k?	��A�����]�� �B;N~����&��ޟ��06��^>�#�� �O&\� ��H���O~���+�.�+�� �� �G#��h:_��gy-=�?��3�OM�[R������9�	�|��8t��I>v�Q|���1�v�E��� &M�U~Y{}��'�'�PU���|�_f���0Gp���yox.���$?a�`��� �����/��$?a��@U��=P�H~�:�
�s�Erћ��$����Gpଳ�\����M|��'�� 3��>vM� Jo@�N�? F�@�#����$?���1$_�&�7 �	H� '��3����ڽY8�&��}$?1$�@rw�!��3���Ez+'�05���-˯�r�EDБ� ��']�$�haU�y�����H �/w���?�X=���'� U ���!�	��& H���E���'����y?��a�Ǿ�����K*\��������~g;ɟ��+�e��%N��[P0�1�d�Z�Lt�/�W��z�^ׯ7���u%	��fq��7 F�D��6�?�]�S�+���/Ĭ���V��ʀt����{u�����*?��2�q��Kq�-����̐]������*{����5w[��+� ����^#�ʽz�>󍅏j]���҆��9��Q�T�!�/g�ɂ���fp�LG˼�l�9�қ��M�bY�gB�%��C����>�/n:����h�} L���{"/���))�w����G1E�����y����WӴ���}hۭ�;)���ԩ���H��pFZJ�ϼ�.|��GJ��wr�s�1��!���kG8)�2�@M���&��#����.������N�}-�^���<�IZw��roj��F��DV~��r���{���N(
V �k�g������Z/��ɔ�"?��*@eed�9�?)�?�o���~T�9�j=��í���x0���g���w�I)�h�f|���%��8����?�|�֭_~�`W���OuP�s��	"o9m�����E�;���z����O~�[g��3n������d{~M.�GT^��[�PbX	Y��7j���?���N�=�J\	�<�K�H9쏝:7�� ������~!e���7������5��t��j��ˀusw>\~�LJ�`�K�$��ky��ټvu[�/f;�Y<�=�؈�\����i�z�WI~O
��ycoW��]�=$���O[���	�H���ț������Z��³J�F�������9�-���ju��{�I�����fp����<? ���Z�嵣�T�:��@7u�?�"|<1�����6*E~��#�F�Dݖ���� ��0u��e$�G�x��s���ޙ�jGJ/?�w  @,�������$����f&��7��L��sm��dx1��a���n��: ��e���)'��p׵R�_:�L��������F~@� �a6��\&���y?�����gZ�;��٬~�z�E��?�ɟ�^G]~�u�����j���у���-� �^�3=�����530�����_9���xu.��҄�g���F��a�ZC�������;��� ��C���T�q�6��s�������S~y%��v�����:��?�  x!P�#��U7݉���H~���z󣶭��X� @�0�!�R��[��w<��t�๧�D5���Ѷ�~����E�  c���g����,|�����o� ��!�������O���������G�U��p������ �83.���ɻH~ׇM~@�  �'���	�� ��R�?��;p�w	��nF��   <��Mv=l
����s?N��?*�5�
��n��a�J  ��b��󄆀�^�R�ʕ����+4��}|B�Bdm��?��D���  ��;X�<�v>)�O|�U����G����th�G�:��@��ok��m��c�$'r�E�x�b��RJ)?��阾������V>[� f����Ӏȿ���]?��aM��  �B �.630U��hYX{�OM(̌͝�7�Q���'緥~�]�5�M�n�il���w�`3S?zq]�� +�a��h�9�w<r_���<0�4	s6z��f�n����O�.��Js��?��Fa��2�W}������
�I~�  0a�,{ǫ��0��
��U�p��0�#  `�h�Y��!:��C���	  (/ǜ����� asu`HH~�	W   c��RG��=cPN�K�0c�Q!���]"�@	�!��&�� C�9^��������ԗ��R�_:����VL�s1�ɿ��Y��0@A!��ԃo�lyg��j�cF^v.��v���#�QH�W�󶣍��\�w0�9�:��4�3U����w�uw��o?ҷ��n9f�t; p���Ӊ��yfU۞G��\B ���R�3n���=��*����^�Ӷ��/	�)�D"  K!�0U�lo���?��W�Vѣs��7(���ol�r�قj
>�	 �/�-6L�:oY8]�?����+�l�/B��!0���<�SB;	X���+�=;@���Ġ��I~��T @Ӱ�+c
����O���l���Ѐ���	�C��K�n�8�t�Y��q;0`���Ν�Ę��iY~W�����\&8�,$��$�}�  0q"�j*��Q\G�L��nL��Ö��B�|�� �/� IU{�xBj�섀W��w�m�7?+��p��IJ'_�/�|�i��ߠ�'z9F�2(&B�+�ӯ�����J����B�3���6!���Z�,db$��dpR�}�7����_T[���$|i�a�M|�b#�{}��{�uۛ�}���� $��-����{q±��BF^�������X"��h@�3�����!`fN�,�<�{�-�������RW/�-L��. >q�掊μ{������ �݇�.��Qё�?L���4H~o� �6r4f��S���+����N�yc�/�h=�#��/a���]���CAV�ԁ��@�?�/�q���ބ�k����-~>fB���{�5-�	�n\f�u�`�]�z&�,��������D�|\����go}f�����?�D�f��ڜ���=�I���K|���3�����E�|����S}�@� .0�~�3g�V��ݓ?�����gF�:��<���8�!( 3�{����A x�/`<@40�0o� Ȅo���NE�����,;,��30H~�9 ����1�K��E��A�ޠ����ǀ��=$�ה�݀P��t;-&*�d��k[VnU��/)���m��$��?��#c�0l�s�L�w�bV~�D����-��Xf�����xl�)7<�n�>( D�};v��JK!��{6|Ǫ�����p�ΰ�'�Sx�h^x;~zU���@V|��#O~�):c[{bw��E��H�&���_���/����:�L |��cV|�`�_�&�\�ଢ଼�os�>�0 n2mf����������渁�s����Up
�� p�/~����K_�,�At����v������c���EGY�]� ~7GV��l� �PXʔq���Z�İP x�;�`ǜ��;���obB�14(�M���� ���+Z[��Ou������#>�'���7I%���bb�C�� |`���� �N���@V�O6la��v������j;ݒ��2�'�o>QޥAډA'����f�u����7e����ym�oR8�n|b��#:1H9' B�O�����z�����`lk⦹c�qh�32�����_��ueN( X��0p$����9OL�Zt+�lB ~���@ko�>Y��dϟ;��������'����ƪ���j{�E
 I�#D�d�?�n�<ޮ���G�}-���C�nt
`���^�g��,�=�P Ȃ�`�ƌ'! R|��c_�_��C�o��ʠ�;юA��$�,�:v\wfG���v7�Cko���Ⱥ��P�����+�9�|0�P����� U o�PƖ��3���C �c��S�����򷟔�Ol	ι�� ޠk��I( d����㮋:�B�-�@ko�<��uk���A!`A�|(,@ #����@mG\�m�����֞��݀�c'����7�'$,����0	���څ�?�kK!��@V��5�}�]��]����ps&�0���e�aڃϕwk�����磵g�k6��hn��!�	*0�v��}3��p�k9�n��ۤ������o�_XH� �]�i�-��["�R| '��`�����"B�x> ?lo��[
�!� 
�\�i?�Pޭa���S�Y�[�݀��J��^�!p���l�>�m.�� ]��o-�� ����޺z=�����^���r���p��fdD!0 
��q�y���/������e���_���C �L t�
s������-Q
���֕�\���Z{�bǷ�;�b�:&�d���z{Fo}fz�d������霿�/���B
�p�C��h�1��� P��X���^�u
� �ov\?>�c�aZq��3z�uٞ���,��z�A�Ǡ�*��������*pޠ�^5V9����D� �� ��`�x����39������s����nbz�AW' B�*H
���>O� L�|�t�F�d���찟����1Lp���(�c
t?Y��@S ����<^� $��|���H�LV���9��w[h&� �Ġ���;��;$n�+2�" !�P�qF�d��ʵ�g���� W���<vr�-�e.o�" !��K�z&��W�E��L���8�~M/�A+�����<@�EC1kJ���+�
�2m�����O��H��? o� �f�촒��`py?�����j�<��^Y ��AR�mʔwjʐ!�g2����c�G2��N=�T�/�.��N�^��a�*�����}���H@X)-Ŵ��˻4e�6 ��a=��YvR�Kb��J��cE7焴�/D
�ڣ#�%���� 3c�`ڢ}�B@�d��װ�#�L/U����7^2�� �8>V �9W{9mP ��I�0�7{ʻ4��>��,�r-:;;-^=6�FP�����R�b�Ɇ@o,�e��)Q"h+p�y�]�wzG���[�l}�8ӕ�����[<��n�`$�@�>� 4��hcq�\q�J� "�d$n�ab|)�YC}W�{|@���������� �S���ނ!����z\*׍276t!@9j�������g��*( "I57�S���������MP D�J$f�cg�k!�^��
�Hs7<�1m�@�z}��H�C��#�{�\�`7�K���iin��D��^�Lg˝�%B���o�*��� �o�������+W�� 0�j	^�#J��d4����������q�uez�  B�߶<��Udn����e�*��;{�X����r]�� �~$n��Jo�9���������@�ڒ�s� 1����q�z��W�#���

 � ���s�]���g�&( �!I̙��ޥ �q�� ��-�Է"( ���͞�p/�$���!��wi�-�-��  �ō���2m_���_Nc���5H �)D����	��o���?���}�$
 �$�(����C ��g�VT���:���F �$=�Z��n��� �1{�[y���R�/�X^�A�.��B ��k��C��%��/�俄t!@@X�t-~��U����^�M�]��@�� � ��  IDAT l�Gt-��n��7�A�g�\^��H4	H8�e���О�57k
қ���?� _') �Ԡt�]q��A��K�� � �Q:�n�!�^�%��o!@@b
Jg����B�?_B����Q:�A�!��
�� �9T�XKnY��* !�}�Y�`7�,m���e�?��* ����?+�t& !�����b5W� p�)ž�z�Am�*V����$�q0%����- �%(���8��@��?��������mx��.�����Գ�    IEND�B`�(   0   `                             �S �X	 �]  �Z �` �i �4 �� ��0 ��X ��Z ��[                 ��������������������������������33�����������������333����������������33331����������������33333�����������������#333333�����������������@3333<����������������we 333<����������������wvP3����������������Ȉ�we23����������������Ȉ��vS",���������������Ȉ���we"<���������������Ȉ����v����������������̈�����������������������Ȉ����������������������̈�����������������������Ȉ������������������ʬ��̈������������������ʪ���Ȉ����������������ʪ����̈����������������ʪ�����ɪ��������������ʪ������̪��������������˻�������ʪ������������˻��������̪������������˻���������ʪ�����������̻���������̪������������˻����������������������̻�����������������������˻����������������������̻�����������������������˻����������������������̻�����������������������˻����������������������̻�����������������������˻����������������������̻�����������������������˻����������������������̻�����������������������˻����������������������̻�����������������������˻����������������������̻�����������������������˻����������������������̻�����������������������˻����������������������̻�����������������������˺����������������������̪������������� ?  ���� ?  ����   ����   �����  ��� �  ��� �  ��� �  ��� ?�  ��� ?�  ��� �  ��� �  �����  �� ��  ��� ��  ��� �  ��� ?�  ��� �  ��� �  ��� �  ��� �  �  �  � ?� �  � �   � � ?  � �   � ���  � ���  �� ���  �� ��  �� ?��  �� ��  �� ��  �� ��  �� ��  �� ��  ��� ��  ��� �  ��� ?�  ��� �  ��� �  ��� �  ��� �  ��� �  ���� �  ����   ���� ?  ����   (       @                             �S �X	 �]  �Z �v �� ��0 ��J ��X ��Z ��[                     ����������1�����������33�����������333�����������3333;�����������@33�����������UT3;�����������fUC#�����������ffeT+�����������ffff������������fffg�������������ffx�������������fg���������������y��������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������������?�� �� ��������������������x��~ �� ��?�������� ��� �� �� ��������������� ��� �� �� ������(                                    �X	 �]  �Z ŉ �� ��0 ��X ��Z ��[                             �����  �����""	�����0"�����UC�����UU������UVi����y�gf����w�wvi����y����������������y����������������y�������w�������wy������wv���  �  �  �  �?  �  �  �  ��  ��  �  �?  �  �  �  �  (   0   `                             �P �S �T �X �X �V �W
 �W
 �Y �X
 �Y �Z �Z �Z �Z	 �[ �[ �[	 �\ �a �c �e �h �k �l �n ��, ��- ��- �- ��0 ��1 ��2 ��3 ��4 ��; ��; ��< ��= ��V ��X ��Y ��Y ��Z ��[ ��[ ��\ ��] ��^ ��_ ��` ��a                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444	44444444444444444444444444444444 44444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444 4444444444444444444444444444444444!   #'4444444444444444444444444444444444!    $(+*4444444444444444444444444444444444"     %(+++*4444444444444444444444444444444444"!     %),++++*4444444444444444444444444//4444444"!!  %*,,,,+++*444444444444444444444444///4444444"!!&*--,,,,+++*444444444444444444444//////4444444"&+.---,,,,+++*444444444444444444440000///4444444*...---,,,+++**44444444444444444000000000/4444444/...---,,,+++**4444444444444444111110000004444444/...---,,,+++**4444444444444111111111100004444444/...---,,,+++**4444444444441111111111110004444444/...---,,+++***4444444444441111111111110004444444....--,,,+++***4444444444441111111111111004444444444444444444444444444444444222211111111100444444444444444444444444444444444422222111111110044444444444444444444444444444444443222221111111004444444444444444444444444444444444332222111111100444444444444444444444444444444444433322221111110044444444444444444444444444444444443332222111110004444444444444444444444444444444444333222111111000444444444444444444444444444444444433322211111000/44444444444444444444444444444444443332221111100//44444444444444444444444444444444443332211111000//4444444444444444444444444444444444332221111100///444444444444444444444444444444444433221111100////444444444444444444444444444444444432211111000////44444444444444444444444444444444442221111000////.4444444444444444444444444444444444221111100////..444444444444444444444444444444444421111100/////..44444444444444444444444444444444441111100/////..-4444444444444444444444444444444444111100/////..--444444444444444444444444444444444411100/////..--,44444444444444444444444444444444441100/////..--,,4444444444444444444444444444444444000////...--,,,44444���� ?  ���� ?  ����   ����   �����  ��� �  ��� �  ��� �  ��� ?�  ��� ?�  ��� �  ��� �  �����  �� ��  ��� ��  ��� �  ��� ?�  ��� �  ��� �  ��� �  ��� �  �  �  � ?� �  � �   � � ?  � �   � ���  � ���  �� ���  �� ��  �� ?��  �� ��  �� ��  �� ��  �� ��  �� ��  ��� ��  ��� �  ��� ?�  ��� �  ��� �  ��� �  ��� �  ��� �  ���� �  ����   ���� ?  ����   (       @                             �T �X �U �X �W
 �Y �Z �Y	 �Z �Z �Z	 �[ �\ �s �u �x �z �. �/ �/ ��0 ��1 ��2 ��3 ��M ��N ��Y ��Z ��[ ��[ ��\ ��] ��^ ��_ ��` ��a                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                 $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$ 	$$$$$$$$$$$$$$$$$$$$$$
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$  $$$$$$$$$$$$$$$$$       $$$$$$$$$$$$$$$!!!!!    $$$$$$$$$$$$!!!!!!!!  $$$$$$$$$$$$$$!!!!!!!!!  $$$$$$$$$$$$$$$$$$$$""""!!!!!  $$$$$$$$$$$$$$$$$$$$$$""""!!!!!  $$$$$$$$$$$$$$$$$$$$$$##"""!!!! $$$$$$$$$$$$$$$$$$$$$$$###""!!!!  $$$$$$$$$$$$$$$$$$$$$$###""!!!  $$$$$$$$$$$$$$$$$$$$$$###"!!!! $$$$$$$$$$$$$$$$$$$$$$##""!!!  $$$$$$$$$$$$$$$$$$$$$$$##"!!!! $$$$$$$$$$$$$$$$$$$$$$#""!!! $$$$$$$$$$$$$$$$$$$$$$""!!!  $$$$$$$$$$$$$$$$$$$$$$"!!!  $$$$$$$$$$$$$$$$$$$$$$$!!!  $$$$$$$$$$$$$$$$$$$$$$!!  $$$$$$$$$$$$$$$$$$$$$$!  $$$���������?�� �� ��������������������x��~ �� ��?�������� ��� �� �� ��������������� ��� �� �� ������(                                    �X �X �Y �X	 �Z �Z �[ �\ Ň  Ǌ ��0 ��1 ��2 ��3 ��8 ��8 ��: ��W ��X ��Y ��Z ��[ ��[ ��\ ��] ��^ ��_ ��` ��a                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              

	��  �  �  �  �?  �  �  �  ��  ��  �  �?  �  �  �  �  (   0   `                                                                                                                                          �Z
�ZÝZ��Y��Y��Y��Y��Y��X��X��X��X��X��X��X��WϛW                                                                                                                        �Z�ZZ��Z��Z��Z��Y��Y��Y��Y��X��X��X��X��X��XΛX                                                                                                                        �Z
�ZZ��Z��Z��Z��Z��Z��Z��Y��Y��Y��Y��X��X��XΛX                                                                                                                        �[�[Z��Z��Z��Z��Z��Z��Z��Z��Z��Y��Y��Y��Y��XΜX                                                                                                                        �[
�[[��[��[��Z��Z��Z��Z��Z��Z��Z��Z��Y��Y��YΜY                                                                                                                        ��/
�n\��[��[��[��[��[��Z��Z��Z��Z��Z��Z��Z��ZΜY                                                                                                                        ��2��/���,��a��S��X
��[��[��[��[��Z��Z��Z��Z��Z��ZΝZ                                                                                                                        ��0
��0���0���0���-��c��P��S��W
��Z��[��[��[��Z��Z��ZΝZ                                                                                                                        ��2��1���0���0���0���0���-��e��T��V��W
��Y��[��[��[��ZΝZ                                                                                                                        ��2��1���1���1���1���0���0���0���-��h��W
��Z	��[��\��[��[Ν[                                                                                                                        ��1
��1���1���1���1���1���1���1���0���0���-��k��[	��\��\��\Ν[                                                                                                                        ��2��1���1���1���1���1���1���1���1���1���0���0��-��l��\��\Ξ[                                                                                                                        ��2
��2���2���1���1���1���1���1���1���1���1���1���1���0��-��pϞ[
                                                                                                                            ��6
��3���2���2���2���1���1���1���1���1���1���1���1���1���;���V���Y                                                                                                                                ��6
��3���2���2���2���2���1���1���1���1���1���1���;���X���Z���Y���Y                                                                                                                                ��7��4���2���2���2���2���2���1���1���1���<���X���Z���Z���Z���Y���Y                                                                                                    ��]��]                    ��6
��4���3���2���2���2���2���2���<���Y���[���Z���Z���Z���Z���Y���Y                                                                                            ��]
��]���]���]                    ��7
��4���3���3���2���2���<���Y���[���[���[���[���Z���Z���Z���Y���Y                                                                                    ��]��]���]���]���]���^                    ��7
��4���3���3���=���Y���[���[���[���[���[���[���Z���Z���Z���Y���Y                                                                            ��^��]���]���]���]���]���]���^                    ��6
��4���=���Z���\���[���[���[���[���[���[���[���Z���Z���Z���Y���Y                                                                    ��^
��^���^���^���^���^���]���]���]���^                    ��8��Y���\���\���\���[���[���[���[���[���[���Z���Z���Z���Y���Y���Y                                                            ��_��^���^���^���^���^���^���^���^���^���]���^                    ��]	��]���\���\���\���[���[���[���[���[���[���Z���Z���Z���Y���Y���Y                                                    ��_
��_���_���_���_���_���_���^���^���^���^���^���^���^                    ��]	��]���\���\���\���[���[���[���[���[���[���Z���Z���Z���Y���Y���Y                                            ��_
��_���_���_���_���_���_���_���_���_���_���^���^���^���^���^                    ��]	��]���\���\���\���[���[���[���[���[���[���Z���Z���Z���Y���Y���Y                                        ��_
��_���_���_���_���_���_���_���_���_���_���_���_���^���^���^���^                    ��]	��]���\���\���\���[���[���[���[���[���Z���Z���Z���Y���Y���Y���Y                                        ��_
��_���_���_���_���_���_���_���_���_���_���_���_���^���^���^���^                    ��\	��\���\���\���\���[���[���[���[���[���Z���Z���Z���Y���Y���Y���Y
                                        ��_��_���_���_���_���_���_���_���_���_���_���_���_���_���^���^���^                                                                                                                                ��`
��`���`���`���`���_���_���_���_���_���_���_���_���_���^���^���^                                                                                                                                ��`��`���`���`���`���`���_���_���_���_���_���_���_���_���^���^���^                                                                                                                                ��`��a���`���`���`���`���`���_���_���_���_���_���_���_���^���^���^                                                                                                                                ��a
��a���a���`���`���`���`���_���_���_���_���_���_���_���^���^���^                                                                                                                                ��a��a���a���a���`���`���`���`���_���_���_���_���_���_���^���^���^                                                                                                                                ��a
��a���a���a���`���`���`���`���_���_���_���_���_���^���^���^���]                                                                                                                                ��a��a���a���a���`���`���`���_���_���_���_���_���_���^���^���^���]                                                                                                                                ��a��a���a���a���`���`���`���_���_���_���_���_���^���^���^���]���]                                                                                                                                ��a
��a���a���a���`���`���`���_���_���_���_���_���^���^���]���]���]                                                                                                                                ��a��a���a���a���`���`���_���_���_���_���_���^���^���^���]���]���]                                                                                                                                ��a
��a���a���`���`���`���_���_���_���_���_���^���^���]���]���]���]                                                                                                                                ��a��a���a���`���`���_���_���_���_���_���^���^���]���]���]���]���]                                                                                                                                ��a��a���`���`���_���_���_���_���_���^���^���^���]���]���]���]���]                                                                                                                                ��a
��`���`���`���_���_���_���_���^���^���^���]���]���]���]���\���\                                                                                                                                ��`��`���`���_���_���_���_���_���^���^���]���]���]���]���\���\���\                                                                                                                                ��`
��`���_���_���_���_���_���^���^���]���]���]���]���]���\���\���[                                                                                                                                ��`
��_���_���_���_���_���^���^���]���]���]���]���]���\���\���[���[                                                                                                                                ��_��_���_���_���_���^���^���]���]���]���]���]���\���\���[���[���[                                                                                                                                ��_
��_���_���_���^���^���]���]���]���]���]���\���\���[���[���[���[                                                                                                                                ��_��_���_���^���^���]���]���]���]���]���\���\���[���[���[���[���[                                                                                                                                ��_
��^���^���^���]���]���]���]���\���\���\���[���[���[���[���[���Z                ����   ����   ���� ?  ���    ���  �  ��� �  ��� �  ��� �  ��� �  ��� �  ��� ?�  ��  �  ��  ��  ��  ��  ��  �  ��� ?�  ��� �  ��� �  ��� �  � � �  � | �  � >  �  �     � � ?  � �   � �   � ���  �  ���  �  ��  �� ?��  �� ��  �� ��  �� ��  �� ��  �� ��  ��  ��  ��  �  ��� ?�  ��� �  ��� �  ��� �  ��� �  ��� �  ���  �  ���    ���� ?  ����   ����   (       @                                                                                                      �Zf�Z��Z��Y��Y��X��X��X��X��X��Wf                                                                                �Zf�Z��Z��Z��Z��Y��Y��Y��X��X��Xf                                                                                �[f�[��Z��Z��Z��Z��Z��Z��Y��Y��Xf                                                                                �tf�[��[��[��[��Z��Z��Z��Z��Z��Yf                                                                                ��0f�.��s��U��Y	��[��[��Z��Z��Z��Zf                                                                                ��1f��0���0��/��u��T��W
��Z��[��[��Zf                                                                                ��1f��1���1���1���0��/��x��Z	��\��[��[f                                                                                ��1f��1���1���1���1���1���0��/��z��\��\f                                                                                ��2=��2���2���1���1���1���1���1���1��/�˓4�                                                                                    �8 ��2���2���2���2���1���1���1���1���M���Y���Y=                                                                                    ��b ��3���2���2���2���1���1���M���Z���Z���Y���Y=                                                                ��]f��]f            �1 ��3���3���2���2���N���[���[���Z���Z���Y���Y=                                                        ��]f��]���]���]f            �: ��3���3���N���[���[���[���[���Z���Z���Y���Y=                                                ��^f��^���^���]���]���]f            �9 ��O���\���\���[���[���[���[���Z���Z���Y���Y=                                        ��_f��^���^���^���^���^���^���^f            ��Z ��\���\���\���[���[���[���[���Z���Z���Y���Y=                                ��_f��_���_���_���_���_���^���^���^���^f            ��  ��\���\���\���[���[���[���[���Z���Z���Y���Y=                            ��_f��_���_���_���_���_���_���_���^���^���^f            ��a ��\���\���\���[���[���[���Z���Z���Y���Y���Y=                            ��_f��_���_���_���_���_���_���_���_���^���^f            ��b ��\3��\3��[3��[3��[3��[3��Z3��Z3��Y3��Y)                                ��`f��`���`���`���_���_���_���_���_���^���^f                                                                                        ��`f��`���`���`���_���_���_���_���_���^���^f                                                                                        ��af��a���`���`���`���_���_���_���_���^���^f                                                                                        ��af��a���a���`���`���_���_���_���_���^���^f                                                                                        ��af��a���a���`���`���_���_���_���^���^���]f                                                                                        ��af��a���a���`���_���_���_���_���^���]���]f                                                                                        ��af��a���`���`���_���_���_���^���^���]���]f                                                                                        ��af��a���`���_���_���_���_���^���]���]���]f                                                                                        ��af��`���`���_���_���_���^���]���]���]���]f                                                                                        ��`f��`���_���_���_���^���^���]���]���]���\f                                                                                        ��`f��_���_���_���^���^���]���]���]���\���[f                                                                                        ��_f��_���_���^���^���]���]���]���\���[���[f                                                                                        ��_f��_���^���^���]���]���]���\���[���[���[f                                                                                        ��_f��^���^���]���]���]���\���[���[���[���Zf            �������� �� ?�� �� �����������������x ��< � ?� ������� ��� �� ?�� ��������������� ��� �� ?�� ������(                                                                     �Z�Z��Z��Y��X��X��W                                ���[��Z��Z��Z��Y��X                                ��1��0�Ň ��X	��[��Z��Z                                ��1��1���1���0�Ǌ��\��[                                    ��2���2���1���1���8��Oz                                ��]��]    ��3���2���8���W���Z���Yf                        ��^��]���]���]    ��:���X���[���[���Z���Yf                ��_��_���_���^���^���^    ��\���\���[���[���Z���Yf            ��_��_���_���_���_���^���^    ��\z��[���[���Z���Y���Y            ��`��`���`���_���_���^���^                                        ��a��a���`���_���_���^���^                                        ��a��a���`���_���_���^���]                                        ��a��a���`���_���^���]���]                                        ��a��`���_���^���]���]���\                                        ��`��_���_���]���]���\���[                                        ��_��_���]���]���\���[���[    �  �  �  �  �  �  �  �  ��  �  �?  �  �  �  �  �  

# WorkspaceSettings.xcsettings

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>PreviewsEnabled</key>
	<false/>
</dict>
</plist>


# Contents.json

{
  "images" : [
    {
      "idiom" : "universal",
      "filename" : "LaunchImage.png",
      "scale" : "1x"
    },
    {
      "idiom" : "universal",
      "filename" : "LaunchImage@2x.png",
      "scale" : "2x"
    },
    {
      "idiom" : "universal",
      "filename" : "LaunchImage@3x.png",
      "scale" : "3x"
    }
  ],
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


# Contents.json

{
  "images" : [
    {
      "size" : "20x20",
      "idiom" : "iphone",
      "filename" : "Icon-App-20x20@2x.png",
      "scale" : "2x"
    },
    {
      "size" : "20x20",
      "idiom" : "iphone",
      "filename" : "Icon-App-20x20@3x.png",
      "scale" : "3x"
    },
    {
      "size" : "29x29",
      "idiom" : "iphone",
      "filename" : "Icon-App-29x29@1x.png",
      "scale" : "1x"
    },
    {
      "size" : "29x29",
      "idiom" : "iphone",
      "filename" : "Icon-App-29x29@2x.png",
      "scale" : "2x"
    },
    {
      "size" : "29x29",
      "idiom" : "iphone",
      "filename" : "Icon-App-29x29@3x.png",
      "scale" : "3x"
    },
    {
      "size" : "40x40",
      "idiom" : "iphone",
      "filename" : "Icon-App-40x40@2x.png",
      "scale" : "2x"
    },
    {
      "size" : "40x40",
      "idiom" : "iphone",
      "filename" : "Icon-App-40x40@3x.png",
      "scale" : "3x"
    },
    {
      "size" : "60x60",
      "idiom" : "iphone",
      "filename" : "Icon-App-60x60@2x.png",
      "scale" : "2x"
    },
    {
      "size" : "60x60",
      "idiom" : "iphone",
      "filename" : "Icon-App-60x60@3x.png",
      "scale" : "3x"
    },
    {
      "size" : "20x20",
      "idiom" : "ipad",
      "filename" : "Icon-App-20x20@1x.png",
      "scale" : "1x"
    },
    {
      "size" : "20x20",
      "idiom" : "ipad",
      "filename" : "Icon-App-20x20@2x.png",
      "scale" : "2x"
    },
    {
      "size" : "29x29",
      "idiom" : "ipad",
      "filename" : "Icon-App-29x29@1x.png",
      "scale" : "1x"
    },
    {
      "size" : "29x29",
      "idiom" : "ipad",
      "filename" : "Icon-App-29x29@2x.png",
      "scale" : "2x"
    },
    {
      "size" : "40x40",
      "idiom" : "ipad",
      "filename" : "Icon-App-40x40@1x.png",
      "scale" : "1x"
    },
    {
      "size" : "40x40",
      "idiom" : "ipad",
      "filename" : "Icon-App-40x40@2x.png",
      "scale" : "2x"
    },
    {
      "size" : "76x76",
      "idiom" : "ipad",
      "filename" : "Icon-App-76x76@1x.png",
      "scale" : "1x"
    },
    {
      "size" : "76x76",
      "idiom" : "ipad",
      "filename" : "Icon-App-76x76@2x.png",
      "scale" : "2x"
    },
    {
      "size" : "83.5x83.5",
      "idiom" : "ipad",
      "filename" : "Icon-App-83.5x83.5@2x.png",
      "scale" : "2x"
    },
    {
      "size" : "1024x1024",
      "idiom" : "ios-marketing",
      "filename" : "Icon-App-1024x1024@1x.png",
      "scale" : "1x"
    }
  ],
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


# README.md

# Launch Screen Assets

You can customize the launch screen with your own desired assets by replacing the image files in this directory.

You can also do it by opening your Flutter project's Xcode project with `open ios/Runner.xcworkspace`, selecting `Runner/Assets.xcassets` in the Project Navigator and dropping in the desired images.

# IDEWorkspaceChecks.plist

<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDEDidComputeMac32BitWarning</key>
	<true/>
</dict>
</plist>


# Contents.json

{
  "images" : [
    {
      "size" : "16x16",
      "idiom" : "mac",
      "filename" : "app_icon_16.png",
      "scale" : "1x"
    },
    {
      "size" : "16x16",
      "idiom" : "mac",
      "filename" : "app_icon_32.png",
      "scale" : "2x"
    },
    {
      "size" : "32x32",
      "idiom" : "mac",
      "filename" : "app_icon_32.png",
      "scale" : "1x"
    },
    {
      "size" : "32x32",
      "idiom" : "mac",
      "filename" : "app_icon_64.png",
      "scale" : "2x"
    },
    {
      "size" : "128x128",
      "idiom" : "mac",
      "filename" : "app_icon_128.png",
      "scale" : "1x"
    },
    {
      "size" : "128x128",
      "idiom" : "mac",
      "filename" : "app_icon_256.png",
      "scale" : "2x"
    },
    {
      "size" : "256x256",
      "idiom" : "mac",
      "filename" : "app_icon_256.png",
      "scale" : "1x"
    },
    {
      "size" : "256x256",
      "idiom" : "mac",
      "filename" : "app_icon_512.png",
      "scale" : "2x"
    },
    {
      "size" : "512x512",
      "idiom" : "mac",
      "filename" : "app_icon_512.png",
      "scale" : "1x"
    },
    {
      "size" : "512x512",
      "idiom" : "mac",
      "filename" : "app_icon_1024.png",
      "scale" : "2x"
    }
  ],
  "info" : {
    "version" : 1,
    "author" : "xcode"
  }
}


# Runner.xcscheme

<?xml version="1.0" encoding="UTF-8"?>
<Scheme
   LastUpgradeVersion = "1430"
   version = "1.3">
   <BuildAction
      parallelizeBuildables = "YES"
      buildImplicitDependencies = "YES">
      <BuildActionEntries>
         <BuildActionEntry
            buildForTesting = "YES"
            buildForRunning = "YES"
            buildForProfiling = "YES"
            buildForArchiving = "YES"
            buildForAnalyzing = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "33CC10EC2044A3C60003C045"
               BuildableName = "irctc_ui.app"
               BlueprintName = "Runner"
               ReferencedContainer = "container:Runner.xcodeproj">
            </BuildableReference>
         </BuildActionEntry>
      </BuildActionEntries>
   </BuildAction>
   <TestAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      shouldUseLaunchSchemeArgsEnv = "YES">
      <MacroExpansion>
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "33CC10EC2044A3C60003C045"
            BuildableName = "irctc_ui.app"
            BlueprintName = "Runner"
            ReferencedContainer = "container:Runner.xcodeproj">
         </BuildableReference>
      </MacroExpansion>
      <Testables>
         <TestableReference
            skipped = "NO"
            parallelizable = "YES">
            <BuildableReference
               BuildableIdentifier = "primary"
               BlueprintIdentifier = "331C80D4294CF70F00263BE5"
               BuildableName = "RunnerTests.xctest"
               BlueprintName = "RunnerTests"
               ReferencedContainer = "container:Runner.xcodeproj">
            </BuildableReference>
         </TestableReference>
      </Testables>
   </TestAction>
   <LaunchAction
      buildConfiguration = "Debug"
      selectedDebuggerIdentifier = "Xcode.DebuggerFoundation.Debugger.LLDB"
      selectedLauncherIdentifier = "Xcode.DebuggerFoundation.Launcher.LLDB"
      launchStyle = "0"
      useCustomWorkingDirectory = "NO"
      ignoresPersistentStateOnLaunch = "NO"
      debugDocumentVersioning = "YES"
      debugServiceExtension = "internal"
      allowLocationSimulation = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "33CC10EC2044A3C60003C045"
            BuildableName = "irctc_ui.app"
            BlueprintName = "Runner"
            ReferencedContainer = "container:Runner.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </LaunchAction>
   <ProfileAction
      buildConfiguration = "Profile"
      shouldUseLaunchSchemeArgsEnv = "YES"
      savedToolIdentifier = ""
      useCustomWorkingDirectory = "NO"
      debugDocumentVersioning = "YES">
      <BuildableProductRunnable
         runnableDebuggingMode = "0">
         <BuildableReference
            BuildableIdentifier = "primary"
            BlueprintIdentifier = "33CC10EC2044A3C60003C045"
            BuildableName = "irctc_ui.app"
            BlueprintName = "Runner"
            ReferencedContainer = "container:Runner.xcodeproj">
         </BuildableReference>
      </BuildableProductRunnable>
   </ProfileAction>
   <AnalyzeAction
      buildConfiguration = "Debug">
   </AnalyzeAction>
   <ArchiveAction
      buildConfiguration = "Release"
      revealArchiveInOrganizer = "YES">
   </ArchiveAction>
</Scheme>


# launch_background.xml

<?xml version="1.0" encoding="utf-8"?>
<!-- Modify this file to customize your launch splash screen -->
<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:drawable="@android:color/white" />

    <!-- You can insert your own image assets here -->
    <!-- <item>
        <bitmap
            android:gravity="center"
            android:src="@mipmap/launch_image" />
    </item> -->
</layer-list>


# launch_background.xml

<?xml version="1.0" encoding="utf-8"?>
<!-- Modify this file to customize your launch splash screen -->
<layer-list xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:drawable="?android:colorBackground" />

    <!-- You can insert your own image assets here -->
    <!-- <item>
        <bitmap
            android:gravity="center"
            android:src="@mipmap/launch_image" />
    </item> -->
</layer-list>


# styles.xml

<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Theme applied to the Android Window while the process is starting when the OS's Dark Mode setting is off -->
    <style name="LaunchTheme" parent="@android:style/Theme.Light.NoTitleBar">
        <!-- Show a splash screen on the activity. Automatically removed when
             the Flutter engine draws its first frame -->
        <item name="android:windowBackground">@drawable/launch_background</item>
    </style>
    <!-- Theme applied to the Android Window as soon as the process has started.
         This theme determines the color of the Android Window while your
         Flutter UI initializes, as well as behind your Flutter UI while its
         running.

         This Theme is only used starting with V2 of Flutter's Android embedding. -->
    <style name="NormalTheme" parent="@android:style/Theme.Light.NoTitleBar">
        <item name="android:windowBackground">?android:colorBackground</item>
    </style>
</resources>


# styles.xml

<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- Theme applied to the Android Window while the process is starting when the OS's Dark Mode setting is on -->
    <style name="LaunchTheme" parent="@android:style/Theme.Black.NoTitleBar">
        <!-- Show a splash screen on the activity. Automatically removed when
             the Flutter engine draws its first frame -->
        <item name="android:windowBackground">@drawable/launch_background</item>
    </style>
    <!-- Theme applied to the Android Window as soon as the process has started.
         This theme determines the color of the Android Window while your
         Flutter UI initializes, as well as behind your Flutter UI while its
         running.

         This Theme is only used starting with V2 of Flutter's Android embedding. -->
    <style name="NormalTheme" parent="@android:style/Theme.Black.NoTitleBar">
        <item name="android:windowBackground">?android:colorBackground</item>
    </style>
</resources>


# MainActivity.kt

package com.example.irctc_ui

import io.flutter.embedding.android.FlutterActivity

class MainActivity: FlutterActivity() {
}


